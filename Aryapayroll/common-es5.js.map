{"version":3,"sources":["webpack:///src/app/pages/roles/roles-service/roles.service.ts","webpack:///src/app/pages/job category/jobCategory-service/jobCategory-api.service.ts","webpack:///src/app/pages/document-types/document-services/document.services.ts","webpack:///src/app/pages/skill-category/skillCategory-service/skillCategory-api.service.ts","webpack:///src/app/pages/leave-types/service-leave/leave-api.service.ts","webpack:///src/app/pages/graderule/graderule-service/graderule-api.service.ts"],"names":["RolesService","http","endpoint","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","message","status","console","log","err","apiUrl","get","pipe","errorMgmt","data","userId","localStorage","getItem","post","roleId","permissionId","apiURL","providedIn","JobCategoryApiService","companyId","sessionStorage","jobCategoryId","DocumentServices","documentTypeId","skillCategoryApiService","skillCategoryId","LeaveApiService","leaveTypeId","GraderuleApiService","percentOfValue","paymentHead","fixedPercentOfName","fixedPercentOfId","gradeRuleId","paymentHeadsId","percent","paymentHeadId"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaA,Y;AAKX,8BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB;;AACA,eAAAC,QAAA,GAAmB,yEAAYC,UAA/B;AACA,eAAAC,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,mCAAtC,CAAV,CAEsC,CAF+C;AAE5C;AAE3C;;;;;oCACUC,K,EAA0B;AAClC,gBAAI;AACF,kBAAIC,YAAY,GAAG,EAAnB;AACA;;AACA,kBAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrCD,4BAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD;AACD;AAHA,mBAIK;AACHF,8BAAY,wBAAiBD,KAAK,CAACI,MAAvB,uBAA0CH,YAA1C,CAAZ;AACD;;AACDI,qBAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aAZD,CAaA,OAAOM,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF,W,CAEC;;;;6CACgB;AACd,gBAAI;AACF,kBAAMK,MAAM,aAAM,KAAKZ,QAAX,qBAAZ;AACA,qBAAO,KAAKD,IAAL,CAAUc,GAAV,CAAcD,MAAd,EAAsBE,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKE,OAAOJ,GAAP,EAAY;AACZF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF,W,CAED;;;;kCACQS,I,EAAI;AACV,gBAAI;AACF,kBAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AACA,kBAAIP,MAAM,aAAM,KAAKZ,QAAX,4BAAqCiB,MAArC,CAAV;AACA,qBAAO,KAAKlB,IAAL,CAAUqB,IAAV,CAAeR,MAAf,EAAuBI,IAAvB,EAA6BF,IAA7B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAME,OAAOJ,GAAP,EAAY,CAEb;AACF,W,CAED;;;;wCACW;AACT,gBAAI;AACF,kBAAIM,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACA,kBAAMP,MAAM,aAAM,KAAKZ,QAAX,iCAA0CiB,MAA1C,CAAZ;AACA,qBAAO,KAAKlB,IAAL,CAAUc,GAAV,CAAcD,MAAd,EAAsBE,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAME,OAAOJ,GAAP,EAAY;AACZF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF,W,CAED;;;;6CACmBc,M,EAAM;AACvB,gBAAI;AACF,kBAAMT,MAAM,aAAM,KAAKZ,QAAX,wCAAiDqB,MAAjD,CAAZ;AACA,qBAAO,KAAKtB,IAAL,CAAUc,GAAV,CAAcD,MAAd,EAAsBE,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKE,OAAOJ,GAAP,EAAY;AACZF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF,W,CAED;;;;qCACWS,I,EAAKK,M,EAAM;AACpB,gBAAI;AACF,kBAAMJ,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AACA,kBAAIP,MAAM,aAAM,KAAKZ,QAAX,+BAAwCiB,MAAxC,cAAkDI,MAAlD,CAAV;AACA,qBAAO,KAAKtB,IAAL,CAAUqB,IAAV,CAAeR,MAAf,EAAuBI,IAAvB,EAA6BF,IAA7B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAME,OAAOJ,GAAP,EAAY,CAEb;AACF,W,CAED;;;;oDAC0BU,M,EAAM;AAC9B,gBAAI;AACF,kBAAMT,MAAM,aAAM,KAAKZ,QAAX,+CAAwDqB,MAAxD,CAAZ;AACA,qBAAO,KAAKtB,IAAL,CAAUc,GAAV,CAAcD,MAAd,EAAsBE,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKE,OAAOJ,GAAP,EAAY;AACZF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF,W,CAED;;;;gDACsBS,I,EAAKK,M,EAAM;AAC/B,gBAAI;AACF,kBAAMJ,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AACA,kBAAIP,MAAM,aAAM,KAAKZ,QAAX,0CAAmDiB,MAAnD,cAA6DI,MAA7D,CAAV;AACA,qBAAO,KAAKtB,IAAL,CAAUqB,IAAV,CAAeR,MAAf,EAAuBI,IAAvB,EAA6BF,IAA7B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAME,OAAOX,KAAP,EAAc;AACdK,qBAAO,CAACC,GAAR,CAAYN,KAAZ;AACD;AACF,W,CAED;;;;2CACiBiB,M,EAAOC,Y,EAAY;AAClC,gBAAI;AACF,kBAAIC,MAAM,aAAM,KAAKvB,QAAX,qCAA8CsB,YAA9C,cAA8DD,MAA9D,CAAV;AACA,qBAAO,KAAKtB,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKE,OAAOX,KAAP,EAAc;AACdK,qBAAO,CAACC,GAAR,CAAYN,KAAZ;AACD;AACF;;;;;;;yBA7HUN,Y,EAAY,uH;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACV0B,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,qB;AAMX,uCAAoB1B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB;;AACA,eAAAC,QAAA,GAAmB,sEAAYC,UAA/B;AACA,eAAAC,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,mCAAtC,CAAV,CAEsC,CAF+C;AAE5C;AAEzC;;;;;oCACUC,K,EAA0B;AAClC,gBAAI;AACF,kBAAIC,YAAY,GAAG,EAAnB;AACA;;AACA,kBAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrCD,4BAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD;AACD;AAHA,mBAIK;AACHF,8BAAY,wBAAiBD,KAAK,CAACI,MAAvB,uBAA0CH,YAA1C,CAAZ;AACD;;AACDI,qBAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aAZD,CAaA,OAAOM,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF;AAED;;;;+CACkB;AAChB,gBAAI;AACF,kBAAMmB,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,0CAAmD0B,SAAnD,CAAV;AACC,qBAAO,KAAK3B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aAND,CAOA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;6CAEkBiB,a,EAAoB;AACrC,gBAAI;AACF,kBAAIL,MAAM,aAAM,KAAKvB,QAAX,2CAAoD4B,aAApD,CAAV;AACC,qBAAO,KAAK7B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aALD,CAMA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AACH;;;;wCACgBK,I,EAAQ;AACpB,gBAAG;AACD,kBAAMU,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACAV,qBAAO,CAACC,GAAR,CAAYgB,SAAZ;AACA,kBAAIH,MAAM,aAAM,KAAKvB,QAAX,uCAAgD0B,SAAhD,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAPD,CAQA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;4CACkBK,I,EAAgBY,a,EAAoB;AACpD,gBAAI;AACF,kBAAMF,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,0CAAmD0B,SAAnD,cAAgEE,aAAhE,CAAV;AACA,qBAAO,KAAK7B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAOA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;qCACWiB,a,EAAoB;AAC7B,gBAAG;AACD,kBAAIL,MAAM,aAAM,KAAKvB,QAAX,0CAAmD4B,aAAnD,CAAV;AACA,qBAAO,KAAK7B,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAU;AACRF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;;;;;yBA7FUc,qB,EAAqB,uH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAHpB;;;;;wEAGDA,qB,EAAqB;gBAJjC,wDAIiC;iBAJtB;AACVD,sBAAU,EAAE;AADF,W;AAIsB,U;;;;;;;;;;;;;;;;;;;;;;ACZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaK,gB;AAMX,kCAAoB9B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB;;AACA,eAAAC,QAAA,GAAmB,sEAAYC,UAA/B;AACA,eAAAC,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,mCAAtC,CAAV,CAEsC,CAF+C;AAE5C;AAEzC;;;;;oCACUC,K,EAA0B;AAClC,gBAAI;AACF,kBAAIC,YAAY,GAAG,EAAnB;AACA;;AACA,kBAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrCD,4BAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD;AACD;AAHA,mBAIK;AACHF,8BAAY,wBAAiBD,KAAK,CAACI,MAAvB,uBAA0CH,YAA1C,CAAZ;AACD;;AACDI,qBAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aAZD,CAaA,OAAOM,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF;AAED;;;;yCACc;AACZ,gBAAI;AACF,kBAAMmB,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,8CAAuD0B,SAAvD,CAAV;AACC,qBAAO,KAAK3B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aAND,CAOA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACA,W,CAEL;;;;8CACoBmB,c,EAAsB;AACxC,gBAAI;AACF,kBAAIP,MAAM,aAAM,KAAKvB,QAAX,4CAAqD8B,cAArD,CAAV;AACC,qBAAO,KAAK/B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aALD,CAMA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACA;AAED;;;;4CACoBK,I,EAAeU,S,EAAgB;AACjD,gBAAG;AACD,kBAAMA,UAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,yCAAkD0B,UAAlD,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAOA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACA;AAEH;;;;yCACiBK,I,EAAgBU,S,EAAmBI,c,EAAqB;AACvE,gBAAI;AACF,kBAAIP,MAAM,aAAM,KAAKvB,QAAX,4CAAqD0B,SAArD,cAAkEI,cAAlE,CAAV;AACA,qBAAO,KAAK/B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;yCACemB,c,EAAqB;AAClC,gBAAG;AACD,kBAAIP,MAAM,aAAM,KAAKvB,QAAX,2CAAoD8B,cAApD,CAAV;AACA,qBAAO,KAAK/B,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAU;AACRF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;;;;;yBA7FUkB,gB,EAAgB,uH;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAHf;;;;;wEAGDA,gB,EAAgB;gBAJ5B,wDAI4B;iBAJjB;AACVL,sBAAU,EAAE;AADF,W;AAIiB,U;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaO,uB;AAMX,yCAAoBhC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB;;AACA,eAAAC,QAAA,GAAmB,sEAAYC,UAA/B;AACA,eAAAC,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,mCAAtC,CAAV,CAEsC,CAF+C;AAE5C;AAEzC;;;;;oCACUC,K,EAA0B;AAClC,gBAAI;AACF,kBAAIC,YAAY,GAAG,EAAnB;AACA;;AACA,kBAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrCD,4BAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD;AACD;AAHA,mBAIK;AACHF,8BAAY,wBAAiBD,KAAK,CAACI,MAAvB,uBAA0CH,YAA1C,CAAZ;AACD;;AACDI,qBAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aAZD,CAaA,OAAOM,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF;AAED;;;;8CACiB;AACf,gBAAI;AACF,kBAAMmB,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,2CAAoD0B,SAApD,CAAV;AACC,qBAAO,KAAK3B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aAND,CAOA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;+CACqBqB,e,EAAsB;AACzC,gBAAG;AACD,kBAAIT,MAAM,aAAM,KAAKvB,QAAX,8CAAuDgC,eAAvD,CAAV;AACC,qBAAO,KAAKjC,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aALD,CAKE,OAAMJ,GAAN,EAAU;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAEH;;;;0CACkBK,I,EAAc;AAC5B,gBAAG;AACD,kBAAMU,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAMF,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,0CAAmD0B,SAAnD,cAAgET,MAAhE,CAAV;AACA,qBAAO,KAAKlB,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAPD,CAQA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;8CACoBK,I,EAAkBgB,e,EAAsB;AAC1D,gBAAI;AACF,kBAAMN,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAMF,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,6CAAsDgC,eAAtD,cAAyEN,SAAzE,cAAsFT,MAAtF,CAAV;AACA,qBAAO,KAAKlB,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAPD,CAQA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;qCACWqB,e,EAAsB;AAC/B,gBAAG;AACD,kBAAIT,MAAM,aAAM,KAAKvB,QAAX,6CAAsDgC,eAAtD,CAAV;AACA,qBAAO,KAAKjC,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAU;AACRF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;;;;;yBA/FUoB,uB,EAAuB,uH;AAAA,O;;;eAAvBA,uB;AAAuB,iBAAvBA,uBAAuB,K;AAAA,oBAHtB;;;;;wEAGDA,uB,EAAuB;gBAJnC,wDAImC;iBAJxB;AACVP,sBAAU,EAAE;AADF,W;AAIwB,U;;;;;;;;;;;;;;;;;;;;;;ACZpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaS,e;AAMX,iCAAoBlC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB;;AACA,eAAAC,QAAA,GAAmB,sEAAYC,UAA/B;AACA,eAAAC,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,mCAAtC,CAAV,CAEsC,CAF+C;AAE5C;AAEzC;;;;;oCACUC,K,EAA0B;AAClC,gBAAI;AACF,kBAAIC,YAAY,GAAG,EAAnB;AACA;;AACA,kBAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrCD,4BAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD;AACD;AAHA,mBAIK;AACHF,8BAAY,wBAAiBD,KAAK,CAACI,MAAvB,uBAA0CH,YAA1C,CAAZ;AACD;;AACDI,qBAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aAZD,CAaA,OAAOM,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF;AAED;;;;wCACW;AACT,gBAAI;AACF,kBAAMmB,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,uCAAgD0B,SAAhD,CAAV;AACC,qBAAO,KAAK3B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aAND,CAOA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;0CACgBK,I,EAAU;AACxB,gBAAG;AACD,kBAAMU,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,qCAA8C0B,SAA9C,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAOA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;0CACgBK,I,EAAakB,W,EAAkB;AAC7C,gBAAI;AACF,kBAAMR,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,wCAAiD0B,SAAjD,cAA8DQ,WAA9D,CAAV;AACA,qBAAO,KAAKnC,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAOA,OAAMJ,GAAN,EAAW;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAEA;;;;2CACiBuB,W,EAAkB;AAClC,gBAAI;AACF,kBAAIX,MAAM,aAAM,KAAKvB,QAAX,yCAAkDkC,WAAlD,CAAV;AACC,qBAAO,KAAKnC,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGF,aALD,CAMA,OAAOJ,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;qCACWuB,W,EAAkB;AAC3B,gBAAG;AACD,kBAAIX,MAAM,aAAM,KAAKvB,QAAX,wCAAiDkC,WAAjD,CAAV;AACA,qBAAO,KAAKnC,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAU;AACRF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;6CACmBK,I,EAA0BC,M,EAAM;AACjD,gBAAG;AACD,kBAAIM,MAAM,aAAM,KAAKvB,QAAX,qDAA8DiB,MAA9D,CAAV;AACA,qBAAO,KAAKlB,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKE,OAAMJ,GAAN,EAAU;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;;;;;yBA1GUsB,e,EAAe,uH;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAHd;;;;;wEAGDA,e,EAAe;gBAJ3B,wDAI2B;iBAJhB;AACVT,sBAAU,EAAE;AADF,W;AAIgB,U;;;;;;;;;;;;;;;;;;;;;;ACb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaW,mB;AAMX,qCAAoBpC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJpB;;AACA,eAAAC,QAAA,GAAmB,sEAAYC,UAA/B;AACA,eAAAC,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,mCAAtC,CAAV,CAEsC,CAF+C;AAE5C;AAE3C;;;;;oCACUC,K,EAA0B;AAClC,gBAAI;AACF,kBAAIC,YAAY,GAAG,EAAnB;AACA;;AACA,kBAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrCD,4BAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD;AACD;AAHA,mBAIK;AACHF,8BAAY,wBAAiBD,KAAK,CAACI,MAAvB,uBAA0CH,YAA1C,CAAZ;AACD;;AACDI,qBAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aAZD,CAaA,OAAOM,GAAP,EAAY;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAG,CAACJ,OAAhB;AACD;AACF;;;uCAEYS,I,EAAiBoB,c,EAAc;AAC1C,gBAAG;AAED,kBAAGA,cAAc,KAAK,aAAtB,EAAoC;AAClCpB,oBAAI,CAACqB,WAAL,CAAiBC,kBAAjB,GAAsCF,cAAtC;AACApB,oBAAI,CAACqB,WAAL,CAAiBE,gBAAjB,GAAoC,EAApC;AACD,eAHD,MAGO;AACLvB,oBAAI,CAACqB,WAAL,CAAiBE,gBAAjB,GAAoCH,cAApC;AACApB,oBAAI,CAACqB,WAAL,CAAiBC,kBAAjB,GAAsC,EAAtC;AACD;;AAED,kBAAMZ,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,qCAA8C0B,SAA9C,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAfD,CAeC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;yCAEcK,I,EAAwBwB,W,EAAkB;AACvD,gBAAG;AACD,kBAAMd,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,wCAAiD0B,SAAjD,cAA8Dc,WAA9D,CAAV;AACA,qBAAO,KAAKzC,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAMC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;6CACmBK,I,EAAKyB,c,EAAsBD,W,EAAmBJ,c,EAAeM,O,EAAO;AACrF,gBAAG;AACD,kBAAGA,OAAH,EAAW;AACT,oBAAGN,cAAc,KAAK,aAAtB,EAAoC;AAClCpB,sBAAI,CAACsB,kBAAL,GAA0BF,cAA1B;AACD,iBAFD,MAEO;AACLpB,sBAAI,CAACuB,gBAAL,GAAwBH,cAAxB;AACD;AACF;;AACD,kBAAIb,MAAM,aAAM,KAAKvB,QAAX,qDAA8DyC,cAA9D,cAAgFD,WAAhF,CAAV;AACA,qBAAO,KAAKzC,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAZD,CAYE,OAAMJ,GAAN,EAAU;AACVF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED;;;;+CACkB;AAChB,gBAAG;AACD,kBAAMe,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,yCAAkD0B,SAAlD,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAMC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;6CAEe;AACd,gBAAG;AACD,kBAAMe,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAlB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,0CAAmD0B,SAAnD,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAMC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;uCAEY6B,W,EAAkB;AAC7B,gBAAG;AACD,kBAAIjB,MAAM,aAAM,KAAKvB,QAAX,sCAA+CwC,WAA/C,CAAV;AACA,qBAAO,KAAKzC,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;qCAEU6B,W,EAAkB;AAC3B,gBAAG;AACD,kBAAIjB,MAAM,aAAM,KAAKvB,QAAX,wCAAiDwC,WAAjD,CAAV;AACA,qBAAO,KAAKzC,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAU;AACRF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;8CAEoBgC,a,EAAoB;AACtC,gBAAG;AACD,kBAAIpB,MAAM,aAAM,KAAKvB,QAAX,2CAAoD2C,aAApD,CAAV;AACA,qBAAO,KAAK5C,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;sCACYK,I,EAAKwB,W,EAAmBJ,c,EAAc;AAChD,gBAAG;AACD,kBAAGA,cAAc,KAAK,aAAtB,EAAoC;AAClCpB,oBAAI,CAACqB,WAAL,CAAiBC,kBAAjB,GAAsCF,cAAtC;AACD,eAFD,MAEO;AACLpB,oBAAI,CAACqB,WAAL,CAAiBE,gBAAjB,GAAoCH,cAApC;AACD;;AACD3B,qBAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,kBAAIU,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAhB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,kDAA2DwC,WAA3D,cAA0Ed,SAA1E,CAAV;AACA,qBAAO,KAAK3B,IAAL,CAAUqB,IAAV,CAAeG,MAAf,EAAsBP,IAAtB,EAA4BF,IAA5B,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAZD,CAYC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;;0CAEe8B,c,EAAsBD,W,EAAkB;AACtD,gBAAG;AACD,kBAAIjB,MAAM,aAAM,KAAKvB,QAAX,qDAA8DyC,cAA9D,cAAgFD,WAAhF,CAAV;AACA,qBAAO,KAAKzC,IAAL,WAAiBwB,MAAjB,EAAyBT,IAAzB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAMA,OAAMJ,GAAN,EAAU;AACRF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;4CACkB6B,W,EAAW;AAC3B,gBAAG;AACD,kBAAIjB,MAAM,aAAM,KAAKvB,QAAX,0CAAmDwC,WAAnD,CAAV;AACA,qBAAO,KAAKzC,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aALD,CAKC,OAAMJ,GAAN,EAAU;AACTF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,W,CAED;;;;6CACmB6B,W,EAAW;AAC5B,gBAAI;AACF,kBAAId,SAAS,GAAGC,cAAc,CAACR,OAAf,CAAuB,WAAvB,CAAhB;AACA,kBAAII,MAAM,aAAM,KAAKvB,QAAX,2CAAoD0B,SAApD,cAAiEc,WAAjE,CAAV;AACA,qBAAO,KAAKzC,IAAL,CAAUc,GAAV,CAAcU,MAAd,EAAsBT,IAAtB,CACL,kEAAW,KAAKC,SAAhB,CADK,CAAP;AAGD,aAND,CAME,OAAOX,KAAP,EAAc;AACdK,qBAAO,CAACC,GAAR,CAAYN,KAAZ;AACD;AACF;;;;;;;yBAnMY+B,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAHlB;;;;;wEAGDA,mB,EAAmB;gBAJ/B,wDAI+B;iBAJpB;AACVX,sBAAU,EAAE;AADF,W;AAIoB,U","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesService {\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n  //Method for get rules list for create, edit and delete\n  getRolesListData(): Observable<any>{\n    try {\n      const apiUrl = `${this.endpoint}/user/role-list/`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method to Add Role\n  addRole(data): Observable<any> {\n    try {\n      const userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/add-role/${userId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n\n    }\n  }\n\n  //Method for get all role list\n  listAllRole(): Observable<any>{\n    try {\n      let userId = localStorage.getItem('token');\n      const apiUrl = `${this.endpoint}/user/all-role-list/${userId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for get individaul role list\n  listIndividualRole(roleId): Observable<any>{\n    try {\n      const apiUrl = `${this.endpoint}/user/individaul-role-list/${roleId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method to Update Role\n  updateRole(data,roleId): Observable<any> {\n    try {\n      const userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/update-role/${userId}/${roleId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n\n    }\n  }\n\n  //Method for get individaul permission list\n  listIndividualPermissions(roleId): Observable<any>{\n    try {\n      const apiUrl = `${this.endpoint}/user/individaul-permissions-list/${roleId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  // Update Role Permissions\n  updateRolePermissions(data,roleId): Observable<any>{\n    try {\n      const userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/update-role-permission/${userId}/${roleId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Delete Permission\n  deletePermission(roleId,permissionId): Observable<any>{\n    try {\n      let apiURL = `${this.endpoint}/user/delete-permission/${permissionId}/${roleId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { JOB } from  '../../../auth/job'; \nimport { UpdateJob } from '../../../auth/UpdateJob';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class JobCategoryApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get Job Category list */\n  getJobCategoryData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-job-categories/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  jobCategoryDetails(jobCategoryId:string): Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/company/job-category-details/${jobCategoryId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n/**Create Method for add Job Category  */\n  addJobCategoy(data:JOB): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      console.log(companyId)\n      let apiURL = `${this.endpoint}/company/add-job-category/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update Job Category   */\n  updateJobCategory(data:UpdateJob, jobCategoryId:string,):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/update-job-category/${companyId}/${jobCategoryId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) Job Category*/\n  removeData(jobCategoryId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-job-category/${jobCategoryId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { Document } from '../../../auth/document'; \nimport { DocUpdate } from '../../../auth/docUpdate';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DocumentServices {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get document List  */\n    documentData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-all-document-types/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n    }\n\n// Individual document type details\ndocumentTypeDetails(documentTypeId: string): Observable<any> {\n  try {\n    let apiURL = `${this.endpoint}/company/document-type-details/${documentTypeId}`;\n     return this.http.get(apiURL).pipe(\n       catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n  }\n\n  /** Method for get data from company for document */\n    addDocumentSubmit(data:Document, companyId:String): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/add-document-types/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n    }\n\n  /** Method for Update document type  */\n    updateDocument(data:DocUpdate, companyId: string, documentTypeId:string,):Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/company/update-document-types/${companyId}/${documentTypeId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) document type */\n  removeDocument(documentTypeId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-document-type/${documentTypeId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { SkillName } from  '../../../auth/skillName'; \nimport { UpdateSkill } from '../../../auth/UpdateSkill';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class skillCategoryApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get skill Category list */\n  skillCategoryData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/category/list-skill-category/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  // List Individual category list\n  skillCategoryDetails(skillCategoryId:string){\n    try{\n      let apiURL = `${this.endpoint}/category/skill-category-details/${skillCategoryId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      ) \n    } catch(err){\n      console.log(err);\n    }\n  }\n\n/**Create Method for add Job Category  */\n  addSkillCategoy(data:SkillName): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      const userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/category/add-skill-category/${companyId}/${userId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update skill Category   */\n  updateSkillCategory(data:UpdateSkill, skillCategoryId:string):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      const userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/category/update-skill-category/${skillCategoryId}/${companyId}/${userId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) skill Category*/\n  removeData(skillCategoryId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/category/delete-skill-category/${skillCategoryId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { Leave } from '../../../auth/leave';\nimport { Update } from '../../../auth/updateLeave';\nimport { environment } from '../../../../environments/environment';\nimport { MarkAbsentComponent } from '../../leave-management/manage-leave-status/mark-absent/mark-absent.component';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LeaveApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get Company List  */\n  getListData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-leave-types/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for get data from company for leave */\n  leaveDataSubmit(data:Leave): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/add-leave-type/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update leave type  */\n  updateLeaveType(data:Update, leaveTypeId:string,):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/update-leave-type/${companyId}/${leaveTypeId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n   /** Getting Individual List Leave Type  */\n   leaveTypeDetails(leaveTypeId:string,):Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/company/leave-type-details/${leaveTypeId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) Leave type */\n  removeData(leaveTypeId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-leave-type/${leaveTypeId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n  // Mark Employee Absent\n  markEmployeeAbsent(data: MarkAbsentComponent,userId): Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/employee/mark-leave-absent-or-sandwich/${userId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { gradeuRule } from  '../../../auth/gradeRule';\nimport { UpdateGraderuleComponent } from '../update-graderule/update-graderule.component';\nimport {updateGadeRuleData } from '../../../auth/updateGadeRuleData';\nimport { gradeuRulePaymentHead } from '../../../auth/gradeuRulePaymentHead';\nimport { updatePaymentHead } from 'src/app/auth/updatePaymentHead';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GraderuleApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\ngetGradeRule(data:gradeuRule, percentOfValue):Observable<any>{\n  try{\n\n    if(percentOfValue === 'basicSalary'){\n      data.paymentHead.fixedPercentOfName = percentOfValue;\n      data.paymentHead.fixedPercentOfId = '';\n    } else {\n      data.paymentHead.fixedPercentOfId = percentOfValue;\n      data.paymentHead.fixedPercentOfName = '';\n    }\n\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/add-grade-rule/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\nupdateGadeRule(data:updateGadeRuleData,gradeRuleId:string):Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/update-grade-rule/${companyId}/${gradeRuleId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Update Payment Heads\nupdatePaymentHeads(data,paymentHeadsId:string,gradeRuleId:string,percentOfValue,percent):Observable<any>{\n  try{\n    if(percent){\n      if(percentOfValue === 'basicSalary'){\n        data.fixedPercentOfName = percentOfValue;\n      } else {\n        data.fixedPercentOfId = percentOfValue;\n      }\n    }\n    let apiURL = `${this.endpoint}/company/update-grade-rule-payment-head/${paymentHeadsId}/${gradeRuleId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n/**get payment heads data  */\ngetPaymentHeadData():Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/list-payment-heads/${companyId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\ngetGradeRuleList():Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/list-all-grade-rule/${companyId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\nexistingData(gradeRuleId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/grade-rule-list/${gradeRuleId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\nremoveData(gradeRuleId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/delete-grade-rule/${gradeRuleId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n// Manage Payment heads start here\n\ncompanyPaymentHeads(paymentHeadId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/payment-head-details/${paymentHeadId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// addgrad rule payment heads\naddGradules(data,gradeRuleId:string,percentOfValue):Observable<any>{\n  try{\n    if(percentOfValue === 'basicSalary'){\n      data.paymentHead.fixedPercentOfName = percentOfValue;\n    } else {\n      data.paymentHead.fixedPercentOfId = percentOfValue;\n    }\n    console.log(data);\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/company/add-grade-rule-payment-head/${gradeRuleId}/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    );\n  }catch(err){\n    console.log(err);\n  }\n}\n\nremoveGradeData(paymentHeadsId:string,gradeRuleId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/delete-grade-rule-payment-head/${paymentHeadsId}/${gradeRuleId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n// Get Fixed Payment Heads\nfixedPaymentHeads(gradeRuleId):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/fixed-payment-heads/${gradeRuleId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Get Filter payment heads\nfilterPaymentHeads(gradeRuleId): Observable<any>{\n  try {\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/company/filter-payment-heads/${companyId}/${gradeRuleId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}\n"]}