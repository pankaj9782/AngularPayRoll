{"version":3,"sources":["webpack:///src/app/pages/department/list-department/list-department.component.ts","webpack:///src/app/pages/department/list-department/list-department.component.html","webpack:///src/app/pages/department/update-department/update-department.component.ts","webpack:///src/app/pages/department/update-department/update-department.component.html","webpack:///src/app/pages/department/department-service/department-api.service.ts","webpack:///src/app/pages/department/add-department/add-department.component.ts","webpack:///src/app/pages/department/add-department/add-department.component.html","webpack:///src/app/pages/department/department-routing.module.ts","webpack:///src/app/pages/department/department.module.ts","webpack:///src/app/pages/department/department.component.ts","webpack:///src/app/pages/department/department.component.html"],"names":["ListDepartmentComponent","api","route","util","departmentData","showCard","departmentList","permissionInfo","permissionRoleInfo","getDepartment","subscribe","data","status","length","navigateByUrl","err","console","log","departmentId","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","type","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","allowOutsideClick","then","result","value","removeData","message","dismiss","DismissReason","cancel","departmentSatus","addDepartment","selector","templateUrl","styleUrls","UpdateDepartmentComponent","fb","router","ngZone","successMessage","errorMsg","validationMessage","snapshot","paramMap","get","moduleExists","userId","branchId","departmentDataValidate","existingData","search","DepartmentUpdateForm","disable","getDepartmentDetails","group","required","description","cleanUpdateDepartmentForm","cleanFormLevelOne","valid","updateDepartment","successMsg","setTimeout","handleErrors","errMsg","DepartmentApiService","http","endpoint","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","companyId","sessionStorage","getItem","apiURL","pipe","errorMgmt","post","companyParentId","providedIn","AddDepartmentComponent","isListAvaliable","departmentName","DepartmentForm","cleanDepartmentForm","addDepatment","run","DepartmentList","departmentNameList","branch","id","submitDepatmentData","onClick","path","component","canActivate","children","redirectTo","pathMatch","DepartmentRoutingModule","forChild","declarations","imports","DepartmentModule","DepartmentComponent"],"mappings":"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","file":"department-department-module-es5.js","sourcesContent":["import { Component, OnInit,ViewChild,ElementRef } from '@angular/core';\nimport { DepartmentApiService } from '../department-service/department-api.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { state, style } from '@angular/animations';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-department',\n    templateUrl: './list-department.component.html',\n    styleUrls: ['./list-department.component.css']\n})\n\nexport class ListDepartmentComponent implements OnInit {\n\n    departmentData:any=[];\n    public isActive: any;\n    public isNot: any;\n    showCard:any = {};\n    userId;\n\n    branchId;\n  permissionInfo: any;\n\n  constructor(private api:DepartmentApiService,\n    public route:Router,\n    private util: UtilitiesService\n    ){}\n\n  ngOnInit(){\n   this.departmentList();\n   this.permissionInfo = this.util.permissionRoleInfo;\n   }\n\n  departmentList(){\n    try{\n      this.api.getDepartment().subscribe(data=>{\n        if (data.status === 'success' || data.status === 200) {\n          this.departmentData = data.data;\n          if(this.departmentData.length == 0){\n            this.route.navigateByUrl(\"/pages/department/add-department\");\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  showConfirmationMessage(departmentId:String){\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeData(departmentId).subscribe((data)=>{\n          if(data.status === \"success\" || data.status === 200){\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          'Your row has been deleted.',\n          'success'\n        )\n          } else if(data.status === 'error'){\n            swalWithBootstrapButtons.fire(\n              'ERROR!',\n              data.message,\n              'error'\n            )\n          }\n          this.departmentList();\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your list data safe',\n          'error'\n        )\n      }\n    })\n  }\n\n  addDepartment(){\n    try{\n      this.util.departmentSatus = 1;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Departments List</h2>\n        <button [disabled]=\"permissionInfo.search('Create Department') === -1\"\n        class=\"btn btn-primary\" type=\"button\" (click)=\"addDepartment()\" routerLink=\"/pages/department/add-department\" style=\"float: right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Department</button>\n    </div>\n    <table class=\"table\" style=\"text-align: center;\">\n            <thead class=\" text-primary\">\n              <tr>\n                <th> S.No </th>\n                <th> Title </th>\n                <th>description</th>\n                <th> Action </th>\n              </tr>\n            </thead>\n            <tbody *ngFor=\"let list of departmentData; let i = index\">\n              <tr >\n                <td> <b>{{ i+1 }}.</b></td>\n                <td> {{ list.title }} </td>\n                <td> {{list.description}}</td>\n                <td>\n                    <a [class.disabled]=\"permissionInfo.search('Edit Department') === -1\"\n                    routerLink=\"/pages/department/update-department/{{list._id}}/{{list.userId}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                    <button [disabled]=\"permissionInfo.search('Delete Department') === -1\"\n                    class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\"><i class=\"fa fa-trash\"></i></button>\n                </td>\n              </tr>\n    </table>\n</div>\n\n\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DepartmentApiService } from '../department-service/department-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-department',\n  templateUrl: 'update-department.component.html'\n})\n\nexport class UpdateDepartmentComponent implements OnInit {\n\n  DepartmentUpdateForm: FormGroup;\n  userId;\n  departmentData: any;\n  branchId;\n  successMsg: String;\n  successMessage: boolean = false; \n  errMsg: String;\n  errorMsg: boolean = false;\n  permissionInfo: any;\n\n\n  constructor( public fb: FormBuilder,private api:DepartmentApiService,\n    private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n    private util: UtilitiesService){\n      let departmentId = this.route.snapshot.paramMap.get(\"id\");\n      this.util.moduleExists(departmentId,'Department').subscribe((data) => {\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/department/list-department');\n          }\n        }\n      })\n    }\n\nngOnInit() {\n  // Deparment ID\n  this.permissionInfo = this.util.permissionRoleInfo;\n  this.userId = this.route.snapshot.paramMap.get(\"id\");\n  // Branch ID\n  this.branchId = this.route.snapshot.paramMap.get(\"userId\");\n  this.departmentDataValidate();\n  this.existingData();\n  if(this.permissionInfo.search('Edit Department') === -1){\n    this.DepartmentUpdateForm.disable();\n  }\n}\n\nexistingData(){\n  this.api.getDepartmentDetails(this.userId).subscribe(data=>{\n      if (data.status == 'success'){\n        this.departmentData = data.data;\n            this.DepartmentUpdateForm = this.fb.group({\n              title: new FormControl(this.departmentData.title,Validators.required),\n              description: new FormControl(this.departmentData.description)\n            })\n      }\n    });\n}\n\ndepartmentDataValidate() {\n  try {\n    this.DepartmentUpdateForm = this.fb.group({\n        title: new FormControl('', Validators.required),\n        description: new FormControl('')\n      })\n    }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n//Method for show validdation message\nvalidationMessage = {\n  'title': [\n    { type: 'required', message: 'Title is required' },\n  ]\n}\n\nupdateDepartment(){\n  try{\n    let cleanUpdateDepartmentForm = this.util.cleanFormLevelOne(this.DepartmentUpdateForm);\n    if(this.DepartmentUpdateForm.valid) {\n      this.api.updateDepartment(cleanUpdateDepartmentForm.value,this.branchId,this.userId).subscribe(data=> {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n            this.router.navigateByUrl(\"/pages/department/list-department\");\n          }, 2000);\n        }\n        else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n          }, 3000);\n        }\n      })\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\nhandleErrors(){\n  this.errorMsg = false;\n  this.successMessage = false;\n  this.errMsg = '';\n  this.successMsg = '';\n}\n\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Update Department</h2>\n   </div>\n   <div class=\"card-body\">\n         <div class=\"col-sm-offset-2\">\n               <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                 <strong>{{errMsg}}</strong>\n               </p>\n             </div>\n             <div class=\"col-sm-offset-2\">\n               <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                 <strong>{{successMsg}}</strong>\n               </p>\n             </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"DepartmentUpdateForm\" (ngSubmit)=\"updateDepartment()\" novalidate>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span> </b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"formControlName=\"title\" >\n               <div *ngFor=\"let validation of validationMessage.title\">\n                     <div style=\"color: red;margin-left: 14px;\"\n                       *ngIf=\"DepartmentUpdateForm.get('title').hasError(validation.type) && (DepartmentUpdateForm.get('title').dirty || DepartmentUpdateForm.get('title').touched)\"\n                       >\n                       {{ validation.message }}\n                     </div>\n                   </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Description: </b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Enter Description\"formControlName=\"description\" >\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"DepartmentUpdateForm.invalid || permissionInfo.search('Edit Department')=== -1\">Update</button>\n               <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../../../list-department\" >Cancel</button>\n            </div>\n         </div>\n      </form>\n   </div>\n</div>\n\n<!-- /pages/department/list-department -->","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport {Department} from '../../../auth/DepartmentData';\nimport { UpdateDepatment } from '../../../auth/UpdateDepatment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DepartmentApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\ngetDepartment(): Observable<any> {\n  try {\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/departments/list-all/${companyId}`;\n     return this.http.get(apiURL).pipe(\n       catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Method ForIndividual List\ngetDepartmentDetails(departmentId: String): Observable<any> {\n  try {\n    \n    let apiURL = `${this.endpoint}/branch/department-details/${departmentId}`;\n     return this.http.get(apiURL).pipe(\n       catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\naddDepatment(data:Department,branchId:string): Observable<any> {\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/branch/add-department/${branchId}/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err) {\n    console.log(err);\n  }\n}\n\n\nupdateDepartment(data:UpdateDepatment,branchId:string,departmentId:string,):Observable<any> {\n  try {\n    let apiURL = `${this.endpoint}/branch/update-department/${branchId}/${departmentId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err) {\n    console.log(err);\n  }\n}\n\nremoveData(departmentId:String):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/branch/delete-department/${departmentId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )   \n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\nDepartmentList():Observable<any>{\n  try{\n    const companyParentId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/branch-list/${companyParentId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n\n}\n","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DepartmentApiService } from '../department-service/department-api.service';\nimport * as jsPDF from 'jspdf'\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n\n@Component({\n    selector: 'app-add-department',\n    templateUrl: './add-department.component.html'\n})\n\nexport class AddDepartmentComponent implements OnInit {\n\n  branchId;\n  DepartmentForm: FormGroup;\n  departmentNameList: any[];\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  permissionInfo: any;\n\n  constructor( public fb: FormBuilder,private api:DepartmentApiService,\n      private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n      private util: UtilitiesService){\n        this.isListAvaliable();\n      }\n\n  ngOnInit() {\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.departmentDataValidate();\n    this.departmentName();\n    if(this.permissionInfo.search('Create Department') === -1){\n      this.DepartmentForm.disable();\n    }\n\n  }\n\n  departmentDataValidate() {\n    try {\n      this.DepartmentForm = this.fb.group({\n          title: new FormControl('',Validators.required),\n          description: new FormControl(''),\n          branchId:new FormControl('',Validators.required)\n        })\n      }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for show validdation message\n  validationMessage = {\n    'title': [\n      { type: 'required', message: 'Title is required' },\n    ],\n    'branchId':[\n      { type: 'required', message: 'Branch Name is required' },\n    ]\n  }\n\n\n  submitDepatmentData(){\n    try{\n      let cleanDepartmentForm = this.util.cleanFormLevelOne(this.DepartmentForm);\n      this.api.addDepatment(cleanDepartmentForm.value,this.branchId).subscribe(data =>{\n        if(data.status === \"success\"|| data.status === 200){\n          this.successMessage = true ;\n          this.errorMsg = false ;\n          this.successMsg = data.message;\n          setTimeout(()=>{\n          this.handleErrors();\n          this.ngZone.run(()=>this.router.navigateByUrl('/pages/department/list-department'));\n        }, 1500);\n        }else if(data.status == \"error\"){\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrors();\n          }, 3000);\n        }\n      })\n    }catch(err){\n      console.log(err);\n\n    }\n\n  }\n\n  departmentName(){\n    this.api.DepartmentList().subscribe(data => {\n      this.departmentNameList = data.branch;\n    })\n  }\n\n  onClick(id){\n    this.branchId = id;\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\nisListAvaliable(){\n  try{\n\n    this.api.getDepartment().subscribe((data) =>{\n      if(data.status === 'success'){\n        if(data.data.length > 0 && this.util.departmentSatus !== 1){\n          this.router.navigateByUrl(\"/pages/department/list-department\");\n          this.util.departmentSatus = 0;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}","<div class=\"card card-user\">\n      <div class=\"card-header\">\n         <h2 class=\"card-title text-center\">Department Details</h2>\n      </div>\n      <div class=\"card-body\">\n\n         <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n               <strong>{{ errMsg }}</strong>\n               </p>\n          </div>\n\n         <div class=\"col-sm-offset-2\">\n                  <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                  </p>\n            </div>\n\n\n         <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"DepartmentForm\" (ngSubmit)=\"submitDepatmentData()\" novalidate>\n            <div class=\"row\">\n               <div class=\"col-md\">\n                  <div class=\"form-group\">\n                     <label class=\"col-sm-6 control-label\"><b>Branch-Name :&nbsp;<span\n                           style=\"color: darkred\">*</span></b></label>\n                     <select class=\"dropdown dropdown-toggle form-control\" Name=\"branchId\" (change)=\"onClick($event.target.value)\" formControlName=\"branchId\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Branch----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let department of departmentNameList\" value=\"{{department._id}}\">\n                           {{department.name}}\n                        </option>\n                     </select>\n                     <div *ngFor=\"let validation of validationMessage.branchId\">\n                           <div style=\"color: red;margin-left: 14px;\"\n                             *ngIf=\"DepartmentForm.get('branchId').hasError(validation.type) && (DepartmentForm.get('branchId').dirty || DepartmentForm.get('branchId').touched)\"\n                             >\n                             {{ validation.message }}\n                           </div>\n                         </div>\n                  </div>\n               </div>\n               <div class=\"col-md\">\n               <div class=\"form-group\">\n                   <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                  <div class=\"col-sm-offset-2\">\n                     <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"\n                        formControlName=\"title\">\n                        <div *ngFor=\"let validation of validationMessage.title\">\n                              <div style=\"color: red;margin-left: 14px;\"\n                                *ngIf=\"DepartmentForm.get('title').hasError(validation.type) && (DepartmentForm.get('title').dirty || DepartmentForm.get('title').touched)\"\n                                >\n                                {{ validation.message }}\n                              </div>\n                            </div>\n                  </div>\n               </div>\n            </div>\n            <div class=\"col-md\">\n               <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>Enter Description :</b></label>\n                  <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Enter Description\"\n                           formControlName=\"description\">\n                  </div>\n               </div>\n            </div>\n            </div>\n            <div class=\"form-group\">\n               <div class=\"col-sm-offset-2 col-sm-10\">\n                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"DepartmentForm.invalid\">Submit</button>\n                  <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-department\">Cancel</button>\n               </div>\n            </div>\n         </form>\n      </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DepartmentComponent } from './department.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListDepartmentComponent } from './list-department/list-department.component';\nimport { AddDepartmentComponent } from './add-department/add-department.component';\nimport { UpdateDepartmentComponent } from './update-department/update-department.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : DepartmentComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-department',\n        component: ListDepartmentComponent,\n      },\n      {\n        path: 'add-department',\n        component: AddDepartmentComponent\n      },\n      {\n        path: 'update-department/:id/:userId',\n        component: UpdateDepartmentComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-department',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class DepartmentRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DepartmentRoutingModule } from './department-routing.module';\nimport { DepartmentComponent } from './department.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListDepartmentComponent } from './list-department/list-department.component';\nimport { AddDepartmentComponent } from './add-department/add-department.component';\nimport { UpdateDepartmentComponent } from './update-department/update-department.component';\n\n\n\n@NgModule({\n  declarations: [\n    DepartmentComponent,\n    ListDepartmentComponent,\n    AddDepartmentComponent,\n    UpdateDepartmentComponent\n  ],\n  \n  imports: [\n    CommonModule,\n    DepartmentRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class DepartmentModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.scss']\n})\n\nexport class DepartmentComponent implements OnInit {\n\n  constructor() {}\n  ngOnInit() {\n\n  }\n\n}","<router-outlet></router-outlet>"]}