{"version":3,"sources":["./src/app/pages/department/list-department/list-department.component.ts","./src/app/pages/department/list-department/list-department.component.html","./src/app/pages/department/update-department/update-department.component.ts","./src/app/pages/department/update-department/update-department.component.html","./src/app/pages/department/department-service/department-api.service.ts","./src/app/pages/department/add-department/add-department.component.ts","./src/app/pages/department/add-department/add-department.component.html","./src/app/pages/department/department-routing.module.ts","./src/app/pages/department/department.module.ts","./src/app/pages/department/department.component.ts","./src/app/pages/department/department.component.html"],"names":[],"mappings":"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","file":"department-department-module-es2015.js","sourcesContent":["import { Component, OnInit,ViewChild,ElementRef } from '@angular/core';\nimport { DepartmentApiService } from '../department-service/department-api.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { state, style } from '@angular/animations';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-department',\n    templateUrl: './list-department.component.html',\n    styleUrls: ['./list-department.component.css']\n})\n\nexport class ListDepartmentComponent implements OnInit {\n\n    departmentData:any=[];\n    public isActive: any;\n    public isNot: any;\n    showCard:any = {};\n    userId;\n\n    branchId;\n  permissionInfo: any;\n\n  constructor(private api:DepartmentApiService,\n    public route:Router,\n    private util: UtilitiesService\n    ){}\n\n  ngOnInit(){\n   this.departmentList();\n   this.permissionInfo = this.util.permissionRoleInfo;\n   }\n\n  departmentList(){\n    try{\n      this.api.getDepartment().subscribe(data=>{\n        if (data.status === 'success' || data.status === 200) {\n          this.departmentData = data.data;\n          if(this.departmentData.length == 0){\n            this.route.navigateByUrl(\"/pages/department/add-department\");\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  showConfirmationMessage(departmentId:String){\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeData(departmentId).subscribe((data)=>{\n          if(data.status === \"success\" || data.status === 200){\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          'Your row has been deleted.',\n          'success'\n        )\n          } else if(data.status === 'error'){\n            swalWithBootstrapButtons.fire(\n              'ERROR!',\n              data.message,\n              'error'\n            )\n          }\n          this.departmentList();\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your list data safe',\n          'error'\n        )\n      }\n    })\n  }\n\n  addDepartment(){\n    try{\n      this.util.departmentSatus = 1;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Departments List</h2>\n        <button [disabled]=\"permissionInfo.search('Create Department') === -1\"\n        class=\"btn btn-primary\" type=\"button\" (click)=\"addDepartment()\" routerLink=\"/pages/department/add-department\" style=\"float: right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Department</button>\n    </div>\n    <table class=\"table\" style=\"text-align: center;\">\n            <thead class=\" text-primary\">\n              <tr>\n                <th> S.No </th>\n                <th> Title </th>\n                <th>description</th>\n                <th> Action </th>\n              </tr>\n            </thead>\n            <tbody *ngFor=\"let list of departmentData; let i = index\">\n              <tr >\n                <td> <b>{{ i+1 }}.</b></td>\n                <td> {{ list.title }} </td>\n                <td> {{list.description}}</td>\n                <td>\n                    <a [class.disabled]=\"permissionInfo.search('Edit Department') === -1\"\n                    routerLink=\"/pages/department/update-department/{{list._id}}/{{list.userId}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                    <button [disabled]=\"permissionInfo.search('Delete Department') === -1\"\n                    class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\"><i class=\"fa fa-trash\"></i></button>\n                </td>\n              </tr>\n    </table>\n</div>\n\n\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DepartmentApiService } from '../department-service/department-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-department',\n  templateUrl: 'update-department.component.html'\n})\n\nexport class UpdateDepartmentComponent implements OnInit {\n\n  DepartmentUpdateForm: FormGroup;\n  userId;\n  departmentData: any;\n  branchId;\n  successMsg: String;\n  successMessage: boolean = false; \n  errMsg: String;\n  errorMsg: boolean = false;\n  permissionInfo: any;\n\n\n  constructor( public fb: FormBuilder,private api:DepartmentApiService,\n    private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n    private util: UtilitiesService){\n      let departmentId = this.route.snapshot.paramMap.get(\"id\");\n      this.util.moduleExists(departmentId,'Department').subscribe((data) => {\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/department/list-department');\n          }\n        }\n      })\n    }\n\nngOnInit() {\n  // Deparment ID\n  this.permissionInfo = this.util.permissionRoleInfo;\n  this.userId = this.route.snapshot.paramMap.get(\"id\");\n  // Branch ID\n  this.branchId = this.route.snapshot.paramMap.get(\"userId\");\n  this.departmentDataValidate();\n  this.existingData();\n  if(this.permissionInfo.search('Edit Department') === -1){\n    this.DepartmentUpdateForm.disable();\n  }\n}\n\nexistingData(){\n  this.api.getDepartmentDetails(this.userId).subscribe(data=>{\n      if (data.status == 'success'){\n        this.departmentData = data.data;\n            this.DepartmentUpdateForm = this.fb.group({\n              title: new FormControl(this.departmentData.title,Validators.required),\n              description: new FormControl(this.departmentData.description)\n            })\n      }\n    });\n}\n\ndepartmentDataValidate() {\n  try {\n    this.DepartmentUpdateForm = this.fb.group({\n        title: new FormControl('', Validators.required),\n        description: new FormControl('')\n      })\n    }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n//Method for show validdation message\nvalidationMessage = {\n  'title': [\n    { type: 'required', message: 'Title is required' },\n  ]\n}\n\nupdateDepartment(){\n  try{\n    let cleanUpdateDepartmentForm = this.util.cleanFormLevelOne(this.DepartmentUpdateForm);\n    if(this.DepartmentUpdateForm.valid) {\n      this.api.updateDepartment(cleanUpdateDepartmentForm.value,this.branchId,this.userId).subscribe(data=> {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n            this.router.navigateByUrl(\"/pages/department/list-department\");\n          }, 2000);\n        }\n        else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n          }, 3000);\n        }\n      })\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\nhandleErrors(){\n  this.errorMsg = false;\n  this.successMessage = false;\n  this.errMsg = '';\n  this.successMsg = '';\n}\n\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Update Department</h2>\n   </div>\n   <div class=\"card-body\">\n         <div class=\"col-sm-offset-2\">\n               <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                 <strong>{{errMsg}}</strong>\n               </p>\n             </div>\n             <div class=\"col-sm-offset-2\">\n               <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                 <strong>{{successMsg}}</strong>\n               </p>\n             </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"DepartmentUpdateForm\" (ngSubmit)=\"updateDepartment()\" novalidate>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span> </b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"formControlName=\"title\" >\n               <div *ngFor=\"let validation of validationMessage.title\">\n                     <div style=\"color: red;margin-left: 14px;\"\n                       *ngIf=\"DepartmentUpdateForm.get('title').hasError(validation.type) && (DepartmentUpdateForm.get('title').dirty || DepartmentUpdateForm.get('title').touched)\"\n                       >\n                       {{ validation.message }}\n                     </div>\n                   </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Description: </b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Enter Description\"formControlName=\"description\" >\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"DepartmentUpdateForm.invalid || permissionInfo.search('Edit Department')=== -1\">Update</button>\n               <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../../../list-department\" >Cancel</button>\n            </div>\n         </div>\n      </form>\n   </div>\n</div>\n\n<!-- /pages/department/list-department -->","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport {Department} from '../../../auth/DepartmentData';\nimport { UpdateDepatment } from '../../../auth/UpdateDepatment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DepartmentApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\ngetDepartment(): Observable<any> {\n  try {\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/departments/list-all/${companyId}`;\n     return this.http.get(apiURL).pipe(\n       catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Method ForIndividual List\ngetDepartmentDetails(departmentId: String): Observable<any> {\n  try {\n    \n    let apiURL = `${this.endpoint}/branch/department-details/${departmentId}`;\n     return this.http.get(apiURL).pipe(\n       catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\naddDepatment(data:Department,branchId:string): Observable<any> {\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/branch/add-department/${branchId}/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err) {\n    console.log(err);\n  }\n}\n\n\nupdateDepartment(data:UpdateDepatment,branchId:string,departmentId:string,):Observable<any> {\n  try {\n    let apiURL = `${this.endpoint}/branch/update-department/${branchId}/${departmentId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err) {\n    console.log(err);\n  }\n}\n\nremoveData(departmentId:String):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/branch/delete-department/${departmentId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )   \n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\nDepartmentList():Observable<any>{\n  try{\n    const companyParentId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/branch-list/${companyParentId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n\n}\n","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DepartmentApiService } from '../department-service/department-api.service';\nimport * as jsPDF from 'jspdf'\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n\n@Component({\n    selector: 'app-add-department',\n    templateUrl: './add-department.component.html'\n})\n\nexport class AddDepartmentComponent implements OnInit {\n\n  branchId;\n  DepartmentForm: FormGroup;\n  departmentNameList: any[];\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  permissionInfo: any;\n\n  constructor( public fb: FormBuilder,private api:DepartmentApiService,\n      private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n      private util: UtilitiesService){\n        this.isListAvaliable();\n      }\n\n  ngOnInit() {\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.departmentDataValidate();\n    this.departmentName();\n    if(this.permissionInfo.search('Create Department') === -1){\n      this.DepartmentForm.disable();\n    }\n\n  }\n\n  departmentDataValidate() {\n    try {\n      this.DepartmentForm = this.fb.group({\n          title: new FormControl('',Validators.required),\n          description: new FormControl(''),\n          branchId:new FormControl('',Validators.required)\n        })\n      }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for show validdation message\n  validationMessage = {\n    'title': [\n      { type: 'required', message: 'Title is required' },\n    ],\n    'branchId':[\n      { type: 'required', message: 'Branch Name is required' },\n    ]\n  }\n\n\n  submitDepatmentData(){\n    try{\n      let cleanDepartmentForm = this.util.cleanFormLevelOne(this.DepartmentForm);\n      this.api.addDepatment(cleanDepartmentForm.value,this.branchId).subscribe(data =>{\n        if(data.status === \"success\"|| data.status === 200){\n          this.successMessage = true ;\n          this.errorMsg = false ;\n          this.successMsg = data.message;\n          setTimeout(()=>{\n          this.handleErrors();\n          this.ngZone.run(()=>this.router.navigateByUrl('/pages/department/list-department'));\n        }, 1500);\n        }else if(data.status == \"error\"){\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrors();\n          }, 3000);\n        }\n      })\n    }catch(err){\n      console.log(err);\n\n    }\n\n  }\n\n  departmentName(){\n    this.api.DepartmentList().subscribe(data => {\n      this.departmentNameList = data.branch;\n    })\n  }\n\n  onClick(id){\n    this.branchId = id;\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\nisListAvaliable(){\n  try{\n\n    this.api.getDepartment().subscribe((data) =>{\n      if(data.status === 'success'){\n        if(data.data.length > 0 && this.util.departmentSatus !== 1){\n          this.router.navigateByUrl(\"/pages/department/list-department\");\n          this.util.departmentSatus = 0;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}","<div class=\"card card-user\">\n      <div class=\"card-header\">\n         <h2 class=\"card-title text-center\">Department Details</h2>\n      </div>\n      <div class=\"card-body\">\n\n         <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n               <strong>{{ errMsg }}</strong>\n               </p>\n          </div>\n\n         <div class=\"col-sm-offset-2\">\n                  <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                  </p>\n            </div>\n\n\n         <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"DepartmentForm\" (ngSubmit)=\"submitDepatmentData()\" novalidate>\n            <div class=\"row\">\n               <div class=\"col-md\">\n                  <div class=\"form-group\">\n                     <label class=\"col-sm-6 control-label\"><b>Branch-Name :&nbsp;<span\n                           style=\"color: darkred\">*</span></b></label>\n                     <select class=\"dropdown dropdown-toggle form-control\" Name=\"branchId\" (change)=\"onClick($event.target.value)\" formControlName=\"branchId\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Branch----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let department of departmentNameList\" value=\"{{department._id}}\">\n                           {{department.name}}\n                        </option>\n                     </select>\n                     <div *ngFor=\"let validation of validationMessage.branchId\">\n                           <div style=\"color: red;margin-left: 14px;\"\n                             *ngIf=\"DepartmentForm.get('branchId').hasError(validation.type) && (DepartmentForm.get('branchId').dirty || DepartmentForm.get('branchId').touched)\"\n                             >\n                             {{ validation.message }}\n                           </div>\n                         </div>\n                  </div>\n               </div>\n               <div class=\"col-md\">\n               <div class=\"form-group\">\n                   <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                  <div class=\"col-sm-offset-2\">\n                     <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"\n                        formControlName=\"title\">\n                        <div *ngFor=\"let validation of validationMessage.title\">\n                              <div style=\"color: red;margin-left: 14px;\"\n                                *ngIf=\"DepartmentForm.get('title').hasError(validation.type) && (DepartmentForm.get('title').dirty || DepartmentForm.get('title').touched)\"\n                                >\n                                {{ validation.message }}\n                              </div>\n                            </div>\n                  </div>\n               </div>\n            </div>\n            <div class=\"col-md\">\n               <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>Enter Description :</b></label>\n                  <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Enter Description\"\n                           formControlName=\"description\">\n                  </div>\n               </div>\n            </div>\n            </div>\n            <div class=\"form-group\">\n               <div class=\"col-sm-offset-2 col-sm-10\">\n                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"DepartmentForm.invalid\">Submit</button>\n                  <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-department\">Cancel</button>\n               </div>\n            </div>\n         </form>\n      </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DepartmentComponent } from './department.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListDepartmentComponent } from './list-department/list-department.component';\nimport { AddDepartmentComponent } from './add-department/add-department.component';\nimport { UpdateDepartmentComponent } from './update-department/update-department.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : DepartmentComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-department',\n        component: ListDepartmentComponent,\n      },\n      {\n        path: 'add-department',\n        component: AddDepartmentComponent\n      },\n      {\n        path: 'update-department/:id/:userId',\n        component: UpdateDepartmentComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-department',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class DepartmentRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DepartmentRoutingModule } from './department-routing.module';\nimport { DepartmentComponent } from './department.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListDepartmentComponent } from './list-department/list-department.component';\nimport { AddDepartmentComponent } from './add-department/add-department.component';\nimport { UpdateDepartmentComponent } from './update-department/update-department.component';\n\n\n\n@NgModule({\n  declarations: [\n    DepartmentComponent,\n    ListDepartmentComponent,\n    AddDepartmentComponent,\n    UpdateDepartmentComponent\n  ],\n  \n  imports: [\n    CommonModule,\n    DepartmentRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class DepartmentModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.scss']\n})\n\nexport class DepartmentComponent implements OnInit {\n\n  constructor() {}\n  ngOnInit() {\n\n  }\n\n}","<router-outlet></router-outlet>"],"sourceRoot":"webpack:///"}