{"version":3,"sources":["webpack:///src/app/pages/payroll/payroll-service/payroll-api.service.ts","webpack:///src/app/pages/payroll/payroll.module.ts","webpack:///src/app/pages/payroll/payroll-sheet/payroll-sheet.component.ts","webpack:///src/app/pages/payroll/payroll-sheet/payroll-sheet.component.html","webpack:///src/app/pages/payroll/add-payroll/add-payroll.component.ts","webpack:///src/app/pages/payroll/payroll.component.ts","webpack:///src/app/pages/payroll/payroll.component.html","webpack:///src/app/pages/payroll/payroll-routing.module.ts","webpack:///src/app/pages/payroll/list-payroll/list-payroll.component.html","webpack:///src/app/pages/payroll/list-payroll/list-report.component.ts","webpack:///src/app/pages/payroll/update-payroll/update-report.component.ts","webpack:///src/app/pages/payroll/update-payroll/update-payroll.component.html"],"names":["PayrollApiService","http","endpoint","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","message","status","console","log","err","year","month","data","companyId","sessionStorage","getItem","apiURL","post","pipe","errorMgmt","salarySlipId","get","employeeIdArray","modeType","type","salaryId","apiUrl","providedIn","customNotifierOptions","position","horizontal","distance","vertical","gap","theme","behaviour","autoHide","onClick","onMouseover","showDismissButton","stacking","animations","enabled","show","preset","speed","easing","hide","offset","shift","overlap","PayrollModule","withConfig","forRoot","declarations","imports","PayrollSheetComponent","apiService","titleCase","minMode","bsValue","Date","requestDateDetails","getFullYear","getMonth","padStart","bsConfig","Object","assign","dateInputFormat","getCompanyDetails","dateValues","localStorage","subscribe","companyDetails","sheetType","bankStatement","statementType","response","length","fire","generateBankSheet","generateCashStatement","generateChequeStatement","bankStatementData","workbook","worksheet","addWorksheet","subHeading","totalAmoutPaid","transform","totalAmoutPaidWords","subject","tableSubHeading","header1","headerDetails","header2","footer","bankData","i","push","key","subTitleRow","addRow","currentDate","getCell","value","sheetHeading","mergeCells","font","name","family","size","underline","bold","alignment","wrapText","sheetSubHeading1","border","top","style","left","bottom","right","sheetSubHeading2","eachCell","cell","number","headerRow1","headerRow2","getColumn","width","forEach","d","row","f","footerRow","xlsx","writeBuffer","then","blob","Blob","salaryStatementData","companyName","salaryInfo","index","salaryDetail","cashAmt","totalCashAmtPaid","chequeAmt","chequeNum","totalChequeAmtPaid","rangeDatesUpdated","statementSheet","selector","templateUrl","styleUrls","AddPayrollComponent","PayrollComponent","route","path","component","canActivate","children","redirectTo","pathMatch","PayrollRoutingModule","forChild","exports","ListPayrollComponent","api","fb","employeeListAPI","spinner","notifier","existingData","demo","dataSalary","showPayrollDetials","salarySlipStatus","paymentModeType","showSalaryDetailsCards","showCheckbox","selectAllCheckBox","generateSalaryForEmployees","salarySlipDetails","currentMonthValue","filterOnEmployee","currentSalarySlipFilterStatus","showChequeBtn","dataSetting","currentMonthSetting","listSalarySlipDetails","monthValue","Number","toString","employeeList","getEmployeeList","companyEmployeelist","document","getElementById","generateSlip","monthlyGenerateSlip","generatePdf","generateSalarySlip","items","_id","id","getSalarySlip","gross","amt","grossAmt","netSalary","netSalaryAmt","totalDeduction","totalDeductionAmt","employeeDetails","doc","image","Image","companyImageUrl","src","setFontSize","rect","addImage","setFontStyle","text","employeeName","accountNum","designation","present","earnedLeaves","unsanctionedLeave","payDays","monthlyctc","annuallyctc","textY","deductions","earnings","maxLength","rectY","undefined","label","save","headerSpace","yearValue","yearRegularExpression","result","match","earnedLeaveYearMsg","substring","filterEmployeeId","paymentMode","filterSalarySlip","filterCurrentSalarySlip","curretDate","manipulateDate","returnData","String","setAttribute","getPayrolData","employeeFilter","isGenerated","employeeId","splice","employeeSalaryDetails","deductionDetails","earningDetails","removeAttribute","getChequeApi","title","input","inputValue","showCancelButton","inputValidator","addChequeApi","checkNum","notify","filterFunctionality","yearValidation","resetFunctionality","allDownload","UpdatePayrollComponent","ngZone","router","salarySlipDeductions","salarySlipEarnings","buttonValue","showButtonValue","salarySlipPattern","didUpdate","errorMsg","successMessage","snapshot","paramMap","requestMonth","requestYear","salarySlipForm","existingSalaryDetails","updateSalarySlipForm","group","deduction","totalDeductions","deductionForm","totalEarnings","earningsForm","element","updatedSalaryForm","successMsg","setTimeout","navigateByUrl","handelErrors","errMsg","scrollIntoView","showFunctinality","updateSalarySlip"],"mappings":"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","file":"payroll-payroll-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PayrollApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\ngetPayrolData(year,month):Observable<any>{\n  try{\n    let data = {\n      year:year,\n      month:month\n    }\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/employee/salary-slip-list/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\ngetSalarySlip(salarySlipId:String): Observable<any> {\n  try {\n    let apiURL = `${this.endpoint}/employee/salary-slip-details/${salarySlipId}`;\n    return this.http.get(apiURL).pipe(\n    catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Generate Salary Slip\ngenerateSalarySlip(employeeIdArray,year,month): Observable<any>{\n  try{\n    let data = {\n      year:year,\n      month:month,\n      employeeIdArray: employeeIdArray.employeeIdArray\n    }\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/employee/generate-salary-slip/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Employee Data\nfilterSalarySlip(modeType,year,month):Observable<any>{\n  try {\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/employee/filter-salary-slip/${companyId}/${modeType}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n    catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// List Employee salary slip upto date\nlistSalarySlipDetails(month,year):Observable<any>{\n  try {\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/employee/current-month-salary-slip/${companyId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n    catchError(this.errorMgmt)\n    )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Generate and Update the employee salary slip\nmonthlyGenerateSlip(data,month,year,type): Observable<any>{\ntry {\n  let companyId = sessionStorage.getItem('companyId');\n  let apiURL = `${this.endpoint}/employee/generate-current-month-slip/${companyId}/${year}/${month}/${type}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n} catch (error) {\n  console.log(error);\n}\n}\n\n// Filter Employee Data\nfilterCurrentSalarySlip(modeType,year,month):Observable<any>{\n  try {\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/employee/filter-current-month-salary-slip/${companyId}/${modeType}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n    catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n\n// GENERATE BANK STATEMENT(SALARY UPLOAD) API\n bankStatement(data): Observable<any> {\n   try {\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/company/bank-statement/${companyId}`;\n    return this.http.post(apiURL, data).pipe(\n    catchError(this.errorMgmt)\n    )\n   } catch (error) {\n     console.log(error);\n   }\n }\n\n\n//  ADD CHEQUE DETAILS API\naddChequeApi(salaryId,data):Observable<any> {\n  try {\n    let apiUrl = `${this.endpoint}/user/add-cheque-details/${salaryId}`;\n    return this.http.post(apiUrl, data).pipe(\n      catchError(this.errorMgmt)\n      )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n//  GET CHEQUE DETAILS API\ngetChequeApi(salaryId):Observable<any> {\n  try {\n    let apiUrl = `${this.endpoint}/user/get-cheque-details/${salaryId}`;\n    return this.http.get(apiUrl).pipe(\n      catchError(this.errorMgmt)\n      )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//  GET CHEQUE DETAILS API\ngetCompanyDetails(companyId):Observable<any> {\n  try {\n    let apiUrl = `${this.endpoint}/company/details/${companyId}`;\n    return this.http.get(apiUrl).pipe(\n      catchError(this.errorMgmt)\n      )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PayrollRoutingModule } from './payroll-routing.module';\nimport { PayrollComponent } from './payroll.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListPayrollComponent } from './list-payroll/list-report.component';\nimport { AddPayrollComponent } from './add-payroll/add-payroll.component';\nimport { UpdatePayrollComponent } from './update-payroll/update-report.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\nimport { PayrollSheetComponent } from './payroll-sheet/payroll-sheet.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n    horizontal: {\n      position: 'right',\n      distance: 12\n    },\n    vertical: {\n      position: 'top',\n      distance: 12,\n      gap: 10\n    }\n  },\n  theme: 'material',\n  behaviour: {\n    autoHide: 3000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n\n@NgModule({\n  declarations: [\n    PayrollComponent,\n    ListPayrollComponent,\n    AddPayrollComponent,\n    UpdatePayrollComponent,\n    PayrollSheetComponent\n  ],\n\n  imports: [\n    CommonModule,\n    PayrollRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgxSpinnerModule,\n    NotifierModule.withConfig(customNotifierOptions),\n    BsDatepickerModule.forRoot(),\n\n  ]\n})\n\nexport class PayrollModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BsDatepickerConfig, BsDatepickerViewMode } from 'ngx-bootstrap/datepicker';\nimport moment from 'moment';\nimport { PayrollApiService } from '../payroll-service/payroll-api.service';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport Swal from 'sweetalert2';\nimport { TitleCasePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-payroll-sheet',\n  templateUrl: './payroll-sheet.component.html',\n  styleUrls: ['./payroll-sheet.component.scss']\n})\nexport class PayrollSheetComponent implements OnInit {\n\n  minMode: BsDatepickerViewMode = 'month'; // change for month:year\n  bsValue = new Date();\n  bsConfig: Partial<BsDatepickerConfig>;\n  companyDetails: any;\n  requestDateDetails = {\n    year: `${new Date().getFullYear()}`,\n    month: `${new Date().getMonth() + 1}`.padStart(2,'0')\n  }\n\n  constructor(\n    private apiService: PayrollApiService,\n    private titleCase: TitleCasePipe,\n  ) {\n    this.bsConfig = Object.assign({}, {\n      minMode : this.minMode,\n      dateInputFormat: 'MM-YYYY'\n    });\n   }\n\n  ngOnInit(): void {\n    this.getCompanyDetails();\n  }\n\n  rangeDatesUpdated(dateValues){\n    try {\n      this.requestDateDetails = {\n        year: `${moment(dateValues).get('years')}`,\n        month: `${moment(dateValues).get('months') + 1}`.padStart(2,'0')\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getCompanyDetails() {\n    this.apiService.getCompanyDetails(localStorage.getItem('companyId')).subscribe((companyDetails) => {\n      if(companyDetails.status === 'success') {\n        this.companyDetails = companyDetails.data;\n      }\n    })\n  }\n\n\n  // GENERATE SALARY UPLOAD(BANK STATEMENT)\n  statementSheet(sheetType) {\n    try {\n        this.apiService.bankStatement({year: this.requestDateDetails.year, month: this.requestDateDetails.month, statementType: sheetType}).subscribe(response => {\n\n        if(response.status === 'success'){\n\n            (response.data.bankStatement.length === 0) ?\n            sheetType === 'Bank' ?\n            Swal.fire(\"Bank Statement is not available or may be you didn't add Empolyees Bank Details\" ) :\n            sheetType === 'Cash' ?\n            Swal.fire(\"Cash Statement is not available\" ):\n            Swal.fire(\"Cheque Statement is not available\" )\n            : sheetType === 'Bank' ?\n            this.generateBankSheet(response.data) :\n            sheetType === 'Cash' ?\n            this.generateCashStatement(response.data):\n            this.generateChequeStatement(response.data);\n\n        }\n        if(response.status === 'error'){\n          Swal.fire(response.message);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n// FOR GENRATE EXCEL SHEET FOR BANK STATEMENT\n  async generateBankSheet(bankStatementData) {\n      // Create workbook and worksheet\n      const workbook = new Workbook();\n      const worksheet = workbook.addWorksheet('Bank Statement');\n      const subHeading = [`We request you to transfer our Salary from Indusind salary account for the amount of  ₹ ${bankStatementData.totalAmoutPaid} (${this.titleCase.transform(bankStatementData.totalAmoutPaidWords)} Only). Please refer  transfer from Aryavrat Infotech Pvt. Ltd. to IndusInd Salary Account of IndusInd Bank of amount ₹ ${bankStatementData.totalAmoutPaid}/-through cheque on 10th ${bankStatementData.month}.`];\n      const subject = 'IndusInd bank, Jaipur';\n      const tableSubHeading = [`Please find the list below for the salary transfer of ${bankStatementData.month} ${bankStatementData.year}`];\n      const header1 = bankStatementData.headerDetails;\n      const header2 = ['', '', '', '', ''];\n      const footer = [\n        ['', 'Total', '', bankStatementData.totalAmoutPaid, ''],\n      ];\n\n\n      const bankData = [];\n      for(let i = 0; i < bankStatementData.bankStatement.length; i++){\n        const data  = [];\n        data.push(i+1);\n        for(let key in bankStatementData.bankStatement[i]){\n           data.push(bankStatementData.bankStatement[i][key]);\n        }\n        bankData.push(data);\n      }\n          // Add Row and formatting\n      const subTitleRow = worksheet.addRow(['TO', '', '', '', 'Date : ' + bankStatementData.currentDate]);\n      worksheet.getCell('B2').value = subject;\n      // Add sheet heading\n      const sheetHeading = worksheet.addRow([bankStatementData.subject]);\n      worksheet.mergeCells('A3:E3');\n      worksheet.addRow([]);\n      sheetHeading.font = { name: 'Arial', family: 4, size: 10, underline: 'double', bold: true, };\n      sheetHeading.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      // Add sheet sub heading\n      const sheetSubHeading1 = worksheet.addRow(subHeading);\n      worksheet.mergeCells('A5:E7');\n      sheetSubHeading1.getCell(5).border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n      sheetSubHeading1.getCell(5).alignment = { vertical: 'top', horizontal: 'left', wrapText: true };\n\n      // Add table sub heading\n      const sheetSubHeading2 = worksheet.addRow(tableSubHeading);\n      worksheet.mergeCells('A8:E8');\n      sheetSubHeading2.eachCell((cell, number) => {\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n        cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      });\n\n      const headerRow1 = worksheet.addRow(header2);\n      headerRow1.eachCell((cell, number) => {\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n      });\n\n      const headerRow2 = worksheet.addRow(header1);\n      headerRow2.eachCell((cell, number) => {\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n        cell.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n      });\n\n      worksheet.getColumn(2).width = 30;\n      worksheet.getColumn(3).width = 30;\n      worksheet.getColumn(5).width = 30;\n\n      bankData.forEach(d => {\n        const row = worksheet.addRow(d);\n        row.eachCell((cell, number) => {\n          cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n          cell.alignment = { vertical: 'bottom', horizontal: 'left', wrapText: true };\n        });\n      });\n\n      footer.forEach(f => {\n        const footerRow = worksheet.addRow(f);\n        footerRow.eachCell((cell, number) => {\n          cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n          cell.alignment = { vertical: 'bottom', horizontal: 'left', wrapText: true };\n          cell.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n        });\n      });\n      // Generate Excel sheet\n      workbook.xlsx.writeBuffer().then((data) => {\n        const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        fs.saveAs(blob, 'Bank Statement.xlsx');\n      });\n  }\n\n// FOR GENRATE EXCEL SHEET FOR CASH STATEMENT\n  async generateCashStatement(salaryStatementData){\n    try {\n         // Create workbook and worksheet\n    const workbook = new Workbook();\n    const worksheet = workbook.addWorksheet('Cash Statement');\n    worksheet.addRow([]);\n    worksheet.mergeCells('A2:E2');\n    worksheet.getCell('A2').value =`${salaryStatementData.companyName}, ${salaryStatementData.month} ${salaryStatementData.year}`;\n    worksheet.getCell('A2').font = { name: 'Trebuchet MS', family: 4, size: 15, bold: true, };\n    worksheet.getCell('A2').alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n    worksheet.addRow([]);\n    worksheet.addRow([]);\n\n    const header1 = salaryStatementData.headerDetails;\n    const data = [];\n\n    salaryStatementData.bankStatement.forEach((salaryInfo, index) => {\n      let salaryDetail = [index+1, salaryInfo.name, salaryInfo.cashAmt, '', ''];\n      data.push(salaryDetail);\n    });\n\n    const headerRow2 = worksheet.addRow(header1);\n    headerRow2.eachCell((cell) => {\n      cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      cell.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n    });\n\n    data.forEach(d => {\n      const row = worksheet.addRow(d);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      });\n    });\n\n\n    worksheet.getColumn(2).width = 30;\n    worksheet.getColumn(3).width = 30;\n    worksheet.getColumn(4).width = 30;\n    worksheet.getColumn(5).width = 30;\n\n        // Footer Row\n        const footerRow = worksheet.addRow(['Total','',salaryStatementData.totalCashAmtPaid,'']);\n        footerRow.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n        footerRow.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n\n\n    // Generate Excel sheet\n    workbook.xlsx.writeBuffer().then((data) => {\n      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      fs.saveAs(blob, 'Cash-Statement.xlsx');\n    });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // FOR GENRATE EXCEL SHEET FOR CASH STATEMENT\n  async generateChequeStatement(salaryStatementData){\n    try {\n         // Create workbook and worksheet\n    const workbook = new Workbook();\n    const worksheet = workbook.addWorksheet('Cheque Statement');\n    worksheet.addRow([]);\n    worksheet.mergeCells('A2:E2');\n    worksheet.getCell('A2').value =`${salaryStatementData.companyName}, ${salaryStatementData.month} ${salaryStatementData.year}`;\n    worksheet.getCell('A2').font = { name: 'Trebuchet MS', family: 4, size: 15, bold: true, };\n    worksheet.getCell('A2').alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n    worksheet.addRow([]);\n    worksheet.addRow([]);\n\n    const header1 = salaryStatementData.headerDetails;\n    const data = [];\n\n    salaryStatementData.bankStatement.forEach((salaryInfo, index) => {\n      let salaryDetail = [index+1, salaryInfo.name, salaryInfo.chequeAmt, salaryInfo.chequeNum, '', ''];\n      data.push(salaryDetail);\n    });\n\n    const headerRow2 = worksheet.addRow(header1);\n    headerRow2.eachCell((cell) => {\n      cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      cell.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n    });\n\n    data.forEach(d => {\n      const row = worksheet.addRow(d);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      });\n    });\n\n\n    worksheet.getColumn(2).width = 30;\n    worksheet.getColumn(3).width = 30;\n    worksheet.getColumn(4).width = 30;\n    worksheet.getColumn(5).width = 30;\n\n        // Footer Row\n        const footerRow = worksheet.addRow(['Total', '', salaryStatementData.totalChequeAmtPaid, '', '', '']);\n        footerRow.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n        footerRow.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n\n\n    // Generate Excel sheet\n    workbook.xlsx.writeBuffer().then((data) => {\n      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      fs.saveAs(blob, 'Cheque-Statement.xlsx');\n    });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n","<ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"timer\">\n</ngx-spinner>\n<notifier-container></notifier-container>\n<div class=\"card card-user\">\n    <div class=\"card-header\" >\n        <h2 class=\"card-title text-center\">Salary Sheets</h2>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-offset-2\">\n                        <input type=\"text\" class=\"form-control\" [bsConfig]=\"bsConfig\" placeholder=\"Select Months\"  [bsValue]=\"bsValue\" bsDatepicker (bsValueChange)=\"rangeDatesUpdated($event)\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-9 col-sm-12\" >\n                <div class=\"form-group sheet-btn\" >\n                    <button class=\"btn btn-secondary sheet-btn-format\" type=\"button\" (click) = \"statementSheet('Bank')\"><i class=\"fa fa-download\"></i>Bank Statement</button>\n                    <button class=\"btn btn-secondary sheet-btn-format\" type=\"button\" (click) = \"statementSheet('Cash')\"><i class=\"fa fa-download\"></i>Cash Statement</button>\n                    <button class=\"btn btn-secondary sheet-btn-format\" type=\"button\" (click) = \"statementSheet('Cheque')\"><i class=\"fa fa-download\"></i>Cheque Statement</button>\n                </div>\n            </div>\n        </div>\n\n\n\n        <table class=\"table\" style=\"margin: auto\">\n            <tr>\n                <td><strong>Name:</strong></td>\n                <td> {{companyDetails?.name}} </td>\n                <td><strong>Address:</strong></td>\n                <td> {{companyDetails?.address}} </td>\n            </tr>\n            <tr>\n                <td><strong>Domicile:</strong></td>\n                <td> {{companyDetails?.domicile}} </td>\n                <td><strong>Official Company Number:</strong></td>\n                <td> {{companyDetails?.officialNumber}} </td>\n            </tr>\n            <tr>\n                <td><strong>Fax Number:</strong></td>\n                <td> {{companyDetails?.fax}} </td>\n                <td><strong>Email Address:</strong></td>\n                <td> {{companyDetails?.email}} </td>\n            </tr>\n            <tr>\n                <td><strong>Bank Name:</strong></td>\n                <td> {{companyDetails?.bankName}} </td>\n                <td><strong>Account No:</strong></td>\n                <td> {{companyDetails?.bankAccNum}} </td>\n            </tr>\n            <tr>\n                <td><strong>Country:</strong></td>\n                <td> {{companyDetails?.countryName}} </td>\n                <td><strong>Currency:</strong></td>\n                <td> {{companyDetails?.currency}} </td>\n            </tr>\n            <tr>\n                <td><strong>Taxation No:</strong></td>\n                <td> {{companyDetails?.taxationNumber}} </td>\n                <td><strong>PAN No:</strong></td>\n                <td> {{companyDetails?.panNumber}} </td>\n            </tr>\n            <tr>\n                <td><strong>BCC Address for all outgoing mails:</strong></td>\n                <td> {{companyDetails?.bccEmail}} </td>\n                <td></td>\n                <td></td>\n            </tr>\n        </table>\n\n\n\n\n\n    </div>\n\n\n\n</div>","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-add-payroll',\n    templateUrl: './add-payroll.component.html'\n})\n\nexport class AddPayrollComponent implements OnInit {\n    \n    constructor(){}\n\n    ngOnInit() {\n    }\n\n  }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.scss']\n})\n\nexport class PayrollComponent implements OnInit {\n\n  constructor() {}\n  ngOnInit() {\n  \n  }\n\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PayrollComponent } from './payroll.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListPayrollComponent } from './list-payroll/list-report.component';\nimport { AddPayrollComponent } from './add-payroll/add-payroll.component';\nimport { UpdatePayrollComponent } from './update-payroll/update-report.component';\nimport { PayrollSheetComponent } from './payroll-sheet/payroll-sheet.component';\n\n\nconst route : Routes = [\n  {\n    path :'',\n    component : PayrollComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-payroll',\n        component: ListPayrollComponent,\n      },\n      {\n        path: 'add-payroll',\n        component: AddPayrollComponent\n      },\n      {\n        path: 'update-payroll/:employeeId/:month/:year',\n        component: UpdatePayrollComponent\n      },\n      {\n        path: 'payroll-sheet',\n        component: PayrollSheetComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-payroll',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class PayrollRoutingModule { }","<ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"timer\">\n</ngx-spinner>\n<notifier-container></notifier-container>\n<div class=\"card card-user\">\n    <div class=\"card-header\" (keyup.enter)=\"filterFunctionality()\">\n        <h2 class=\"card-title text-center\">Payroll Details</h2>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label \"><b>Select Employee:</b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"salaryEmployee\" (change)=\"employeeFilter()\">\n                        <option class=\"dropdown-item\" value=\"\" disabled selected>--Select Employee--</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of companyEmployeelist\"\n                            value=\"{{employee._id}}\">{{employee.name}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label \"><b>Enter Year:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" id=\"payrollYear\" (keyup)=\"yearValidation()\" placeholder=\"Enter Year\">\n                    </div>\n                    <div>\n                        <p style=\"color:red;\">{{earnedLeaveYearMsg}}</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label \"><b>Enter Month:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <select class=\"dropdown dropdown-toggle form-control\" id=\"salarySlipMonth\">\n                            <option [disabled]=\"!currentMonthValue['01']\" class=\"dropdown-item\" id=\"01\" value=\"01\">Jan\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['02']\" class=\"dropdown-item\" id=\"02\" value=\"02\">Feb\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['03']\" class=\"dropdown-item\" id=\"03\" value=\"03\">Mar\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['04']\" class=\"dropdown-item\" id=\"04\" value=\"04\">Apr\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['05']\" class=\"dropdown-item\" id=\"05\" value=\"05\">May\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['06']\" class=\"dropdown-item\" id=\"06\" value=\"06\">Jun\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['07']\" class=\"dropdown-item\" id=\"07\" value=\"07\">Jul\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['08']\" class=\"dropdown-item\" id=\"08\" value=\"08\">Aug\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['09']\" class=\"dropdown-item\" id=\"09\" value=\"09\">Sep\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['10']\" class=\"dropdown-item\" id=\"10\" value=\"10\">Oct\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['11']\" class=\"dropdown-item\" id=\"11\" value=\"11\">Nov\n                            </option>\n                            <option [disabled]=\"!currentMonthValue['12']\" class=\"dropdown-item\" id=\"12\" value=\"12\">Dec\n                            </option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label \"><b>Salary Slip</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <select class=\"dropdown dropdown-toggle form-control\" id=\"salarySlipType\" [disabled]='filterOnEmployee'>\n                            <option class=\"dropdown-item\" value=\"former\">Formerly Generated</option>\n                            <option class=\"dropdown-item\" value=\"later\">Generate Later</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label \"><b>Pay Mode:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <select class=\"dropdown dropdown-toggle form-control\" id=\"salaryModeType\" [disabled]='filterOnEmployee'>\n                                <option class=\"dropdown-item\" value=\"\" disabled selected>--Select Payment Mode--</option>\n                                <option class=\"dropdown-item\" *ngFor=\"let modeType of paymentModeType\" value=\"{{modeType.value}}\">\n                                    {{modeType.name}}</option>\n                            </select>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary btn-margin\" [disabled]=\"earnedLeaveYearMsg\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp; Filter</button>\n                    <button class=\"btn btn-danger btn-margin\" (click)=\"resetFunctionality()\"><i class=\"fa fa-trash\"></i>&nbsp;  Reset</button>\n                </div>\n            </div>\n\n        </div>\n\n\n\n        <!-- <button style=\"float: right;\" class=\"btn btn-primary btn-round\" [disabled]=\"earnedLeaveYearMsg || bankStatementFlag\" (click)=\"bankStatement()\"><i class=\"fas fa-download\"></i>&nbsp;{{statementName}}</button> -->\n        <button style=\"float: right;\" class=\"btn btn-success btn-round\" [disabled]=\"earnedLeaveYearMsg || dataSalary.length ===0\" (click)=\"allDownload()\"><i class=\"fas fa-download\"></i>&nbsp; Download All</button>\n        <table class=\"table\" style=\"text-align: center;\">\n            <thead class=\" text-primary\">\n                <tr>\n                    <th>Generate Payroll\n                        <div *ngIf=\"dataSalary.length > 0 && currentSalarySlipFilterStatus === 'later'\">\n                            <input type=\"checkbox\" [checked]=\"selectAllCheckBox\" (change)=\"headerCheckBox()\" /> Select All\n                        </div>\n                    </th>\n                    <th>Name</th>\n                    <!-- <th>Designation</th> -->\n                    <th>Gross Salary</th>\n                    <th>Salary Deduction</th>\n                    <th>Net Salary</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let list of dataSalary\">\n                <tr>\n                    <td *ngIf=\"!list.isGenerated\"><input type=\"checkbox\" [checked]=\"showCheckbox[list._id]\" (change)=listCheckBoxes(list._id) /></td>\n                    <td *ngIf=\"list.isGenerated\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                    <td>{{list.employeeDetails.employeeName}}</td>\n                    <!-- <td>{{ list.employeeDetails.designation }}</td>   -->\n                    <td>{{ list.gross.amt }}</td>\n                    <td>{{ list.totalDeduction.amt }}</td>\n                    <td>{{list.netSalary.amt}}</td>\n                    <td>\n                        <button *ngIf=\"showChequeBtn\" class=\"btn btn-danger\" type=\"button\" (click)=\"addChequeNo(list._id)\"><i class=\"fas fa-edit\"></i></button>&nbsp;\n                        <button title=\"info\" class=\"btn btn-primary\" type=\"button\" (click)=\"showSalarySlipDetails(list._id)\"><i class=\"fas fa-info\"></i></button>&nbsp;\n                        <button *ngIf=\"list.isGenerated\" class=\"btn btn-default btn-fab btn-icon btn-round\" type=\"button\" (click)=\"generatePdf(list._id)\"><i class=\"fas fa-file-download\"></i></button>\n\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"6\">\n                        <div class=\"card\" style=\"background-color:whitesmoke\" [hidden]=\"showSalaryDetailsCards[list._id]\">\n                            <div *ngIf=\"salarySlipDetails[list._id] !== undefined\">\n                                <table width=100% class=\"payrollDetails1\" *ngFor=\"let empDetails of salarySlipDetails[list._id].employeeSalaryDetails\">\n                                    <tr>\n                                        <th class=\"text-center\" colspan=\"6\" ><b class=\"display-flex\">Payroll Details\n                                            <div *ngIf=\"!list.isGenerated\" class=\"margin-top3\">\n                                            <button title=\"Update\" class=\"editbutton\">\n                                                <a href=\"javascript:void(0);\" routerLink=\"/pages/payroll/update-payroll/{{list._id}}/{{list.month}}/{{list.year}}\"><i  class=\"fa fa-pencil-square-o\"></i></a>\n                                            </button>\n                                        </div></b>\n\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <th>Annual CTC:</th>\n                                        <th>Monthly Pay:</th>\n                                        <th>Earned Leave Balance:</th>\n                                        <th>Account Number:</th>\n                                        <th>Present Days:</th>\n                                        <th>Pay Days:</th>\n                                    </tr>\n                                    <tr>\n                                        <td>{{ empDetails.annuallyctc }}</td>\n                                        <td>{{ empDetails.monthlyctc }}</td>\n                                        <td>{{ empDetails.earnedLeaves }}</td>\n                                        <td>{{ empDetails.accountNum }}</td>\n                                        <td>{{ empDetails.present }}</td>\n                                        <td>{{ empDetails.payDays }}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">\n                                            <table width=\"100%\" class=\"innertable\" *ngFor=\"let empDetailsEarnings of salarySlipDetails[list._id].earningDetails; let i = index\">\n                                                <tr *ngIf=\"i===0\">\n                                                    <th colspan=\"2\">Total Earnings</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>{{ empDetailsEarnings.label }}</th>\n                                                    <td>{{ empDetailsEarnings.amt }}</td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                        <td colspan=\"3\">\n                                            <table width=\"100%\" class=\"innertable\" *ngFor=\"let empDetailsDeductions of salarySlipDetails[list._id].deductionDetails; let i = index\">\n                                                <tr *ngIf=\"i===0\">\n                                                    <th colspan=2>Total Deductions</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>{{ empDetailsDeductions.label }}</th>\n                                                    <td>{{ empDetailsDeductions.amt }}</td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n\n                                </table>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"salarySlipStatus.length != 0\">\n            <h3 style=\"text-align: center;\">{{ salarySlipStatus }}</h3>\n        </div>\n    </div>\n</div>","import { PayrollApiService } from '../payroll-service/payroll-api.service';\nimport { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport * as jsPDF from 'jspdf'\nimport { FormBuilder } from '@angular/forms';\nimport { EmployeeService } from '../../employee-wizard/services/employee.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NotifierService } from 'angular-notifier';\n\n\n\n@Component({\n  selector: 'app-list-payroll',\n  templateUrl: './list-payroll.component.html',\n  styleUrls: ['./list-payroll.component.scss']\n})\n\nexport class ListPayrollComponent implements OnInit {\n\n  paymentData: any[];\n  existingData = [];\n  fixdetails: any[];\n  deductionList: any[];\n  earningsList: any[];\n  demo = [];\n  grossAmt;\n  netSalaryAmt;\n  totalDeductionAmt;\n  imgData;\n\n  dataSalary = [];\n  salarySlip: any[];\n  employeeDetails: any;\n  earnedLeaveYearMsg: string;\n  showPayrollDetials = false;\n  salarySlipStatus = '';\n  paymentModeType = [\n    {name: 'Transfer to Bank Account', value: 'Tansfer to Bank Account'},\n    {name: 'Cash', value: 'Cash'},\n    {name: 'Cheque', value: 'Cheque'}\n  ];\n  status = \"Active\";\n  companyEmployeelist: any;\n  showSalaryDetailsCards = {};\n  showCheckbox = {};\n  selectAllCheckBox = false;\n  generateSalaryForEmployees = [];\n  salarySlipDetails = {};\n  currentMonthValue = {};\n  filterOnEmployee = false;\n  filterEmployeeId: any;\n  currentSalarySlipFilterStatus = 'later';\n\n  showChequeBtn = false;\n\n  constructor(\n    private api: PayrollApiService,\n    private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private spinner: NgxSpinnerService,\n    public notifier: NotifierService,\n\n\n  ) { }\n\n  ngOnInit() {\n    let dataSetting = this.currentMonthSetting();\n    this.listSalarySlipDetails(dataSetting.monthValue, dataSetting.year, 'later', false);\n    let monthValue = Number(dataSetting.monthValue);\n    for (var i = 1; i <= 12; i++) {\n      if (monthValue >= i) {\n        this.currentMonthValue[i.toString().padStart(2, '0')] = true;\n      } else {\n        this.currentMonthValue[i.toString().padStart(2, '0')] = false;\n      }\n    }\n    this.employeeList();\n  }\n\n  // Employee List\n  employeeList() {\n    try {\n      this.employeeListAPI.getEmployeeList(this.status).subscribe((data) => {\n        if (data.status === 'success') {\n          this.companyEmployeelist = data.data;\n        }\n      })\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  allDownload() {\n    try {\n      this.spinner.show();\n      if ((document.getElementById('salarySlipType') as HTMLInputElement).value === 'later') {\n        if (this.generateSalaryForEmployees.length === 0) {\n          this.spinner.hide();\n          Swal.fire('No Salary Slip Selected');\n        } else {\n\n          let generateSlip = {\n            employeeIdArray: this.generateSalaryForEmployees\n          }\n\n          let year = (document.getElementById('payrollYear') as HTMLInputElement).value\n          let month = (document.getElementById('salarySlipMonth') as HTMLInputElement).value\n          let currentDate = new Date();\n          if (Number(year) === currentDate.getFullYear()) {\n            this.api.monthlyGenerateSlip(generateSlip, month, year, 'multipleGenerate').forEach(async (data) => {\n              if (data.status === 'success') {\n                for (var i = 0; i < data.data.length; i++) {\n                  this.generatePdf(data.data[i]);\n                }\n                this.listSalarySlipDetails(month, year, 'later', false);\n                this.spinner.hide();\n              }\n            })\n            this.generateSalaryForEmployees = [];\n          } else {\n            this.api.generateSalarySlip(generateSlip, year, month).forEach((data) => {\n              if (data.status === 'success') {\n                for (var i = 0; i < data.data.length; i++) {\n                  this.generatePdf(data.data[i]);\n                }\n                this.listSalarySlipDetails(month, year, 'later', false);\n                this.spinner.hide();\n              }\n            })\n          }\n        }\n\n      } else if ((document.getElementById('salarySlipType') as HTMLInputElement).value === 'former') {\n        this.dataSalary.forEach((items) => {\n          this.generatePdf(items._id);\n        })\n        this.spinner.hide();\n      }\n      // this.spinner.hide();\n    } catch (error) {\n      console.log(error);\n      this.spinner.hide();\n    }\n  }\n\n  // download pdf start\n  async generatePdf(id) {\n    this.api.getSalarySlip(id).subscribe(async (data) => {\n      this.existingData = await data.data;\n      this.demo.push(data.data);\n\n      this.grossAmt = await data.data.gross.amt;\n      this.netSalaryAmt = await data.data.netSalary.amt;\n      this.totalDeductionAmt = await data.data.totalDeduction.amt;\n\n      this.employeeDetails = await data.data.employeeDetails;\n      var doc = await new jsPDF();\n      var image = new Image();\n\n      image.src = await data.data.companyImageUrl;\n\n      await doc.setFontSize(12);\n      await doc.rect(155, 20, 50, 24);\n      await doc.addImage(image, 'PNG', 170, 22, 20, 20, 'Default Logo', 'NONE');\n      await doc.rect(5, 20, 150, 8);\n      await doc.setFontStyle(\"bold\");\n      await doc.text(await this.employeeDetails.companyName, 75, 26, \"center\", \"a\");\n      await doc.setFontStyle(\"normal\");\n      await doc.rect(5, 28, 150, 8);\n      await doc.setFontStyle(\"bold\");\n      await doc.text(`Salary Slip for the Month of ${data.data.month}, ${data.data.year}`, 75, 34, \"center\", \"a\");\n      await doc.setFontStyle(\"normal\");\n      await doc.rect(5, 36, 75, 8);\n      await doc.text(\"Employee Name\", 22, 42, \"center\", \"a\");\n      await doc.rect(80, 36, 75, 8);\n      await doc.setFontStyle(\"bold\");\n      await doc.text(await this.employeeDetails.employeeName, 120, 42, \"center\", \"a\");\n      await doc.setFontStyle(\"normal\");\n\n\n      await doc.rect(5, 44, 50, 13);\n      await doc.text(\"Account No.\", 18, 52, \"center\", \"a\");\n      await doc.rect(55, 44, 50, 13);\n      if (await this.employeeDetails.accountNum) {\n        await doc.text(await this.employeeDetails.accountNum, 80, 52, \"center\", \"a\");\n      } else {\n        await doc.text('', 80, 52, \"center\", \"a\");\n      }\n      await doc.rect(105, 44, 50, 13);\n      await doc.text(\"Designation\", 125, 52, \"center\", \"a\");\n      await doc.rect(155, 44, 50, 13);\n      await doc.text(await this.employeeDetails.designation, 180, 52, \"center\", \"a\");\n\n      await doc.rect(5, 57, 50, 8);\n      await doc.text(\"Days Present\", 19, 63, \"center\", \"a\");\n      await doc.rect(55, 57, 50, 8);\n      await doc.text(await this.employeeDetails.present, 80, 63, \"center\", \"a\");\n      await doc.rect(105, 57, 50, 8);\n      await doc.text(\"Earned Leaves\", 125, 63, \"center\", \"a\");\n      await doc.rect(155, 57, 50, 8);\n      await doc.text(await this.employeeDetails.earnedLeaves, 175, 63, \"center\", \"a\");\n\n      await doc.rect(5, 65, 100, 8);\n      await doc.text(\"ESIC No :-\", 17, 71, \"center\", \"a\");\n      await doc.rect(105, 65, 100, 8);\n      await doc.text(\"P.F. No :-\", 120, 71, \"center\", \"a\");\n\n      await doc.rect(5, 73, 65, 8);\n      await doc.text(\"Leave Without Sanction\", 29, 79, \"center\", \"a\");\n      await doc.rect(70, 73, 35, 8);\n      await doc.text(await this.employeeDetails.unsanctionedLeave, 83, 79, \"center\", \"a\");\n      await doc.rect(105, 73, 60, 8);\n      await doc.text(\"Payable Days\", 125, 79, \"center\", \"a\");\n      await doc.rect(165, 73, 40, 8);\n      await doc.text(await this.employeeDetails.payDays, 180, 79, \"center\", \"a\");\n\n      await doc.rect(5, 81, 65, 8);\n      await doc.text(\"Total CTC/Month\", 22, 87, \"center\", \"a\");\n      await doc.rect(70, 81, 35, 8);\n      await doc.setFontStyle(\"bold\");\n      await doc.text(await this.employeeDetails.monthlyctc, 85, 87, \"center\", \"a\");\n      await doc.setFontStyle(\"normal\");\n      await doc.rect(105, 81, 60, 8);\n      await doc.text(\"Total CTC/Annum\", 129, 87, \"center\", \"a\");\n      await doc.rect(165, 81, 40, 8);\n      await doc.text(await this.employeeDetails.annuallyctc, 180, 87, \"center\", \"a\");\n\n      await doc.rect(5, 89, 100, 12);\n      await doc.setFontStyle(\"bold\");\n      await doc.text(\"Earnings\", 40, 97, \"center\", \"a\");\n      await doc.rect(105, 89, 100, 12);\n      await doc.text(\"Deductions\", 135, 97, \"center\", \"a\");\n\n\n      await doc.rect(5, 101, 65, 8);\n      await doc.rect(70, 101, 35, 8);\n      await doc.text(\"Amount\", 85, 107, \"center\", \"a\");\n      await doc.rect(105, 101, 60, 8);\n      await doc.rect(165, 101, 40, 8);\n      await doc.text(\"Amount\", 185, 107, \"center\", \"a\");\n      await doc.setFontStyle(\"normal\");\n\n      // Daynamic part start\n      var textY = 115;\n      var maxLength;\n      if (this.demo[0].deductions.length > this.demo[0].earnings.length) {\n        maxLength = await this.demo[0].deductions.length;\n      } else {\n        maxLength = await this.demo[0].earnings.length;\n      }\n      for (var i = 0; i < maxLength; i++) {\n        var rectY = textY - 6;\n        if (await this.demo[0].earnings[i] == undefined) {\n          await doc.rect(5, rectY, 65, 8);\n          await doc.rect(70, rectY, 35, 8);\n          textY = textY + 8;\n        } else {\n          await doc.rect(5, rectY, 65, 8);\n          await doc.text(this.demo[0].earnings[i].label, 8, textY, \"left\", \"a\");\n          await doc.rect(70, rectY, 35, 8);\n          await doc.text(this.demo[0].earnings[i].amt, 95, textY, \"center\", \"a\");\n        }\n        if (await this.demo[0].deductions[i] == undefined) {\n          await doc.rect(105, rectY, 60, 8);\n          await doc.rect(165, rectY, 40, 8);\n          textY = textY + 8;\n        } else {\n          await doc.rect(105, rectY, 60, 8);\n          await doc.text(this.demo[0].deductions[i].label, 117, textY, \"left\", \"a\");\n          await doc.rect(165, rectY, 40, 8);\n          await doc.text(this.demo[0].deductions[i].amt, 195, textY, \"center\", \"a\");\n          textY = textY + 8;\n        }\n      }\n\n      textY = textY - 6;\n      await doc.rect(5, textY, 65, 8);\n      await doc.text(\"Gross\", 13, textY + 6, \"center\", \"a\");\n      await doc.rect(70, textY, 35, 8);\n      await doc.text(this.grossAmt, 90, textY + 6, \"center\", \"a\");\n      await doc.rect(105, textY, 60, 8);\n      await doc.text(\"Total Deductions\", 134, textY + 6, \"center\", \"a\");\n      await doc.rect(165, textY, 40, 8);\n      await doc.text(this.totalDeductionAmt, 192, textY + 6, \"center\", \"a\");\n\n      textY = textY + 8;\n      await doc.rect(5, textY, 65, 8);\n      await doc.setFontStyle(\"bold\");\n      await doc.text(\"Net Salary\", 17, textY + 6, \"center\", \"a\");\n      await doc.rect(5, textY, 200, 8);\n      await doc.text(this.netSalaryAmt, 90, textY + 6, \"center\", \"a\");\n      await doc.setFontStyle(\"normal\");\n\n      textY = textY + 8;\n      await doc.rect(5, textY, 200, 8);\n\n      // doc.save('my.pdf');\n      await doc.save(this.employeeDetails.employeeName + '.pdf');\n    })\n  }\n\n  // account pdf start\n  accountpdfPdf() {\n\n\n    var doc = new jsPDF('a', 'mm', [700, 1000]);\n\n    doc.setFontSize(10);\n\n    var headerSpace = 30;\n\n    doc.text(18, headerSpace + 7, \"To\");\n\n    doc.text(23, headerSpace + 20, \"Indusind bank, Jaipur\");\n    doc.text(190, headerSpace + 7, \"Date:10/2019\");\n\n    doc.text(80, headerSpace + 30, \"Sub: Salary Transfer for the Month of sep 2019\");\n\n    doc.rect(15, headerSpace + 35, 200, 30);\n    doc.rect(15, headerSpace + 65, 200, 5);\n\n    doc.rect(15, headerSpace + 70, 15, 5);\n    doc.rect(15, headerSpace + 70, 70, 5);\n    doc.rect(15, headerSpace + 70, 105, 5);\n    doc.rect(15, headerSpace + 70, 140, 5);\n    doc.rect(15, headerSpace + 70, 200, 5);\n\n    doc.rect(15, headerSpace + 75, 15, 5); doc.text(\"Sr. No\", 17, headerSpace + 79, \"left\", \"a\");\n    doc.rect(15, headerSpace + 75, 70, 5); doc.text(\"Name\", 31, headerSpace + 79, \"left\", \"a\");\n    doc.rect(15, headerSpace + 75, 105, 5); doc.text(\"Account Number\", 86, headerSpace + 79, \"left\", \"a\");\n    doc.rect(15, headerSpace + 75, 140, 5); doc.text(\"Amount\", 123, headerSpace + 79, \"left\", \"a\");\n    doc.rect(15, headerSpace + 75, 200, 5); doc.text(\"Salary for the month\", 157, headerSpace + 79, \"left\", \"a\");\n\n    headerSpace = headerSpace + 80;\n    for (var i = 0; i < 20; i++) {\n      doc.rect(15, headerSpace, 15, 5);\n      doc.rect(15, headerSpace, 70, 5);\n      doc.rect(15, headerSpace, 105, 5);\n      doc.rect(15, headerSpace, 140, 5);\n      doc.rect(15, headerSpace, 200, 5);\n      headerSpace = headerSpace + 5;\n    }\n\n    // doc.addPage();\n\n    doc.save('my.pdf');\n  }\n  // accoutn pdf end\n\n  // Year Validation\n  yearValidation() {\n    try {\n      let currentDate = new Date();\n      let year = currentDate.getFullYear();\n      let yearValue = (document.getElementById('payrollYear') as HTMLInputElement).value;\n      let yearRegularExpression = /^(19|20)\\d{2}$/;\n      let result = yearValue.match(yearRegularExpression);\n\n      if (yearValue.length === 0 && result === null) {\n        this.earnedLeaveYearMsg = '';\n      } else if (result === null) {\n        this.earnedLeaveYearMsg = \"Year Value is not acceptable\";\n      } else {\n        this.earnedLeaveYearMsg = '';\n      }\n\n      if (Number(yearValue) < year) {\n        for (var key in this.currentMonthValue) {\n          this.currentMonthValue[key] = true;\n        }\n        (document.getElementById('salarySlipMonth') as HTMLInputElement).value = '01';\n      } else if (Number(yearValue) === year) {\n        let monthValue = currentDate.getMonth() + 1;\n        for (var i = 1; i <= 12; i++) {\n          if (monthValue >= i) {\n            this.currentMonthValue[i.toString().padStart(2, '0')] = true;\n          } else {\n            this.currentMonthValue[i.toString().padStart(2, '0')] = false;\n          }\n        }\n      } else if (Number(yearValue) > year) {\n        this.earnedLeaveYearMsg = \"Forthcoming data is not available\";\n      }\n\n\n\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Filter Functionality\n  filterFunctionality() {\n    this.selectAllCheckBox = false;\n\n    if ((document.getElementById('payrollYear') as HTMLInputElement).value.length === 0) {\n      let currentDate = new Date().toString();\n      (document.getElementById('payrollYear') as HTMLInputElement).value = currentDate.substring(11, 15);\n    }\n\n    if ((document.getElementById('salaryEmployee') as HTMLInputElement).value.length !== 0) {\n      this.filterEmployeeId = (document.getElementById('salaryEmployee') as HTMLInputElement).value;\n      let month = (document.getElementById('salarySlipMonth') as HTMLInputElement).value;\n      let year = (document.getElementById('payrollYear') as HTMLInputElement).value;\n      this.listSalarySlipDetails(month, year, 'later', true);\n    } else {\n      if ((document.getElementById('salarySlipType') as HTMLInputElement).value === 'former') {\n        this.currentSalarySlipFilterStatus = 'former';\n        let month = (document.getElementById('salarySlipMonth') as HTMLInputElement).value;\n        let year = (document.getElementById('payrollYear') as HTMLInputElement).value;\n\n        if ((document.getElementById('salaryModeType') as HTMLInputElement).value.length !== 0) {\n          let paymentMode = (document.getElementById('salaryModeType') as HTMLInputElement).value;\n          this.filterSalarySlip(paymentMode, year, month);\n        } else {\n          this.listSalarySlipDetails(month, year, 'former', false);\n        }\n\n      } else if ((document.getElementById('salarySlipType') as HTMLInputElement).value === 'later') {\n        this.currentSalarySlipFilterStatus = 'later';\n        let month = (document.getElementById('salarySlipMonth') as HTMLInputElement).value;\n        let year = (document.getElementById('payrollYear') as HTMLInputElement).value;\n\n        if ((document.getElementById('salaryModeType') as HTMLInputElement).value.length !== 0) {\n          let paymentMode = (document.getElementById('salaryModeType') as HTMLInputElement).value;\n          this.filterCurrentSalarySlip(paymentMode, year, month);\n        } else {\n          this.listSalarySlipDetails(month, year, 'later', false);\n        }\n      }\n    }\n\n    (document.getElementById('salaryModeType') as HTMLInputElement).value === 'Cheque'? this.showChequeBtn = true : this.showChequeBtn = false;\n\n  }\n\n  // Current Month Setting\n  currentMonthSetting() {\n    try {\n      let curretDate = new Date(); let manipulateDate, month, year, monthValue,\n        returnData = {\n          month: String,\n          year: String,\n          monthValue: String\n        };\n\n      monthValue = (curretDate.getMonth() + 1).toString().padStart(2, '0');\n      year = curretDate.toString();\n      year = year.substring(11, 15);\n      month = curretDate.toString();\n      month = month.substring(4, 7);\n      returnData.month = month;\n      returnData.monthValue = monthValue;\n      returnData.year = year;\n      (document.getElementById('payrollYear') as HTMLInputElement).value = year;\n      (document.getElementById(monthValue) as HTMLInputElement).setAttribute('selected', 'selected');\n      (document.getElementById('salarySlipType') as HTMLInputElement).value = 'later';\n\n      return (returnData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // List Salary Slips\n  listSalarySlips(year, monthValue) {\n    try {\n      this.api.getPayrolData(year, monthValue).subscribe((data) => {\n        if (data.status === 'success') {\n          if (data.data.length > 0) {\n            this.dataSalary = data.data;\n            this.salarySlipStatus = '';\n          } else {\n            this.dataSalary = [];\n            this.salarySlipStatus = 'Salary Slip Not Found';\n          }\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Filter Employee According to payment Mode\n  filterSalarySlip(modeType, year, month) {\n    try {\n\n      this.api.filterSalarySlip(modeType, year, month).subscribe((data) => {\n        if (data.status === 'success') {\n          if (data.data.length > 0) {\n            this.dataSalary = data.data;\n            this.salarySlipStatus = '';\n          } else {\n            this.dataSalary = [];\n            this.salarySlipStatus = 'No Salary Slip Found';\n          }\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // List Employee Salary Details\n  listSalarySlipDetails(monthValue, year, type, employeeFilter) {\n    try {\n      if (employeeFilter) {\n        this.api.listSalarySlipDetails(monthValue, year).subscribe((data) => {\n          if (data.status === 'success') {\n            this.dataSalary = [];\n            for (var i = 0; i < data.data.length; i++) {\n              if (data.data[i].isGenerated) {\n                if (data.data[i].employeeId == this.filterEmployeeId) {\n                  this.dataSalary.push(data.data[i]);\n                  (document.getElementById('salarySlipType') as HTMLInputElement).value = 'former';\n                  this.currentSalarySlipFilterStatus = 'former';\n                  break;\n                } else {\n                  continue;\n                }\n              } else if (!data.data[i].isGenerated) {\n                if (data.data[i]._id == this.filterEmployeeId) {\n                  this.dataSalary.push(data.data[i]);\n                  (document.getElementById('salarySlipType') as HTMLInputElement).value = 'later';\n                  this.currentSalarySlipFilterStatus = 'later';\n                  break;\n                } else {\n                  continue;\n                }\n              }\n            }\n\n            this.showSalaryDetailsCards = {};\n            this.showCheckbox = {};\n\n            for (var i = 0; i < this.dataSalary.length; i++) {\n              this.showSalaryDetailsCards[this.dataSalary[i]._id] = true;\n              if (!this.dataSalary[i].isGenerated) {\n                this.showCheckbox[this.dataSalary[i]._id] = false;\n              }\n            }\n\n            if (this.dataSalary.length === 0) {\n              this.salarySlipStatus = 'No Salary Slip Found';\n              this.selectAllCheckBox = false;\n            } else {\n              this.salarySlipStatus = '';\n            }\n          }\n        })\n      } else {\n        this.api.listSalarySlipDetails(monthValue, year).subscribe((data) => {\n          if (data.status === 'success') {\n            this.dataSalary = [];\n            if (type === 'later') {\n              for (var i = 0; i < data.data.length; i++) {\n                if (!data.data[i].isGenerated) {\n                  this.dataSalary.push(data.data[i]);\n                }\n              }\n            } else if (type === 'former') {\n              for (var i = 0; i < data.data.length; i++) {\n                if (data.data[i].isGenerated) {\n                  this.dataSalary.push(data.data[i]);\n                }\n              }\n            }\n\n            this.showSalaryDetailsCards = {};\n            this.showCheckbox = {};\n\n            for (var i = 0; i < this.dataSalary.length; i++) {\n              this.showSalaryDetailsCards[this.dataSalary[i]._id] = true;\n              if (!this.dataSalary[i].isGenerated) {\n                this.showCheckbox[this.dataSalary[i]._id] = false;\n              }\n            }\n            if (this.dataSalary.length === 0) {\n              this.salarySlipStatus = 'No Salary Slip Found';\n              this.selectAllCheckBox = false;\n            } else {\n              this.salarySlipStatus = '';\n            }\n          }\n        })\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Header Checkbox Functionality\n  headerCheckBox() {\n    try {\n      this.selectAllCheckBox = !this.selectAllCheckBox;\n      if (this.selectAllCheckBox) {\n        this.generateSalaryForEmployees = [];\n        for (var key in this.showCheckbox) {\n          this.showCheckbox[key] = true;\n          this.generateSalaryForEmployees.push(key);\n        }\n      } else {\n        for (var key in this.showCheckbox) {\n          this.showCheckbox[key] = false;\n          this.generateSalaryForEmployees = [];\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // List CheckBoxes Functionalities\n  listCheckBoxes(id) {\n    try {\n      this.showCheckbox[id] = !this.showCheckbox[id];\n      if (this.showCheckbox[id]) {\n        this.generateSalaryForEmployees.push(id);\n      } else {\n        for (var i = 0; i < this.generateSalaryForEmployees.length; i++) {\n          if (id == this.generateSalaryForEmployees[i]) {\n            this.generateSalaryForEmployees.splice(i, 1);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Show Salary Details\n  showSalarySlipDetails(employeeId) {\n    try {\n      this.showSalaryDetailsCards[employeeId] = !this.showSalaryDetailsCards[employeeId];\n      this.salarySlipDetails[employeeId] = {};\n      this.salarySlipDetails[employeeId].employeeSalaryDetails = [];\n      this.salarySlipDetails[employeeId].deductionDetails = [];\n      this.salarySlipDetails[employeeId].earningDetails = [];\n      for (var i = 0; i < this.dataSalary.length; i++) {\n        if (this.dataSalary[i]._id == employeeId) {\n          this.salarySlipDetails[employeeId].employeeSalaryDetails.push(this.dataSalary[i].employeeDetails);\n          this.salarySlipDetails[employeeId].deductionDetails = this.dataSalary[i].deductions;\n          this.salarySlipDetails[employeeId].earningDetails = this.dataSalary[i].earnings;\n          break;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Filter the later generate salary slip\n  filterCurrentSalarySlip(modeType, year, month) {\n    try {\n      this.showSalaryDetailsCards = {};\n      this.showCheckbox = {};\n\n      this.api.filterCurrentSalarySlip(modeType, year, month).subscribe((data) => {\n        if (data.status === 'success') {\n          if (data.data.length > 0) {\n\n            this.dataSalary = data.data;\n            this.salarySlipStatus = '';\n\n            for (var i = 0; i < data.data.length; i++) {\n              this.showSalaryDetailsCards[data.data[i]._id] = true;\n              if (!data.data[i].isGenerated) {\n                this.showCheckbox[data.data[i]._id] = false;\n              }\n            }\n          } else {\n            this.dataSalary = [];\n            this.salarySlipStatus = 'No Salary Slip Found';\n          }\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Reset Functionality\n  resetFunctionality() {\n    try {\n      this.earnedLeaveYearMsg = '';\n      this.currentSalarySlipFilterStatus = 'later';\n      this.filterOnEmployee = false;\n      let dataSetting = this.currentMonthSetting();\n      let currentDate = new Date();\n      // let monthValue = (currentDate.getMonth()+1).toString().padStart(2,'0');\n      let monthValue = (currentDate.getMonth() + 1);\n      for (var i = 1; i <= 12; i++) {\n        if (monthValue >= i) {\n          this.currentMonthValue[i.toString().padStart(2, '0')] = true;\n        } else {\n          this.currentMonthValue[i.toString().padStart(2, '0')] = false;\n        }\n      }\n\n      (document.getElementById(`${dataSetting.monthValue}`) as HTMLInputElement).removeAttribute('selected');\n      (document.getElementById('salarySlipType') as HTMLInputElement).value = 'later';\n      (document.getElementById('salaryEmployee') as HTMLInputElement).value = '';\n      (document.getElementById('salaryModeType') as HTMLInputElement).value = '';\n      (document.getElementById('salarySlipMonth') as HTMLInputElement).value = monthValue.toString().padStart(2, '0');\n      this.listSalarySlipDetails(dataSetting.monthValue, dataSetting.year, 'later', false);\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  employeeFilter() {\n    this.filterOnEmployee = true;\n  }\n\n  // ADD CHEQUE NO.\n  addChequeNo(salaryId){\n    try {\n\n      this.api.getChequeApi(salaryId).subscribe(response => {\n        if(response.status === 'success'){\n          Swal.fire({\n            title: \"Cheque Details\",\n            text: \"Enter Cheque No.:\",\n            input: 'text',\n            inputValue: response.data.chequeNum,\n            showCancelButton: true,\n            inputValidator: (value) => {\n              return !value && 'Cheque No. Mandatory'\n            }\n            }).then((result) => {\n            if (result.value) {\n              this.api.addChequeApi(salaryId, {checkNum: result.value}).subscribe(response => {\n                (response.status === 'success') ?  this.notifier.notify(response.status, response.message) :\n                this.notifier.notify(response.status, response.message) ;\n              }, error => {\n                console.log(error);\n              });\n            }\n        });\n        }\n\n        if(response.status === 'error'){\n          this.notifier.notify(response.status, response.message);\n        }\n      }, error => {\n        console.log(error);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray, FormArrayName } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PayrollApiService } from '../payroll-service/payroll-api.service';\n\n@Component({\n  selector: 'app-update-payroll',\n  templateUrl: 'update-payroll.component.html',\n  styleUrls:['update-payroll.component.scss']\n})\n\nexport class UpdatePayrollComponent implements OnInit {\nemployeeId: any;\nrequestMonth: any;\nrequestYear: any;\nexistingSalaryDetails: any;\nupdateSalarySlipForm: any;\nsalarySlipDeductions = [];\nsalarySlipEarnings = [];\ndeductionForm: any;\nearningsForm: any;\nbuttonValue = 'Show More';\nshowButtonValue = false;\nsalarySlipPattern = {};\ndidUpdate = false;\nupdatedSalaryForm: any;\nisGenerated: any;\nerrorMsg = false;\nsuccessMessage = false;\nerrMsg: any;\nsuccessMsg: any;\n\nconstructor(private api:PayrollApiService, private fb:FormBuilder,private route:ActivatedRoute,private ngZone: NgZone,private router:Router){}\n\nngOnInit() {\n  try {\n  this.employeeId = this.route.snapshot.paramMap.get(\"employeeId\");\n  this.requestMonth = this.route.snapshot.paramMap.get(\"month\");\n  this.requestYear = this.route.snapshot.paramMap.get(\"year\");\n  this.salarySlipForm();\n  this.api.listSalarySlipDetails(this.requestMonth,this.requestYear).subscribe((data)=>{\n    if(data.status === 'success'){\n      for(var i = 0; i<data.data.length; i++){\n        if(data.data[i]._id == this.employeeId){\n          this.existingSalaryDetails = data.data[i];\n          this.salarySlipDeductions = data.data[i].deductions;\n          this.salarySlipEarnings = data.data[i].earnings;\n          this.isGenerated = data.data[i].isGenerated;\n          break;\n        }\n      }\n      // Basic Details\n      this.updateSalarySlipForm = this.fb.group({\n        employeeDetails: new FormGroup ({\n          employeeName: new FormControl(this.existingSalaryDetails.employeeDetails.employeeName),\n          designation: new FormControl(this.existingSalaryDetails.employeeDetails.designation),\n          present: new FormControl(this.existingSalaryDetails.employeeDetails.present),\n          earnedLeaves: new FormControl(this.existingSalaryDetails.employeeDetails.earnedLeaves),\n          unsanctionedLeave: new FormControl(this.existingSalaryDetails.employeeDetails.unsanctionedLeave),\n          payDays: new FormControl(this.existingSalaryDetails.employeeDetails.payDays),\n        })\n      })\n\n      // Create Deduction Form Dynamically\n      let deduction = {};\n      this.salarySlipDeductions.forEach(totalDeductions =>{\n        deduction[totalDeductions.label] = new FormControl(totalDeductions.amt)\n        this.salarySlipPattern[totalDeductions.label] = '';\n      })\n      this.deductionForm = this.fb.group({\n        deductions: new FormGroup(deduction)\n      })\n\n      // Create Earnings Form Dynamically\n      let earnings = {};\n      this.salarySlipEarnings.forEach(totalEarnings=>{\n        earnings[totalEarnings.label] = new FormControl(totalEarnings.amt)\n        this.salarySlipPattern[totalEarnings.label] = '';\n      })\n      this.earningsForm = this.fb.group({\n        earnings: new FormGroup(earnings)\n      })\n    }\n  })\n  } catch (error) {\n    console.log(error);\n  }\n}\nsalarySlipForm(){\n  try {\n    this.updateSalarySlipForm = this.fb.group({\n      employeeDetails: new FormGroup ({\n        employeeName: new FormControl(''),\n        designation: new FormControl(''),\n        present: new FormControl(''),\n        earnedLeaves: new FormControl(''),\n        unsanctionedLeave: new FormControl(''),\n        payDays: new FormControl(''),\n      })\n    })\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nupdateSalarySlip(element){\n  try{\n    this.updatedSalaryForm = this.fb.group({\n      employeeDetails: new FormGroup({\n        employeeName: new FormControl(this.updateSalarySlipForm.get('employeeDetails.employeeName').value),\n        designation: new FormControl (this.updateSalarySlipForm.get('employeeDetails.designation').value),\n        present: new FormControl (this.updateSalarySlipForm.get('employeeDetails.present').value),\n        earnedLeaves: new FormControl (this.updateSalarySlipForm.get('employeeDetails.earnedLeaves').value),\n        unsanctionedLeave: new FormControl (this.updateSalarySlipForm.get('employeeDetails.unsanctionedLeave').value),\n        payDays: new FormControl (this.updateSalarySlipForm.get('employeeDetails.payDays').value),\n      }),\n      deductions : this.deductionForm,\n      earnings: this.earningsForm,\n      employeeIdArray: new FormArray([\n        new FormControl(this.employeeId),\n      ]),\n      isGenerated: new FormControl(this.isGenerated)\n    });\n\n   let currentDate = new Date();\n\n   // If salary Slip is not generated for the current month\n\n   if((currentDate.getMonth()+1).toString().padStart(2,'0') === this.requestMonth && !this.isGenerated){\n     this.api.monthlyGenerateSlip(this.updatedSalaryForm.value,this.requestMonth,this.requestYear,'Generate').subscribe((data)=>{\n       if(data.status === 'success'){\n         this.successMessage = true;\n         this.errorMsg = false;\n         this.successMsg = data.message;\n         setTimeout(() => {\n           this.router.navigateByUrl(\"/pages/payroll/list-payroll\");\n           this.handelErrors();\n         }, 2000);\n       } else if(data.status === 'error'){\n         this.successMessage = false;\n         this.errorMsg = true;\n         this.errMsg = data.message;\n         setTimeout(() => {\n           this.handelErrors();\n         }, 5000);\n       }\n     })\n   }\n\n   // If salary Slip is generated for the current month and user want to update the data\n   if((currentDate.getMonth()+1).toString().padStart(2,'0') === this.requestMonth && this.isGenerated){\n    this.api.monthlyGenerateSlip(this.updatedSalaryForm.value,this.requestMonth,this.requestYear,'Update').subscribe((data) =>{\n      if(data.status === 'success'){\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        setTimeout(() => {\n          this.router.navigateByUrl(\"/pages/payroll/list-payroll\");\n          this.handelErrors();\n        }, 2000);\n      } else if(data.status === 'error'){\n        this.successMessage = false;\n        this.errorMsg = true;\n        this.errMsg = data.message;\n        setTimeout(() => {\n          this.handelErrors();\n        }, 5000);\n      }\n    })\n   }\n\n\n\n\n\n   element.scrollIntoView();\n  }catch(err){\n    console.log(err);\n  }\n}\n\nshowFunctinality(){\n  try{\n    this.showButtonValue = !this.showButtonValue;\n    if(this.showButtonValue){\n      this.buttonValue = 'Show Less';\n    } else {\n      this.buttonValue = 'Show More';\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\ncheckValidation(label){\n  try {\n   if((document.getElementById(label)as HTMLInputElement).value.match(/^\\$?[0-9]?((\\.[0-9]+)|([0-9]+(\\.[0-9]+)?))$/) === null){\n     this.salarySlipPattern[label] = `${label} value is not acceptable`;\n   } else {\n    this.salarySlipPattern[label] = '';\n  }\n   for(var key in this.salarySlipPattern){\n     if(this.salarySlipPattern[key].length > 0){\n       this.didUpdate = true;\n       break;\n     } else {\n       this.didUpdate = false;\n     }\n   }\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nhandelErrors(){\n  try {\n    this.successMessage = false;\n    this.errorMsg = false;\n    this.successMsg = '';\n    this.errMsg = '';\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}","<div class=\"card card-u\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\" #target>Update Salary Slip</h2>\n   </div>\n\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateSalarySlipForm\">\n         <div [formGroup]=\"updateSalarySlipForm.get('employeeDetails')\">\n               <div class=\"row\">\n                 <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                   <div class=\"form-group\">\n                      <label class=\"control-label \"><b>Employee Name:</b></label><br>\n                       <input type=\"text\" class=\"form-control\" formControlName=\"employeeName\" readonly>\n                     </div>\n                 </div>\n                 <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                   <div class=\"form-group\">\n                     <label class=\"control-label \"><b>Designation:</b></label><br>\n                     <input type=\"text\" class=\"form-control\" formControlName=\"designation\" readonly>\n                 </div>\n                 </div>\n               </div>\n               <div class=\"row\">\n                  <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div class=\"form-group\">\n                       <label class=\"control-label\"><b>Present Days:</b></label><br>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"present\">\n                      </div>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"control-label col-sm-6\"><b>Pay Days:</b></label><br>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"payDays\">\n                  </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div class=\"form-group\">\n                       <label class=\"control-label \"><b>Earned Leaves:</b></label><br>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"earnedLeaves\" readonly>\n                      </div>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"control-label \"><b>Unsactioned Leaves:</b></label><br>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"unsanctionedLeave\" readonly>\n                  </div>\n                  </div>\n                </div>\n         </div>\n      </form>\n\n      <button class=\"btn btn-success\" (click)=\"showFunctinality()\">{{buttonValue}}</button>\n<div class=\"row\" *ngIf='showButtonValue'>\n<div class=\"col-lg-6 col-md-6 col-sm-6\">\n<!-- Earning Form Values -->\n<form class=\"form-horizontal\" role=\"form\" [formGroup]=\"earningsForm\">\n   <div [formGroup]=\"earningsForm.get('earnings')\">\n         <div class=\"edit-form-heading\">\n            <h3>Total Earnings</h3>\n         </div>\n   <div class=\"row\">\n      <div class=\"col-lg-6 col-md-6 col-sm-6\" *ngFor=\"let earnings of salarySlipEarnings\">\n         <div class=\"form-group\">\n            <label class=\"control-label \"><b>{{ earnings.label }}<sup class=\"redtext\">*</sup>:</b></label><br>\n            <input type=\"text\" class=\"form-control\" id=\"{{ earnings.label }}\" (keyup)=\"checkValidation(earnings.label)\" formControlName=\"{{earnings.label}}\">\n            <div><p class=\"errortext bottomspace-none\">{{salarySlipPattern[earnings.label]}}</p></div>\n        </div>\n      </div>\n   </div>\n   </div>\n</form>\n</div>\n<div class=\"col-lg-6 col-md-6 col-sm-6\">\n<!-- Deduction Form Values -->\n<form class=\"form-horizontal\" role=\"form\" [formGroup]=\"deductionForm\">\n   <div [formGroup]=\"deductionForm.get('deductions')\">\n         <div class=\"edit-form-heading\">\n            <h3>Total Deductions</h3>\n         </div>\n   <div class=\"row\">\n      <div class=\"col-lg-6 col-md-6 col-sm-6\" *ngFor=\"let deductions of salarySlipDeductions\">\n         <div class=\"form-group\">\n            <label class=\"control-label \"><b>{{ deductions.label }}<sup class=\"redtext\">*</sup>:</b></label><br>\n            <input type=\"text\" class=\"form-control\" id=\"{{ deductions.label }}\" (keyup)=\"checkValidation(deductions.label)\" formControlName=\"{{deductions.label}}\">\n            <div><p class=\"errortext bottomspace-none\">{{salarySlipPattern[deductions.label]}}</p></div>\n        </div>\n      </div>\n   </div>\n\n   </div>\n</form>\n   </div>\n</div>\n            <div class=\"form-group\">\n               <div class=\"\">\n                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"didUpdate\" (click)=\"updateSalarySlip(target)\">Update</button>\n                  <button type=\"submit\" class=\"btn btn-danger\" routerLink=\"/pages/payroll/list-payroll\">Cancel</button>\n               </div>\n            </div>\n   </div>\n</div>"]}