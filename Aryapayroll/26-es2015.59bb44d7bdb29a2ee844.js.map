{"version":3,"sources":["webpack:///src/app/pages/roles/roles.component.ts","webpack:///src/app/pages/roles/roles.component.html","webpack:///src/app/pages/roles/role/add-role/add-role.component.html","webpack:///src/app/pages/roles/role/add-role/add-role.component.ts","webpack:///src/app/pages/roles/role/update-role/update-role.component.html","webpack:///src/app/pages/roles/role/update-role/update-role.component.ts","webpack:///src/app/pages/roles/permission/update-permission/update-permission.component.html","webpack:///src/app/pages/roles/permission/update-permission/update-permission.component.ts","webpack:///src/app/pages/roles/role/list-role/list-role.component.html","webpack:///src/app/pages/roles/role/list-role/list-role.component.ts","webpack:///src/app/pages/roles/permission/list-permission/list-permission.component.html","webpack:///src/app/pages/roles/roles-routing.module.ts","webpack:///src/app/pages/roles/permission/list-permission/list-permission.component.ts","webpack:///src/app/pages/roles/roles.module.ts"],"names":["RolesComponent","AddRoleComponent","rolesApi","formBuilder","Router","errorFlag","successFlag","errMsg","successMsg","addRoleValidationMessage","type","message","this","addRoleFormData","getRolesListData","subscribe","data","status","Inject","createMultiObj","dataSource","create","fields","text","value","mode","placeholder","showDropDownIcon","filterBarPlaceholder","popupHeight","appendTo","editMultiObj","edit","deleteMultiObj","delete","addRoleForm","group","title","required","description","permission","err","console","log","removeControl","get","setValue","trim","addRole","setTimeout","handleErrorMessage","navigateByUrl","error","submitRoles","UpdateRoleComponent","FormBuilder","updateRoleAPI","ActivatedRoute","Route","updateRoleValidationMessage","roleId","snapshot","paramMap","updateRoleFormStruct","updateRoleFormExist","updateRoleForm","listIndividualRole","updateRole","UpdatePermissionComponent","updatePermissionAPI","listIndividualPermissions","roleTitle","permissionList","updatePermissionForm","length","updateRolePermissions","submitPermissions","ListRoleComponent","roleListAPI","router","listAllRole","rolesInfo","route","path","component","canActivate","children","ListPermissionComponent","permissionListAPI","permissionInfo","permissionId","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","deletePermission","dismiss","DismissReason","cancel","redirectTo","pathMatch","RolesRoutingModule","forChild","RolesModule"],"mappings":"+MAOO,Y,MAAMA,EAEX,eAEA,a,6CAJWA,I,uBAAAA,EAAc,qECP3B,yB,kCDOO,G,iEEDK,eACI,iBAAQ,QAAY,OACxB,Q,oBADY,wB,yBAIZ,eACI,iBAAQ,QAAgB,OAC5B,Q,oBADY,4B,yBAWA,iBAGI,QACJ,Q,8BADI,iC,yBAJR,cACI,uBAKJ,Q,kCAJQ,0ICpB5B,aAAa,GAWN,Y,MAAMC,EAUX,YACUC,EACDC,EACCC,GAFA,KAAAF,WACD,KAAAC,cACC,KAAAC,SARV,KAAAC,WAAY,EACZ,KAAAC,aAAc,EACd,KAAAC,OAAS,GACT,KAAAC,WAAa,GA6Jb,KAAAC,yBAA2B,CACzB,MAAS,CACP,CAACC,KAAM,WAAYC,QAAS,uBAvJhC,WACEC,KAAKC,kBACLD,KAAKV,SAASY,mBAAmBC,UAAWC,IACvB,YAAhBA,EAAKC,SAEN,IAAYC,OAAO,KAEnBN,KAAKO,eAAiB,IAAI,IAAY,CAEpCC,WAAYJ,EAAKA,KAAKK,OAEtBC,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAE/BC,KAAM,WAENC,YAAa,2BAIbC,kBAAkB,EAElBC,qBAAsB,2BAEtBC,YAAa,UAEfjB,KAAKO,eAAeW,SAAS,mBAE7B,IAAYZ,OAAO,KAEnBN,KAAKmB,aAAe,IAAI,IAAY,CAElCX,WAAYJ,EAAKA,KAAKgB,KAEtBV,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAE/BC,KAAM,WAENC,YAAa,yBAIbC,kBAAkB,EAElBC,qBAAsB,yBAEtBC,YAAa,UAEfjB,KAAKmB,aAAaD,SAAS,iBAE3B,IAAYZ,OAAO,KAEnBN,KAAKqB,eAAiB,IAAI,IAAY,CAEpCb,WAAYJ,EAAKA,KAAKkB,OAEtBZ,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAE/BC,KAAM,WAENC,YAAa,2BAIbC,kBAAkB,EAElBC,qBAAsB,2BAEtBC,YAAa,UAEfjB,KAAKqB,eAAeH,SAAS,sBAKnC,kBACE,IACElB,KAAKuB,YAAcvB,KAAKT,YAAYiC,MAAM,CACxCC,MAAO,IAAI,IAAY,GAAG,IAAWC,UACrCC,YAAa,IAAI,IAAY,IAC7BC,WAAY5B,KAAKT,YAAYiC,MAAM,CACjCf,OAAQ,GACRW,KAAM,GACNE,OAAQ,OAGZ,MAAOO,GACPC,QAAQC,IAAIF,EAAI9B,UAKpB,cACE,IAEmC,OAA9BC,KAAKO,eAAeK,OAA8C,OAA5BZ,KAAKmB,aAAaP,OAAgD,OAA9BZ,KAAKqB,eAAeT,MAC/FZ,KAAKuB,YAAYS,cAAc,eAEE,OAA9BhC,KAAKO,eAAeK,MACrBZ,KAAKuB,YAAYU,IAAI,qBAAqBC,SAASlC,KAAKO,eAAeK,OAEvEZ,KAAKuB,YAAYU,IAAI,cAAcD,cAAc,UAEpB,OAA5BhC,KAAKmB,aAAaP,MACnBZ,KAAKuB,YAAYU,IAAI,mBAAmBC,SAASlC,KAAKmB,aAAaP,OAEnEZ,KAAKuB,YAAYU,IAAI,cAAcD,cAAc,QAElB,OAA9BhC,KAAKqB,eAAeT,MACrBZ,KAAKuB,YAAYU,IAAI,qBAAqBC,SAASlC,KAAKqB,eAAeT,OAEvEZ,KAAKuB,YAAYU,IAAI,cAAcD,cAAc,WAIrDhC,KAAKuB,YAAYU,IAAI,SAASC,SAASlC,KAAKuB,YAAYU,IAAI,SAASrB,MAAMuB,QAC1B,OAA9CnC,KAAKuB,YAAYU,IAAI,eAAerB,MACrCZ,KAAKuB,YAAYU,IAAI,eAAeC,SAAS,IAE/ClC,KAAKuB,YAAYU,IAAI,eAAeC,SAASlC,KAAKuB,YAAYU,IAAI,eAAerB,MAAMuB,QAIvFnC,KAAKV,SAAS8C,QAAQpC,KAAKuB,YAAYX,OAAOT,UAAWC,IACpC,YAAhBA,EAAKC,QACNL,KAAKN,aAAc,EACnBM,KAAKJ,WAAaQ,EAAKL,QACvBC,KAAKP,WAAY,EAEjB4C,WAAW,KACTrC,KAAKsC,qBACLtC,KAAKR,OAAO+C,cAAc,2BACzB,OAEKnC,EAAKC,OAAS,WACtBL,KAAKP,WAAY,EACjBO,KAAKL,OAASS,EAAKL,QACnBC,KAAKN,aAAc,EAEnB2C,WAAW,KACTrC,KAAKsC,sBACJ,QAIP,MAAOE,GACPV,QAAQC,IAAIS,IAUhB,qBACExC,KAAKN,aAAc,EACnBM,KAAKP,WAAY,EACjBO,KAAKL,OAAS,GACdK,KAAKJ,WAAa,I,6CA/KTP,GAAgB,gC,uBAAhBA,EAAgB,4yCDf7B,gBACI,gBACI,eAAmC,oBAAS,OAChD,OACA,gBACI,gBACI,oBAGJ,OACA,gBACI,oBAGJ,OACA,iBAAoE,mCAAY,EAAAoD,iBAE5E,iBACA,iBACI,oBAAsC,kBAAQ,sBAAY,mBAA6B,aAAC,OAAO,OAAS,OACxG,iBACI,oBACA,wBAOJ,OACJ,OACA,iBACI,oBAAsC,kBAAQ,4BAAkB,mBAA6B,aAAC,OAAO,OAAS,OAC9G,iBACI,oBACJ,OACJ,OACJ,OACD,kBACC,gBAAmC,uBAAW,OAC/C,kBACC,iBACI,kBACG,kBACC,cAAI,kBAAM,OACV,kBACI,kBACA,kBACA,oBACA,OACA,OACA,kBACA,kBACA,oBAEA,OACA,OACA,OACL,OACH,OAEA,kBACI,cAAI,gBAAI,OACR,kBACI,kBACA,kBACA,oBACA,OACA,OACA,kBACA,kBACA,oBAEA,OACA,OACA,OACR,OAEA,kBACI,cAAI,kBAAM,OACV,kBACI,kBACA,kBACA,oBACA,OACA,OACA,kBACA,kBACA,oBAEA,OACA,OACA,OACR,OACJ,OACD,OACA,OACK,qBAA+E,kBAAM,OACrF,qBAAiF,kBAAM,OAC3F,OACJ,OACJ,Q,MA/F0C,iCAKC,mCAIO,wCAOzB,0DA2EiC,kD,uOClFnD,G,yBCTE,eACG,iBAAQ,QAAY,OACvB,Q,oBADW,wB,yBAIX,eACG,iBAAQ,QAAgB,OAC3B,Q,oBADW,4B,yBAUI,iBAGI,QACJ,Q,8BADI,iC,yBAJR,cACI,uBAKJ,Q,kCAJQ,mJCbrB,Y,MAAMC,EAQX,YACUC,EACAC,EACAC,EACAC,GAHA,KAAAH,cACA,KAAAC,gBACA,KAAAC,iBACA,KAAAC,QAVV,KAAArD,WAAY,EACZ,KAAAC,aAAc,EACd,KAAAC,OAAS,GACT,KAAAC,WAAa,GA0Cb,KAAAmD,4BAA8B,CAC5B,MAAS,CACP,CAACjD,KAAM,WAAYC,QAAS,uBAlChC,WACEC,KAAKgD,OAAShD,KAAK6C,eAAeI,SAASC,SAASjB,IAAI,UACxDjC,KAAKmD,uBACLnD,KAAKoD,sBAGP,uBACE,IACEpD,KAAKqD,eAAiBrD,KAAK2C,YAAYnB,MAAM,CAC3CC,MAAO,IAAI,IAAY,GAAG,IAAWC,UACrCC,YAAa,IAAI,IAAY,MAE/B,MAAOa,GACPV,QAAQC,IAAIS,IAIhB,sBACE,IACExC,KAAK4C,cAAcU,mBAAmBtD,KAAKgD,QAAQ7C,UAAWC,IACzC,YAAhBA,EAAKC,SACNL,KAAKqD,eAAiBrD,KAAK2C,YAAYnB,MAAM,CAC3CC,MAAO,IAAI,IAAYrB,EAAKA,KAAKqB,MAAO,IAAWC,UACnDC,YAAa,IAAI,IAAYvB,EAAKA,KAAKuB,kBAI7C,MAAOa,GACPV,QAAQC,IAAIS,IAUhB,qBACExC,KAAKN,aAAc,EACnBM,KAAKP,WAAY,EACjBO,KAAKL,OAAS,GACdK,KAAKJ,WAAa,GAGpB,aACE,IACEI,KAAKqD,eAAepB,IAAI,SAASC,SAASlC,KAAKqD,eAAepB,IAAI,SAASrB,MAAMuB,QAC7B,OAAjDnC,KAAKqD,eAAepB,IAAI,eAAerB,MAC1CZ,KAAKqD,eAAepB,IAAI,eAAeC,SAAS,IAEhDlC,KAAKqD,eAAepB,IAAI,eAAeC,SAASlC,KAAKqD,eAAepB,IAAI,eAAerB,MAAMuB,QAI/FnC,KAAK4C,cAAcW,WAAWvD,KAAKqD,eAAezC,MAAMZ,KAAKgD,QAAQ7C,UAAWC,IAC3D,YAAhBA,EAAKC,QACNL,KAAKN,aAAc,EACnBM,KAAKJ,WAAaQ,EAAKL,QACvBC,KAAKP,WAAY,EAEjB4C,WAAW,KACTrC,KAAKsC,qBACLtC,KAAK8C,MAAMP,cAAc,2BACxB,MAEqB,UAAhBnC,EAAKC,SACbL,KAAKP,WAAY,EACjBO,KAAKN,aAAc,EACnBM,KAAKL,OAASS,EAAKL,WAGrB,MAAOyC,GACPV,QAAQC,IAAIS,K,6CAxFLE,GAAmB,0C,uBAAnBA,EAAmB,66BDVhC,gBACI,gBACI,eAAmC,sBAAW,OAClD,OACA,gBACI,gBACC,oBAGH,OACA,gBACG,oBAGH,OACE,iBAAuE,mCAAY,EAAAa,gBAE/E,iBACI,mBAAsC,kBAAQ,sBAAY,mBAA6B,aAAC,OAAO,OAAS,OACxG,iBACI,oBACA,wBAOJ,OACA,iBACI,mBAAsC,kBAAQ,wBAAY,OAAS,OACnE,oBACJ,OACJ,OACA,qBAAkF,kBAAM,OACxF,qBAAiF,kBAAM,OAC3F,OACJ,OACJ,Q,MAhCuC,iCAKC,mCAIU,2CAMzB,4DAaiC,oD,kECxBnD,G,yBCHK,eACI,iBAAQ,QAAY,OACxB,Q,oBADY,wB,yBAIZ,eACI,iBAAQ,QAAgB,OAC5B,Q,oBADY,4BCXxB,aAAa,GAaN,Y,MAAMC,EAaX,YACUX,EACAY,EACAd,EACAnD,GAHA,KAAAqD,iBACA,KAAAY,sBACA,KAAAd,cACA,KAAAnD,SAhBV,KAAAC,WAAY,EACZ,KAAAC,aAAc,EACd,KAAAC,OAAS,GACT,KAAAC,WAAa,GAgBb,WACEI,KAAKgD,OAAShD,KAAK6C,eAAeI,SAASC,SAASjB,IAAI,UACxDjC,KAAKyD,oBAAoBC,0BAA0B1D,KAAKgD,QAAQ7C,UAAWC,IACzEJ,KAAK2D,UAAYvD,EAAKA,KAAKqB,MACR,YAAhBrB,EAAKC,QACNL,KAAKyD,oBAAoBvD,mBAAmBC,UAAWyD,IACrD,IAAYtD,OAAO,KAEnBN,KAAKO,eAAiB,IAAI,IAAY,CAEpCC,WAAYoD,EAAexD,KAAKK,OAEhCC,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAE/BC,KAAM,WAENC,YAAa,2BAIbC,kBAAkB,EAElBC,qBAAsB,2BAEtBC,YAAa,UAEfjB,KAAKO,eAAeW,SAAS,mBAC7BlB,KAAKO,eAAeK,MAAQR,EAAKA,KAAKK,OAEtC,IAAYH,OAAO,KAEnBN,KAAKmB,aAAe,IAAI,IAAY,CAElCX,WAAYoD,EAAexD,KAAKgB,KAEhCV,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAE/BC,KAAM,WAENC,YAAa,yBAIbC,kBAAkB,EAElBC,qBAAsB,yBAEtBC,YAAa,UAEfjB,KAAKmB,aAAaD,SAAS,iBAC3BlB,KAAKmB,aAAaP,MAAQR,EAAKA,KAAKgB,KAEpC,IAAYd,OAAO,KAEnBN,KAAKqB,eAAiB,IAAI,IAAY,CAEpCb,WAAYoD,EAAexD,KAAKkB,OAEhCZ,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAE/BC,KAAM,WAENC,YAAa,2BAIbC,kBAAkB,EAElBC,qBAAsB,2BAEtBC,YAAa,UAEfjB,KAAKqB,eAAeH,SAAS,mBAC7BlB,KAAKqB,eAAeT,MAAQR,EAAKA,KAAKkB,WAK5CtB,KAAK6D,qBAAuB7D,KAAK2C,YAAYnB,MAAM,CACjDI,WAAY5B,KAAK2C,YAAYnB,MAAM,CACjCf,OAAQ,GACRW,KAAM,GACNE,OAAQ,OAId,oBACE,IAE0C,IAArCtB,KAAKO,eAAeK,MAAMkD,QAAmD,IAAnC9D,KAAKmB,aAAaP,MAAMkD,QAAqD,IAArC9D,KAAKqB,eAAeT,MAAMkD,OAC7G9D,KAAK6D,qBAAqB7B,cAAc,eAErChC,KAAKO,eAAeK,MAAMkD,OAAS,EACpC9D,KAAK6D,qBAAqB5B,IAAI,qBAAqBC,SAASlC,KAAKO,eAAeK,OAEhFZ,KAAK6D,qBAAqB5B,IAAI,cAAcD,cAAc,UAEzDhC,KAAKmB,aAAaP,MAAMkD,OAAS,EAClC9D,KAAK6D,qBAAqB5B,IAAI,mBAAmBC,SAASlC,KAAKmB,aAAaP,OAE5EZ,KAAK6D,qBAAqB5B,IAAI,cAAcD,cAAc,QAEzDhC,KAAKqB,eAAeT,MAAMkD,OAAS,EACpC9D,KAAK6D,qBAAqB5B,IAAI,qBAAqBC,SAASlC,KAAKqB,eAAeT,OAEhFZ,KAAK6D,qBAAqB5B,IAAI,cAAcD,cAAc,WAI9DhC,KAAKyD,oBAAoBM,sBAAsB/D,KAAK6D,qBAAqBjD,MAAMZ,KAAKgD,QAAQ7C,UAAWC,IAClF,YAAhBA,EAAKC,QACNL,KAAKN,aAAc,EACnBM,KAAKJ,WAAaQ,EAAKL,QACvBC,KAAKP,WAAY,EAEjB4C,WAAW,KACTrC,KAAKsC,qBACLtC,KAAKR,OAAO+C,cAAc,gCAAgCvC,KAAKgD,SAC9D,OACK5C,EAAKC,OAAS,WACtBL,KAAKP,WAAY,EACjBO,KAAKL,OAASS,EAAKL,QACnBC,KAAKN,aAAc,EAEnB2C,WAAW,KACTrC,KAAKsC,sBACJ,QAIP,MAAOE,GACPV,QAAQC,IAAIS,IAKhB,qBACExC,KAAKN,aAAc,EACnBM,KAAKP,WAAY,EACjBO,KAAKL,OAAS,GACdK,KAAKJ,WAAa,I,6CAhKT4D,GAAyB,0C,uBAAzBA,EAAyB,i6BDftC,gBACI,gBACI,eAAmC,6BAAkB,OACrD,eAAgD,QAAyB,OAC7E,OACA,gBACI,gBACI,oBAGJ,OACA,gBACI,qBAGJ,OACA,kBAA0C,mCAAY,EAAAQ,uBAEvD,iBACC,gBAAmC,uBAAW,OAC/C,kBACC,kBACI,kBACG,kBACC,cAAI,kBAAM,OACV,kBACI,kBACA,kBACA,oBACA,OACA,OACA,kBACA,kBACA,oBAEA,OACA,OACA,OACL,OACH,OAEA,kBACI,cAAI,gBAAI,OACR,kBACI,kBACA,kBACA,oBACA,OACA,OACA,kBACA,kBACA,oBAEA,OACA,OACA,OACR,OAEA,kBACI,cAAI,kBAAM,OACV,kBACI,kBACA,kBACA,oBACA,OACA,OACA,kBACA,kBACA,oBAEA,OACA,OACA,OACR,OACJ,OACD,OACA,OACK,qBAA8C,kBAAM,OACpD,qBAAkG,kBAAM,OAC5G,OACJ,OACJ,Q,MA9EwD,4CAId,iCAKC,mCAkEc,0E,iGC/DlD,G,yBCDA,gBACI,aACA,aAAI,iBAAQ,QAAQ,OAAS,OAC7B,aAAK,QAAe,OACpB,aAAK,QAAqB,OAC1B,aACI,eAA8E,eAAqC,OAAI,iBAGvH,oBAAkG,mCAAuB,OAC7H,OACA,OAXJ,Q,mCAEgB,yBACP,8BACA,oCAEE,gEAGwC,qECdnD,Y,MAAMC,EAEX,YACUC,EACAC,GADA,KAAAD,cACA,KAAAC,SAIV,WACEnE,KAAKoE,cAGP,cACE,IACEpE,KAAKkE,YAAYE,cAAcjE,UAAWC,IACrB,YAAhBA,EAAKC,SACkB,IAArBD,EAAKA,KAAK0D,OACX9D,KAAKmE,OAAO5B,cAAc,yBAE1BvC,KAAKqE,UAAYjE,EAAKA,QAI5B,MAAOoC,GACPV,QAAQC,IAAIS,K,6CAxBLyB,GAAiB,sB,uBAAjBA,EAAiB,wcDT9B,gBACI,gBACM,aAAI,gBAAK,OACT,mBAAsG,cAAiC,wBAAe,OAC5J,OACA,kBACG,kBACI,aACA,cAAK,kBAAK,OACV,cAAK,mBAAM,OACX,cAAK,yBAAY,OACjB,cAAK,oBAAO,OACZ,OACJ,OACA,0BAYJ,OACF,Q,MAba,uC,0CCLP,G,gECSD,gBACI,aACA,aAAI,YAAG,QAAQ,OAAI,OACnB,aAAK,QAAqB,OAC1B,aACI,oBAA6C,8FAA2C,eACxF,OAAS,iBACb,OACA,OACA,O,sCAPO,yBACF,+BCVf,MAAMK,EAAgB,CACtB,CACIC,KAAM,GACNC,UAAY,EACZC,YAAY,CAAC,KACbC,SAAW,CACT,CACEH,KAAM,WACNC,UAAW,GAEb,CACED,KAAM,sBACNC,UAAW,GAEb,CACED,KAAM,4BACNC,UAAW,GAEb,CACED,KAAM,YACNC,UAAW,GAEb,CACED,KAAM,0BACNC,UCzBD,M,MAAMG,EAKX,YACU9B,EACA+B,GADA,KAAA/B,iBACA,KAAA+B,oBAGV,WACE5E,KAAKgD,OAAShD,KAAK6C,eAAeI,SAASC,SAASjB,IAAI,UACxDjC,KAAK4D,iBAGP,iBACE,IACE5D,KAAK4E,kBAAkBtB,mBAAmBtD,KAAKgD,QAAQ7C,UAAWC,IAC7C,YAAhBA,EAAKC,SACNL,KAAK2D,UAAYvD,EAAKA,KAAKqB,MAC3BzB,KAAK6E,eAAiBzE,EAAKA,KAAKwB,cAGpC,MAAOY,GACPV,QAAQC,IAAIS,IAIhB,iBAAiBsC,GACf,MAAMC,EAA2B,IAAKC,MAAM,CAC1CC,YAAa,CACXC,cAAe,kBACfC,aAAc,kBAEhBC,gBAAgB,IAElBL,EAAyBM,KAAK,CAC5B5D,MAAO,gBACPd,KAAM,wBACNb,KAAM,UACNwF,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,KAClBC,gBAAgB,IACfC,KAAMC,IACHA,EAAO/E,MACTZ,KAAK4E,kBAAkBgB,iBAAiB5F,KAAKgD,OAAO8B,GAAc3E,UAAWC,IACxD,YAAhBA,EAAKC,SACN0E,EAAyBM,KACvB,WACAjF,EAAKL,QACL,WAEFC,KAAK4D,oBAIT+B,EAAOE,UAAY,IAAKC,cAAcC,QAEtChB,EAAyBM,KACvB,YACA,sBACA,Y,6CA9DGV,GAAuB,sB,uBAAvBA,EAAuB,+fFVpC,gBACI,gBACI,eAA+B,2BAAgB,OAC/C,mBAC0B,cAAiC,kCAAyB,OAChF,mBACsB,cAAgC,OACtD,aAAI,SAAe,OAC3B,OAEA,mBACE,mBACI,cACA,cAAI,gBAAI,OACR,cAAI,6BAAiB,OACrB,cAAI,kBAAM,OACV,OACJ,OACA,0BAUF,OACJ,Q,MA1BsD,yEAItC,0BAWH,4C,4HERN,ID2BD,CACEJ,KAAK,GACLyB,WAAW,YACXC,UAAU,WAcX,Y,MAAMC,G,8BAAAA,I,oDAAAA,IAAkB,SALpB,CACP,IACA,IAAaC,SAAS7B,O,GAGnB,GE1BA,Q,MAAM8B,G,8BAAAA,I,oDAAAA,IAAW,UAHX,CAAC,KAAa,SAPhB,CACP,IACA,IACA,IACA,IACA,M,GAKG","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Add Roles</h2>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorFlag\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addRoleForm\" (ngSubmit)=\"submitRoles()\"\n        novalidate>\n            <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><strong>Title:&nbsp;<span style=\"color: darkred\">*</span></strong></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\" formControlName=\"title\">\n                    <div *ngFor=\"let validation of addRoleValidationMessage.title\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"addRoleForm.get('title').hasError(validation.type) && (addRoleForm.get('title').dirty || addRoleForm.get('title').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><strong>Description:&nbsp;<span style=\"color: darkred\">*</span></strong></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Description\" formControlName=\"description\">\n                </div>\n            </div>\n        </div>\n       <div class=\"permission-form\">\n        <h4 class=\"card-title text-center\">Permissions</h4>\n       <div class=\"contain\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n               <div class=\"create-section\">\n                <h5>Create</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"createCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Edit</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"editCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Delete</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section\">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"deleteCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n        </div>\n       </div>\n       </div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addRoleForm.invalid\">Submit</button>\n            <button class=\"btn btn-danger\" type=\"button\" routerLink=\"/pages/roles/list-role\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * MultiSelect Checkbox Samples\n */\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n  addRoleForm: any;\n  createMultiObj: MultiSelect;\n  editMultiObj: MultiSelect;\n  deleteMultiObj: MultiSelect;\n  errorFlag = false;\n  successFlag = false;\n  errMsg = '';\n  successMsg = '';\n\n  constructor(\n    private rolesApi: RolesService,\n    public formBuilder: FormBuilder,\n    private Router: Router\n  ) { }\n\n  ngOnInit() {\n    this.addRoleFormData();\n    this.rolesApi.getRolesListData().subscribe((data)=>{\n      if(data.status === 'success'){\n\n        MultiSelect.Inject(CheckBoxSelection);\n        // initialize the MultiSelect component\n        this.createMultiObj = new MultiSelect({\n          // set the country data to dataSource property\n          dataSource: data.data.create,\n          // map the appropriate columns to fields property\n          fields: { text: 'Name', value: 'Name' },\n          // set the type of mode for checkbox to visualized the checkbox added in li element.\n          mode: 'CheckBox',\n          // set the placeholder to MultiSelect input element\n          placeholder: 'Select Create Permission',\n          // set maximum selection length in Multiselect.\n          // maximumSelectionLength: 1,\n          // set true for enable the dropdown icon.\n          showDropDownIcon: true,\n          // set the placeholder to MultiSelect filter input element\n          filterBarPlaceholder: 'Search Create Permission',\n          // set the MultiSelect popup height\n          popupHeight: '350px',\n        });\n        this.createMultiObj.appendTo('#createCheckbox');\n\n        MultiSelect.Inject(CheckBoxSelection);\n        // initialize the MultiSelect component\n        this.editMultiObj = new MultiSelect({\n          // set the country data to dataSource property\n          dataSource: data.data.edit,\n          // map the appropriate columns to fields property\n          fields: { text: 'Name', value: 'Name' },\n          // set the type of mode for checkbox to visualized the checkbox added in li element.\n          mode: 'CheckBox',\n          // set the placeholder to MultiSelect input element\n          placeholder: 'Select Edit Permission',\n          // set maximum selection length in Multiselect.\n          // maximumSelectionLength: 1,\n          // set true for enable the dropdown icon.\n          showDropDownIcon: true,\n          // set the placeholder to MultiSelect filter input element\n          filterBarPlaceholder: 'Search Edit Permission',\n          // set the MultiSelect popup height\n          popupHeight: '350px',\n        });\n        this.editMultiObj.appendTo('#editCheckbox');\n\n        MultiSelect.Inject(CheckBoxSelection);\n        // initialize the MultiSelect component\n        this.deleteMultiObj = new MultiSelect({\n          // set the country data to dataSource property\n          dataSource: data.data.delete,\n          // map the appropriate columns to fields property\n          fields: { text: 'Name', value: 'Name' },\n          // set the type of mode for checkbox to visualized the checkbox added in li element.\n          mode: 'CheckBox',\n          // set the placeholder to MultiSelect input element\n          placeholder: 'Select Delete Permission',\n          // set maximum selection length in Multiselect.\n          // maximumSelectionLength: 1,\n          // set true for enable the dropdown icon.\n          showDropDownIcon: true,\n          // set the placeholder to MultiSelect filter input element\n          filterBarPlaceholder: 'Search Delete Permission',\n          // set the MultiSelect popup height\n          popupHeight: '350px',\n        });\n        this.deleteMultiObj.appendTo('#deleteCheckbox');\n      }\n    })\n  }\n\n  addRoleFormData(){\n    try {\n      this.addRoleForm = this.formBuilder.group({\n        title: new FormControl('',Validators.required),\n        description: new FormControl(''),\n        permission: this.formBuilder.group({\n          create: [],\n          edit: [],\n          delete: []\n        })\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  // Submit roles\n  submitRoles(){\n    try {\n\n      if(this.createMultiObj.value === null && this.editMultiObj.value === null && this.deleteMultiObj.value === null){\n        this.addRoleForm.removeControl('permission');\n      } else {\n        if(this.createMultiObj.value !== null){\n          this.addRoleForm.get('permission.create').setValue(this.createMultiObj.value);\n        } else {\n          this.addRoleForm.get('permission').removeControl('create');\n        }\n        if(this.editMultiObj.value !== null){\n          this.addRoleForm.get('permission.edit').setValue(this.editMultiObj.value);\n        } else {\n          this.addRoleForm.get('permission').removeControl('edit');\n        }\n        if(this.deleteMultiObj.value !== null){\n          this.addRoleForm.get('permission.delete').setValue(this.deleteMultiObj.value);\n        } else {\n          this.addRoleForm.get('permission').removeControl('delete');\n        }\n      }\n\n      this.addRoleForm.get('title').setValue(this.addRoleForm.get('title').value.trim());\n      if(this.addRoleForm.get('description').value === null){\n        this.addRoleForm.get('description').setValue('');\n      } else {\n      this.addRoleForm.get('description').setValue(this.addRoleForm.get('description').value.trim());\n      }\n\n      // Requset to server\n      this.rolesApi.addRole(this.addRoleForm.value).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.successFlag = true;\n          this.successMsg = data.message;\n          this.errorFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n            this.Router.navigateByUrl('/pages/roles/list-role');\n          }, 1000);\n\n        } else if(data.status = 'error'){\n          this.errorFlag = true;\n          this.errMsg = data.message;\n          this.successFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n          }, 2000);\n\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  addRoleValidationMessage = {\n    'title': [\n      {type: 'required', message: 'Title is required'}\n    ]\n  }\n\n  handleErrorMessage() {\n    this.successFlag = false;\n    this.errorFlag = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Update Role</h2>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorFlag\">\n            <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n            <strong>{{ successMsg }}</strong>\n         </p>\n      </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\"\n        novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><strong>Title:&nbsp;<span style=\"color: darkred\">*</span></strong></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Title\" formControlName=\"title\">\n                    <div *ngFor=\"let validation of updateRoleValidationMessage.title\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"updateRoleForm.get('title').hasError(validation.type) && (updateRoleForm.get('title').dirty || updateRoleForm.get('title').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <label class=\"col-sm-6 control-label\"><strong>Description:</strong></label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Description\" formControlName=\"description\">\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateRoleForm.invalid\">Update</button>\n            <button class=\"btn btn-danger\" type=\"button\" routerLink=\"/pages/roles/list-role\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-role',\n  templateUrl: './update-role.component.html',\n  styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n  updateRoleForm: any;\n  errorFlag = false;\n  successFlag = false;\n  errMsg = '';\n  successMsg = '';\n  roleId: any;\n\n  constructor(\n    private FormBuilder: FormBuilder,\n    private updateRoleAPI: RolesService,\n    private ActivatedRoute: ActivatedRoute,\n    private Route: Router\n  ) { }\n\n  ngOnInit() {\n    this.roleId = this.ActivatedRoute.snapshot.paramMap.get('roleId')\n    this.updateRoleFormStruct();\n    this.updateRoleFormExist();\n  }\n\n  updateRoleFormStruct(){\n    try {\n      this.updateRoleForm = this.FormBuilder.group({\n        title: new FormControl('',Validators.required),\n        description: new FormControl('')\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateRoleFormExist(){\n    try {\n      this.updateRoleAPI.listIndividualRole(this.roleId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.updateRoleForm = this.FormBuilder.group({\n            title: new FormControl(data.data.title, Validators.required),\n            description: new FormControl(data.data.description)\n          })\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateRoleValidationMessage = {\n    'title': [\n      {type: 'required', message: 'Title is required'}\n    ]\n  }\n\n  handleErrorMessage() {\n    this.successFlag = false;\n    this.errorFlag = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n\n  updateRole(){\n    try {\n      this.updateRoleForm.get('title').setValue(this.updateRoleForm.get('title').value.trim());\n      if(this.updateRoleForm.get('description').value === null){\n      this.updateRoleForm.get('description').setValue('');\n    } else {\n      this.updateRoleForm.get('description').setValue(this.updateRoleForm.get('description').value.trim());\n    }\n\n    // update  Role\n    this.updateRoleAPI.updateRole(this.updateRoleForm.value,this.roleId).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.successFlag = true;\n        this.successMsg = data.message;\n        this.errorFlag = false;\n\n        setTimeout(() => {\n          this.handleErrorMessage();\n          this.Route.navigateByUrl('/pages/roles/list-role');\n        }, 2000);\n\n      } else if(data.status === 'error'){\n        this.errorFlag = true;\n        this.successFlag = false;\n        this.errMsg = data.message\n      }\n    })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Update Permissions</h2>\n        <h4 class=\"card-title text-center titleHeading\">Role Title: {{roleTitle}}</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorFlag\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n        <form class=\"form-horizontal\" role=\"form\" (ngSubmit)=\"submitPermissions()\"\n        novalidate>\n       <div class=\"permission-form\">\n        <h4 class=\"card-title text-center\">Permissions</h4>\n       <div class=\"contain\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-4\">\n               <div class=\"create-section\">\n                <h5>Create</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"createCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Edit</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"editCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Delete</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section\">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"deleteCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n        </div>\n       </div>\n       </div>\n            <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            <button class=\"btn btn-danger\" type=\"button\" routerLink=\"/pages/roles/list-permission/{{roleId}}\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * MultiSelect Checkbox Samples\n */\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-update-permission',\n  templateUrl: './update-permission.component.html',\n  styleUrls: ['./update-permission.component.scss']\n})\nexport class UpdatePermissionComponent implements OnInit {\n  errorFlag = false;\n  successFlag = false;\n  errMsg = '';\n  successMsg = '';\n  createMultiObj: MultiSelect;\n  editMultiObj: MultiSelect;\n  deleteMultiObj: MultiSelect;\n  updateRoleForm: any;\n  roleId: any;\n  roleTitle: any;\n  updatePermissionForm: any;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private updatePermissionAPI: RolesService,\n    private FormBuilder: FormBuilder,\n    private Router: Router\n  ) { }\n\n  ngOnInit() {\n    this.roleId = this.ActivatedRoute.snapshot.paramMap.get('roleId');\n    this.updatePermissionAPI.listIndividualPermissions(this.roleId).subscribe((data)=>{\n      this.roleTitle = data.data.title;\n      if(data.status === 'success'){\n        this.updatePermissionAPI.getRolesListData().subscribe((permissionList)=>{\n          MultiSelect.Inject(CheckBoxSelection);\n          // initialize the MultiSelect component\n          this.createMultiObj = new MultiSelect({\n            // set the country data to dataSource property\n            dataSource: permissionList.data.create,\n            // map the appropriate columns to fields property\n            fields: { text: 'Name', value: 'Name' },\n            // set the type of mode for checkbox to visualized the checkbox added in li element.\n            mode: 'CheckBox',\n            // set the placeholder to MultiSelect input element\n            placeholder: 'Select Create Permission',\n            // set maximum selection length in Multiselect.\n            // maximumSelectionLength: 1,\n            // set true for enable the dropdown icon.\n            showDropDownIcon: true,\n            // set the placeholder to MultiSelect filter input element\n            filterBarPlaceholder: 'Search Create Permission',\n            // set the MultiSelect popup height\n            popupHeight: '350px',\n          });\n          this.createMultiObj.appendTo('#createCheckbox');\n          this.createMultiObj.value = data.data.create;\n\n          MultiSelect.Inject(CheckBoxSelection);\n          // initialize the MultiSelect component\n          this.editMultiObj = new MultiSelect({\n            // set the country data to dataSource property\n            dataSource: permissionList.data.edit,\n            // map the appropriate columns to fields property\n            fields: { text: 'Name', value: 'Name' },\n            // set the type of mode for checkbox to visualized the checkbox added in li element.\n            mode: 'CheckBox',\n            // set the placeholder to MultiSelect input element\n            placeholder: 'Select Edit Permission',\n            // set maximum selection length in Multiselect.\n            // maximumSelectionLength: 1,\n            // set true for enable the dropdown icon.\n            showDropDownIcon: true,\n            // set the placeholder to MultiSelect filter input element\n            filterBarPlaceholder: 'Search Edit Permission',\n            // set the MultiSelect popup height\n            popupHeight: '350px',\n          });\n          this.editMultiObj.appendTo('#editCheckbox');\n          this.editMultiObj.value = data.data.edit;\n\n          MultiSelect.Inject(CheckBoxSelection);\n          // initialize the MultiSelect component\n          this.deleteMultiObj = new MultiSelect({\n            // set the country data to dataSource property\n            dataSource: permissionList.data.delete,\n            // map the appropriate columns to fields property\n            fields: { text: 'Name', value: 'Name' },\n            // set the type of mode for checkbox to visualized the checkbox added in li element.\n            mode: 'CheckBox',\n            // set the placeholder to MultiSelect input element\n            placeholder: 'Select Delete Permission',\n            // set maximum selection length in Multiselect.\n            // maximumSelectionLength: 1,\n            // set true for enable the dropdown icon.\n            showDropDownIcon: true,\n            // set the placeholder to MultiSelect filter input element\n            filterBarPlaceholder: 'Search Delete Permission',\n            // set the MultiSelect popup height\n            popupHeight: '350px',\n          });\n          this.deleteMultiObj.appendTo('#deleteCheckbox');\n          this.deleteMultiObj.value = data.data.delete;\n        })\n      }\n    })\n\n    this.updatePermissionForm = this.FormBuilder.group({\n      permission: this.FormBuilder.group({\n        create: [],\n        edit: [],\n        delete: []\n      })\n    })\n  }\n  submitPermissions(){\n    try {\n\n      if(this.createMultiObj.value.length === 0 && this.editMultiObj.value.length === 0 && this.deleteMultiObj.value.length === 0){\n        this.updatePermissionForm.removeControl('permission');\n      } else {\n        if(this.createMultiObj.value.length > 0){\n          this.updatePermissionForm.get('permission.create').setValue(this.createMultiObj.value);\n        } else {\n          this.updatePermissionForm.get('permission').removeControl('create');\n        }\n        if(this.editMultiObj.value.length > 0){\n          this.updatePermissionForm.get('permission.edit').setValue(this.editMultiObj.value);\n        } else {\n          this.updatePermissionForm.get('permission').removeControl('edit');\n        }\n        if(this.deleteMultiObj.value.length > 0){\n          this.updatePermissionForm.get('permission.delete').setValue(this.deleteMultiObj.value);\n        } else {\n          this.updatePermissionForm.get('permission').removeControl('delete');\n        }\n      }\n\n      this.updatePermissionAPI.updateRolePermissions(this.updatePermissionForm.value,this.roleId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.successFlag = true;\n          this.successMsg = data.message;\n          this.errorFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n            this.Router.navigateByUrl(`/pages/roles/list-permission/${this.roleId}`);\n          }, 1000);\n        } else if(data.status = 'error'){\n          this.errorFlag = true;\n          this.errMsg = data.message;\n          this.successFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n          }, 2000);\n\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  handleErrorMessage() {\n    this.successFlag = false;\n    this.errorFlag = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n          <h2>Roles</h2>\n          <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/roles/add-role\" style=\"float:right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Role</button>\n    </div>\n    <table class=\"table\" style=\"text-align: center;\">\n       <thead class=\" text-primary\">\n           <tr>\n           <th> S.No </th>\n           <th> Title </th>\n           <th> Description </th>\n           <th> Action </th>\n           </tr>\n       </thead>\n       <tbody *ngFor=\"let role of rolesInfo; let i = index\">\n           <tr>\n           <td><strong>{{i+1}}.</strong></td>\n           <td> {{role.title}} </td>\n           <td> {{role.description}} </td>\n           <td>\n               <a routerLink=\"/pages/roles/update-role/{{role._id}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n               <!-- <button class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash\"></i>\n               </button>&nbsp; -->\n               <button class=\"btn btn-info\" type=\"button\" routerLink=\"/pages/roles/list-permission/{{role._id}}\">Manage Role Permissions</button>\n           </td>\n           </tr>\n   </table>\n </div>\n","import { Component, OnInit } from '@angular/core';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-role',\n  templateUrl: './list-role.component.html',\n  styleUrls: ['./list-role.component.scss']\n})\nexport class ListRoleComponent implements OnInit {\n\n  constructor(\n    private roleListAPI: RolesService,\n    private router: Router\n    ) { }\n  rolesInfo: any;\n\n  ngOnInit() {\n    this.listAllRole();\n  }\n\n  listAllRole() {\n    try {\n      this.roleListAPI.listAllRole().subscribe((data)=>{\n        if(data.status === 'success'){\n          if(data.data.length === 0){\n            this.router.navigateByUrl(\"/pages/roles/add-role\");\n          } else {\n            this.rolesInfo = data.data;\n          }\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 style=\"text-align: center\">Permissions List</h2>\n        <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/roles/update-permission/{{roleId}}\"\n            style=\"float: right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Update Permissions</button>\n            <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/roles/list-role\"\n            style=\"float: right;\"><i class=\"fa fa-arrow-left\"></i></button>\n            <h4>{{ roleTitle }}</h4>\n    </div>\n\n    <table class=\"table\" style=\"text-align: center;\">\n      <thead class=\" text-primary\">\n          <tr>\n          <th>S.No</th>\n          <th>Permissions Given</th>\n          <th>Action</th>\n          </tr>\n      </thead>\n      <tbody *ngFor=\"let permission of permissionInfo; let i = index\">\n          <tr >\n          <td><b>{{i+1}}.</b></td>\n          <td> {{permission.title}} </td>\n          <td>\n              <button class=\"btn btn-danger\" type=\"button\" (click)=\"deletePermission(permission._id)\"><i class=\"fa fa-trash\"></i>\n              </button>&nbsp;\n          </td>\n          </tr>\n          </tbody>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { RolesComponent } from './roles.component';\nimport { AddRoleComponent } from './role/add-role/add-role.component';\nimport { UpdateRoleComponent } from './role/update-role/update-role.component';\nimport { UpdatePermissionComponent } from './permission/update-permission/update-permission.component';\nimport { ListRoleComponent } from './role/list-role/list-role.component';\nimport { ListPermissionComponent } from './permission/list-permission/list-permission.component';\n\nconst route: Routes = [\n{\n    path :'',\n    component : RolesComponent,\n    canActivate:[AuthGuard],\n    children : [\n      {\n        path: 'add-role',\n        component: AddRoleComponent,\n      },\n      {\n        path: 'update-role/:roleId',\n        component: UpdateRoleComponent,\n      },\n      {\n        path: 'update-permission/:roleId',\n        component: UpdatePermissionComponent,\n      },\n      {\n        path: 'list-role',\n        component: ListRoleComponent,\n      },\n      {\n        path: 'list-permission/:roleId',\n        component: ListPermissionComponent,\n      },\n      {\n        path:'',\n        redirectTo:'list-role',\n        pathMatch:'full'\n      }\n    ]\n}\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class RolesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RolesService } from '../../roles-service/roles.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-permission',\n  templateUrl: './list-permission.component.html',\n  styleUrls: ['./list-permission.component.scss']\n})\nexport class ListPermissionComponent implements OnInit {\nroleId: any;\nroleTitle: any;\npermissionInfo: any;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private permissionListAPI: RolesService\n  ) { }\n\n  ngOnInit() {\n    this.roleId = this.ActivatedRoute.snapshot.paramMap.get('roleId');\n    this.permissionList();\n  }\n\n  permissionList(){\n    try {\n      this.permissionListAPI.listIndividualRole(this.roleId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.roleTitle = data.data.title;\n          this.permissionInfo = data.data.permission;\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  deletePermission(permissionId){\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.permissionListAPI.deletePermission(this.roleId,permissionId).subscribe((data)=>{\n          if(data.status === 'success'){\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.permissionList();\n          }\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your list data safe',\n          'error'\n        )\n      }\n    })\n}\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddRoleComponent } from './role/add-role/add-role.component';\nimport { UpdateRoleComponent } from './role/update-role/update-role.component';\nimport { UpdatePermissionComponent } from './permission/update-permission/update-permission.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RolesRoutingModule } from './roles-routing.module';\nimport { RolesComponent } from './roles.component';\nimport { RolesService } from './roles-service/roles.service';\nimport { ListRoleComponent } from './role/list-role/list-role.component';\nimport { ListPermissionComponent } from './permission/list-permission/list-permission.component';\n\n\n\n\n@NgModule({\n  declarations: [AddRoleComponent, UpdateRoleComponent, UpdatePermissionComponent, RolesComponent, ListRoleComponent, ListPermissionComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RolesRoutingModule,\n  ],\n  providers: [RolesService],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class RolesModule { }\n"]}