{"version":3,"sources":["./src/app/pages/document-types/document-types-routing.module.ts","./src/app/pages/document-types/document-types.module.ts","./src/app/pages/document-types/update-document-types/update-document-types.component.ts","./src/app/pages/document-types/update-document-types/update-document-types.component.html","./src/app/pages/document-types/document-types.component.ts","./src/app/pages/document-types/document-types.component.html","./src/app/pages/document-types/add-document-types/add-document-types.component.ts","./src/app/pages/document-types/add-document-types/add-document-types.component.html","./src/app/pages/document-types/list-document-types/list-document-types.component.ts","./src/app/pages/document-types/list-document-types/list-document-types.component.html"],"names":[],"mappings":"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","file":"document-types-document-types-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DocumenttypesComponent } from './document-types.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListDocumentTypesComponent } from './list-document-types/list-document-types.component';\nimport { AddDocumentTypesComponent } from './add-document-types/add-document-types.component';\nimport { UpdateDocumentTypesComponent } from './update-document-types/update-document-types.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : DocumenttypesComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-document-types',\n        component: ListDocumentTypesComponent,\n      },\n      {\n        path: 'add-document-types',\n        component: AddDocumentTypesComponent\n      },\n      {\n        // path: 'update-document-type/:companyId/:leaveTypeId',\n        path: 'update-document-types/:companyId/:documentTypeId',\n        component: UpdateDocumentTypesComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-document-types',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class DocumenttypesRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocumenttypesRoutingModule } from './document-types-routing.module';\nimport { DocumenttypesComponent } from './document-types.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListDocumentTypesComponent } from './list-document-types/list-document-types.component';\nimport { AddDocumentTypesComponent } from './add-document-types/add-document-types.component';\nimport { UpdateDocumentTypesComponent } from './update-document-types/update-document-types.component';\n\n@NgModule({\n  declarations: [\n     DocumenttypesComponent,\n     ListDocumentTypesComponent,\n     AddDocumentTypesComponent,\n     UpdateDocumentTypesComponent\n    ],\n  \n  imports: [\n    CommonModule,\n    DocumenttypesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class DocumenttypesModule { }\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DocumentServices } from '../document-services/document.services';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-document-types',\n  templateUrl: 'update-document-types.component.html'\n})\n\nexport class UpdateDocumentTypesComponent implements OnInit {\n\n    public companyId: any;\n    public documentTypeId: any;\n    documentForm: any;\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    errorMsg: boolean = false;\n    existingValue:any;\n    public val: any= [];\n  permissionInfo: any;\n\n    constructor(private route: ActivatedRoute, private fob:FormBuilder, private router: Router,\n            private api: DocumentServices,private ngZone: NgZone,\n            private util: UtilitiesService ){\n              this.documentTypeId = this.route.snapshot.paramMap.get(\"documentTypeId\");\n              this.util.moduleExists(this.documentTypeId,'DocumentTypes').subscribe((data)=>{\n                if(data.status === 'success'){\n                  if(!data.data){\n                    this.router.navigateByUrl('/pages/document-types/list-document-types');\n                  }\n                }\n              })\n            }\n\n    ngOnInit() {\n      this.companyId = this.route.snapshot.paramMap.get(\"companyId\");\n      this.valueCheck();\n      this.documentValidation();\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Edit DocumentType') === -1){\n        this.documentForm.disable();\n      }\n    }\n\n    valueCheck() {\n      this.api.documentTypeDetails(this.documentTypeId).subscribe(data=>{\n        if(data.status === 200 || data.status === 'success') {\n          this.existingValue = data.data;\n            this.documentForm = this.fob.group({\n              title: new FormControl(this.existingValue.title,Validators.required),\n              description: new FormControl(this.existingValue.description),\n              isRequired: new FormControl(this.existingValue.isRequired)\n            })\n        }\n      })\n    }\n\n    updateDoc() {\n      try{\n        let cleanDocumnetTypeUpdateForm = this.util.cleanFormLevelOne(this.documentForm);\n        this.api.updateDocument(cleanDocumnetTypeUpdateForm.value,this.companyId,this.documentTypeId).subscribe(data=>{\n          if(data.status === 'success' || data.status === 200) {\n            this.successMessage = true ;\n            this.errorMsg = false ;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.ngZone.run(()=>this.router.navigateByUrl('/pages/document-types/list-document-types'));\n            },2000);\n          } else if(data.status == \"error\") {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            },3000);\n          }\n        })\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    documentValidation() {\n      try {\n        this.documentForm = this.fob.group({\n          title: new FormControl('',Validators.required),\n          description: new FormControl(''),\n          isRequired: new FormControl(false)\n          })\n        }\n      catch (err) {\n        console.log(err);\n      }\n    }\n\n\n    validationMessage = {\n      'title': [\n        { type: 'required', message: 'Title is Required' },\n      ],\n  }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n}","<div class=\"card card-user\">\n    <div class=\"card-header\">\n       <h2 class=\"card-title text-center\">Update Document Type</h2>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"documentForm\" (ngSubmit)=\"updateDoc()\" novalidate>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"  formControlName=\"title\">\n\n               <div *ngFor=\"let validation of validationMessage.title\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"documentForm.get('title').hasError(validation.type) && (documentForm.get('title').dirty || documentForm.get('title').touched)\"\n                  >\n                  {{ validation.message }}</div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Description: </b></label>\n            <div class=\"col-sm-offset-2\">\n               <textarea class=\"form-control\" type=\"textarea\" id=\"description\" placeholder=\"Enter description\" formControlName=\"description\"\n                  ></textarea>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"control-label\">Is Required ?</label>:\n            <input type=\"checkbox\" name=\"required\" formControlName=\"isRequired\">\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\"\n               class=\"btn btn-success\" [disabled]=\"documentForm.invalid || permissionInfo.search('Edit DocumentType') === -1\">Update</button>\n               <button type=\"button\"\n               class=\"btn btn-danger\" routerLink=\"../../../list-document-types\">cancel</button>\n            </div>\n         </div>\n      </form>\n\n\n   </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-document-types',\n  templateUrl: './document-types.component.html'\n})\nexport class DocumenttypesComponent implements OnInit {\n\n  constructor(){}\n  ngOnInit(){\n\n  }\n \n\n}","<router-outlet></router-outlet>","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DocumentServices } from '../document-services/document.services';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n    selector: 'app-add-document-types',\n    templateUrl: './add-document-types.component.html'\n})\n\nexport class AddDocumentTypesComponent implements OnInit {\n\n    documentForm:FormGroup;\n    public companyId;\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    errorMsg: boolean = false;\n    permissionInfo: any;\n\n    constructor(private api: DocumentServices,\n            private fob: FormBuilder,\n            private router: Router,\n            private ngzone: NgZone,\n            private util: UtilitiesService ){\n              this.isListAvaliable();\n            }\n\n    ngOnInit() {\n      this.documentValidation();\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create DocumentType') === -1){\n        this.documentForm.disable();\n      }\n    }\n\n    documentValidation() {\n        try {\n          this.documentForm = this.fob.group({\n            title: new FormControl('',Validators.required),\n            description: new FormControl(''),\n            isRequired: new FormControl(false)\n            })\n          }\n        catch (err) {\n          console.log(err);\n        }\n    }\n\n    addDocumentType() {\n      try{\n        let cleanDocumnetTypeForm = this.util.cleanFormLevelOne(this.documentForm);\n        this.api.addDocumentSubmit(cleanDocumnetTypeForm.value, this.companyId).subscribe(data=>{\n          if(data.status === 'success' || data.status === 200) {\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n              setTimeout(() =>{\n                this.handleErrors();\n                this.ngzone.run(()=>this.router.navigateByUrl('/pages/document-types/list-document-types'));\n              },2000);\n          } else if(data.status === \"error\"|| data.status === 404){\n              this.errorMsg = true;\n              this.successMessage = false;\n              this.errMsg = data.message;\n              setTimeout(() =>{\n                this.handleErrors();\n              },3000);\n            }\n          })\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    validationMessage = {\n        'title': [\n          { type: 'required', message: 'Title is required' },\n        ],\n    }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n  isListAvaliable(){\n    try{\n      this.api.documentData().subscribe((data) =>{\n        if(data.status === 'success'){\n          if(data.data.length > 0 && this.util.documentTypeStatus !== 1){\n            this.router.navigateByUrl(\"/pages/document-types/list-document-types\");\n            this.util.documentTypeStatus = 0;\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Document Type Details</h2>\n      <button [disabled]=\"permissionInfo.search('Create DocumentType') === -1\"\n      class=\"btn btn-primary\" type=\"button\" routerLink=\"../list-document-types\" style=\"float: right;\"><i class=\"fa fa-list\"></i>&nbsp; Show Document List</button>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n         </p>\n      </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"documentForm\" (ngSubmit)=\"addDocumentType()\" novalidate>\n         <div class=\"form-group\">\n             <label class=\"col-sm-6 control-label\"><b>Title: &nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"titleDoc\" placeholder=\"Enter Title\" formControlName=\"title\" >\n               <div *ngFor=\"let validation of validationMessage.title\">\n                  <div style=\"color: red;margin-left: 14px;\" *ngIf=\"documentForm.get('title').hasError(validation.type) && (documentForm.get('title').dirty || documentForm.get('title').touched)\" style=\"color: red;margin-left: 14px;\">{{ validation.message }}</div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Description: </b></label>\n            <div class=\"col-sm-offset-2\">\n               <textarea class=\"form-control\" type=\"textarea\" id=\"descriptionDoc\" placeholder=\"Enter description\" formControlName=\"description\"></textarea>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"control-label\">Is Required </label>: <input type=\"checkbox\" name=\"required\" formControlName=\"isRequired\">\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\"\n                class=\"btn btn-success\" [disabled]=\"documentForm.invalid || permissionInfo.search('Create DocumentType') === -1\">Submit</button>\n               <button type=\"button\"\n                class=\"btn btn-danger\" routerLink=\"../list-document-types\">cancel</button>\n            </div>\n         </div>\n      </form>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { DocumentServices } from '../document-services/document.services';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-document-types',\n    templateUrl: './list-document-types.component.html'\n})\n\nexport class ListDocumentTypesComponent implements OnInit {\n\n  public document = new Array();\n  showCard:any = {};\n  permissionInfo: any;\n\n  constructor(private api: DocumentServices,\n    public route:Router,\n    private util: UtilitiesService) {}\n\n  ngOnInit() {\n    this.documentList();\n    this.permissionInfo = this.util.permissionRoleInfo\n  }\n\n  documentList() {\n    try{\n      this.api.documentData().subscribe(data=>{\n      if(data.status === 200 || data.status === \"success\") {\n      const len = data.data.length;\n      if(len == 0){\n        this.route.navigateByUrl(\"/pages/document-types/add-document-types\");\n      } else {\n        this.document = data.data;\n      }\n      }\n    })\n    }catch(err){\n      console.log(err.message);\n    }\n  }\n\n  showData(title: String) {\n      this.showCard[`${title}`] = !this.showCard[`${title}`];\n  }\n\n  removeDocument(leaveTypeId:String){\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeDocument(leaveTypeId).subscribe((data)=>{\n            if(data.status === 'success'){\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              );\n              this.documentList();\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                'ERROR!',\n                data.message,\n                'error'\n              );\n            }\n        });\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n  }\n  addDocumentType(){\n    try{\n      this.util.documentTypeStatus = 1;\n    }catch(err){\n      console.log(err)\n    }\n  }\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Document Type</h2>\n        <button [disabled]=\"permissionInfo.search('Create DocumentType') === -1\"\n         class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/document-types/add-document-types\" style=\"float: right;\" (click)= \"addDocumentType()\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Document Type</button\n            >\n    </div>\n    <div class=\"table-responsive-lg\">\n        <table class=\"table\" style=\"text-align: center;\">\n            <thead class=\" text-primary\">\n                <tr>\n                <th> S.No </th>\n                <th> Title </th>\n                <th>Description</th>\n                <th>Is Required</th>\n                <th>Action</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let list of document; let i = index\">\n                <tr >\n                <td><b>{{ i+1 }}.</b></td>\n                <td> {{ list.title }} </td>\n                <td > {{list.description}}</td>\n                <td *ngIf=\"list.isRequired\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                <td *ngIf=\"!list.isRequired\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n                <td>\n                    <a [class.disabled]=\"permissionInfo.search('Edit DocumentType') === -1\"\n                    routerLink=\"/pages/document-types/update-document-types/{{list.companyId}}/{{list._id}}\" class=\"btn btn-primary\" ><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                    <button [disabled]=\"permissionInfo.search('Delete DocumentType') === -1\"\n                     class=\"btn btn-danger\" type=\"button\" (click)=\"removeDocument(list._id)\"><i class=\"fa fa-trash\"></i></button\n                        >\n                </td>\n                </tr>\n        </table>\n    </div>\n\n</div>"],"sourceRoot":"webpack:///"}