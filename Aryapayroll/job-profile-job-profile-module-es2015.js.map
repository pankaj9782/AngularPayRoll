{"version":3,"sources":["./src/app/pages/job-profile/job-profile-services/job-profile.service.ts","./src/app/pages/job-profile/update-profile-data/update-profile-data.component.ts","./src/app/pages/job-profile/update-profile-data/update-profile-data.component.html","./src/app/pages/job-profile/job-profile-routing.module.ts","./src/app/pages/job-profile/job-profile.module.ts","./src/app/pages/job-profile/job-profile.component.ts","./src/app/pages/job-profile/job-profile.component.html","./src/app/pages/job-profile/add-job-profile/add-job-profile.component.ts","./src/app/pages/job-profile/add-job-profile/add-job-profile.component.html","./src/app/pages/job-profile/job-profile-list/job-profile-list.component.ts","./src/app/pages/job-profile/job-profile-list/job-profile-list.component.html"],"names":[],"mappings":"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","file":"job-profile-job-profile-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders, HttpErrorResponse, HttpClient } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { JobProfile } from 'src/app/auth/job-profile';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobProfileService {\n\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n\n\n  //Method for submit job-profile data\n  submitData(data: JobProfile): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiUrl = `${this.endpoint}/company/add-job-profile/${companyId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for get the job profile data\n  getJobProfileData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiUrl = `${this.endpoint}/company/list-all-job-profiles/${companyId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  jobProfileDetails(jobProfileId:string): Observable<any> {\n    try {\n      let apiUrl = `${this.endpoint}/company/job-profile-details/${jobProfileId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n  //Method for remove job profile\n removeProfileData(jobProfileId:String):Observable<any>{\n   try{\n     let api = `${this.endpoint}/company/delete-job-profile/${jobProfileId}`;\n     return this.http.delete(api).pipe(\n       catchError(this.errorMgmt)\n     )\n   }catch(err){\n     console.log(err.message);\n   }\n }\n\n\n  //Create method for manage errors when request and return response from the server\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.message;\n      }\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for submit updated form data\n  updatedSubmitData(data: JobProfile, jobProfileId: String): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiUrl = `${this.endpoint}/company/update-job-profile/${companyId}/${jobProfileId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n}\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { JobProfileService } from '../job-profile-services/job-profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-profile-data',\n  templateUrl: './update-profile-data.component.html',\n  styleUrls: ['./update-profile-data.component.scss']\n})\nexport class UpdateProfileDataComponent implements OnInit {\n\n  updateJobProfileForm: FormGroup;\n  public jobProfileList: any;\n  public snapShotParam: any = String;\n  public profileData= new Array();\n  public successMsg: any = String;\n  public successMessage: boolean = false;\n  public errMsg: any = String;\n  public errorMsg: boolean = false;\n  permissionInfo: any;\n\n  constructor(public fb: FormBuilder, private api: JobProfileService, public ngZone: NgZone, private router: Router,\n     private route: ActivatedRoute,\n     private util: UtilitiesService) {\n      this.snapShotParam = this.route.snapshot.paramMap.get(\"jobProfileId\");\n      this.util.moduleExists(this.snapShotParam,'JobProfile').subscribe((data)=>{\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/job-profile/job-profile-list');\n          }\n        }\n      })\n     }\n\n  ngOnInit() {\n    this.jobProfileFormValidation();\n    this.UpdateJobProfileFormValidation();\n    this.permissionInfo = this.util.permissionRoleInfo;\n    if(this.permissionInfo.search('Edit JobProfile') === -1){\n      this.updateJobProfileForm.disable();\n    }\n  }\n\n//Method for validation\njobProfileFormValidation() {\n  try{\n        this.updateJobProfileForm = this.fb.group({\n          positionName: new FormControl('',Validators.required),\n          payBasis: new FormControl('',Validators.required),\n          isActive: new FormControl('false'),\n        })\n\n  }catch(err){\n    console.log(err.message)\n  }\n}\n  //Method for validation\n  UpdateJobProfileFormValidation() {\n    try{\n      this.api.jobProfileDetails(this.snapShotParam).subscribe((data) => {\n        if (data.status === 'success' || data.status === 200) {\n           this.jobProfileList = data.data;\n          this.updateJobProfileForm = this.fb.group({\n            positionName: new FormControl(this.jobProfileList.positionName,Validators.required),\n            payBasis: new FormControl(this.jobProfileList.payBasis,Validators.required),\n            isActive: new FormControl(this.jobProfileList.isActive),\n          })\n        }\n      })\n\n    }catch(err){\n      console.log(err.message)\n    }\n  }\n\n  //For Showing errors\n  validationMessage = {\n    'positionName': [\n      { type: 'required', message: 'Position Name is required' },\n    ],\n    'payBasis': [\n      { type: 'required', message: 'Pay Basis is required' },\n    ],\n  }\n\n\n  //Method for submit updated form data\n  updateJobProfileFormData() {\n    try {\n      let cleanJobProfileUpdateForm = this.util.cleanFormLevelOne(this.updateJobProfileForm)\n      if (this.updateJobProfileForm.valid) {\n        this.api.updatedSubmitData(cleanJobProfileUpdateForm.value, this.snapShotParam).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.ngZone.run(() => {\n                this.handleErrors();\n                this.router.navigateByUrl(\"/pages/job-profile/job-profile-list\");\n              })\n            }, 2000);\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.ngZone.run(() => {\n                this.handleErrors();\n              })\n            }, 3000);\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Update Job-Profile</h2>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{errMsg}}</strong>\n            </p>\n        </div>\n\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{successMsg}}</strong>\n            </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateJobProfileForm\"\n            (ngSubmit)=\"updateJobProfileFormData()\" novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Profile Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Name\"\n                        formControlName=\"positionName\">\n                        <div *ngFor=\"let validation of validationMessage.positionName\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateJobProfileForm.get('positionName').hasError(validation.type) && (updateJobProfileForm.get('positionName').dirty || updateJobProfileForm.get('positionName').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{validation.message}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Pay Basis:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <select class=\"dropdown dropdown-toggle form-control\" Name=\"Pay Basis\" formControlName=\"payBasis\">\n                    <option class=\"dropdown-item\" disabled>Choose Pay Basis</option>\n                    <option class=\"dropdown-item\" value=\"Monthly Salary\">Monthly Salary</option>\n                    <option class=\"dropdown-item\" value=\"Daily Wages\">Daily Wages</option>\n                </select>\n                <div *ngFor=\"let validation of validationMessage.payBasis\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateJobProfileForm.get('payBasis').hasError(validation.type) && (updateJobProfileForm.get('payBasis').dirty || updateJobProfileForm.get('payBasis').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{validation.message}}\n                        </div>\n                    </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Status:</b></label>\n                <select class=\"dropdown dropdown-toggle form-control\" Name=\"Status of Profile\"\n                    formControlName=\"isActive\">\n                    <option class=\"dropdown-item\" value=true>Active</option>\n                    <option class=\"dropdown-item\" value=false>In-Active</option>\n                </select>\n            </div>\n\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button [disabled]=\"updateJobProfileForm.invalid || permissionInfo.search('Edit JobProfile') === -1\"\n                     type=\"submit\" class=\"btn btn-success\">Update</button>\n                    <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../../job-profile-list\">Cancel</button>\n\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JobProfileComponent } from './job-profile.component';\nimport { AddJobProfileComponent } from './add-job-profile/add-job-profile.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { JobProfileListComponent } from './job-profile-list/job-profile-list.component';\nimport { UpdateProfileDataComponent } from './update-profile-data/update-profile-data.component';\n\nconst route:Routes =[\n  {\n    path:'',\n    component:JobProfileComponent,\n    canActivate:[AuthGuard],\n    children:[\n      {\n        path:'add-job-profile',\n        component:AddJobProfileComponent,\n      },\n      {\n        path:'job-profile-list',\n        component:JobProfileListComponent,\n      },\n      {\n        path:'update-profile-data/:jobProfileId',\n        component:UpdateProfileDataComponent,\n      },\n      {\n        path:'',\n        redirectTo :'job-profile-list',\n        pathMatch:'full',\n      },\n    ],\n  }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class JobProfileRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JobProfileRoutingModule } from './job-profile-routing.module';\nimport { JobProfileComponent } from './job-profile.component';\nimport { AddJobProfileComponent } from './add-job-profile/add-job-profile.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JobProfileListComponent } from './job-profile-list/job-profile-list.component';\nimport { UpdateProfileDataComponent } from './update-profile-data/update-profile-data.component';\nimport { JobProfileService } from './job-profile-services/job-profile.service';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [JobProfileComponent, AddJobProfileComponent, JobProfileListComponent, UpdateProfileDataComponent],\n  imports: [\n    CommonModule,\n    JobProfileRoutingModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [JobProfileService, AuthGuard],\n})\n\nexport class JobProfileModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-job-profile',\n  templateUrl: './job-profile.component.html',\n  styleUrls: ['./job-profile.component.scss']\n})\nexport class JobProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { JobProfileService } from '../job-profile-services/job-profile.service';\nimport { Router } from '@angular/router';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { IfStmt } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-add-job-profile',\n  templateUrl: './add-job-profile.component.html',\n  styleUrls: ['./add-job-profile.component.scss']\n})\nexport class AddJobProfileComponent implements OnInit {\n\n  jobProfileForm: FormGroup;\n  public payType = ['Daily Wages','Monthly Salary'];\n  public successMsg:any = String;\n  public successMessage: boolean = false;\n  public errMsg:any = String;\n  public errorMsg: boolean = false;\n  permissionInfo: any;\n\n\n  constructor(public fb: FormBuilder,\n     private api: JobProfileService,\n     public ngZone: NgZone,\n     private router: Router,\n     private util: UtilitiesService\n     ) {this.isListAvaliable();}\n\n  ngOnInit() {\n    this.jobProfileFormValidation();\n    this.permissionInfo = this.util.permissionRoleInfo;\n    if(this.permissionInfo.search('Create JobProfile') === -1){\n      this.jobProfileForm.disable();\n    }\n  }\n\n\n  //Method  for form Validation\n  jobProfileFormValidation() {\n    this.jobProfileForm = this.fb.group({\n      positionName: new FormControl('', Validators.required),\n      payBasis: new FormControl('Daily Wages', Validators.required),\n      isActive: new FormControl('true'),\n    })\n  }\n\n  //Submit form Data\n  jobProfileFormData() {\n    try {\n      let cleanJobPofieForm = this.util.cleanFormLevelOne(this.jobProfileForm);\n      if (this.jobProfileForm.valid) {\n        this.api.submitData(cleanJobPofieForm.value).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            setTimeout(() => {\n              this.handleErrors();\n              this.ngZone.run(() => this.router.navigateByUrl('/pages/job-profile/job-profile-list'));\n            }, 2000);\n            this.errorMsg = false;\n            this.successMsg = data.message;\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            }, 3000);\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //For Showing errors\n  validationMessage = {\n    'positionName': [\n      { type: 'required', message: 'Position Name is required' },\n    ],\n    'payBasis': [\n      { type: 'required', message: 'Pay Basis is required' },\n    ],\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\nisListAvaliable(){\n  try{\n    this.api.getJobProfileData().subscribe((data) =>{\n      if(data.status === 'success'){\n        if(data.data.length > 0 && this.util.jobProfileStatus !== 1){\n          this.router.navigateByUrl(\"/pages/job-profile/job-profile-list\");\n          this.util.jobProfileStatus = 0;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Add Job-Profile</h2>\n        <!-- <a routerLink=\"../job-profile-list\" class=\"btn btn-primary btn-circle\" style=\"float: right;\"><i\n                class=\"fa  fa-arrow-right\"></i></a> -->\n    </div>\n    <div class=\"card-body\">\n\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{errMsg}}</strong>\n            </p>\n        </div>\n\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{successMsg}}</strong>\n            </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"jobProfileForm\" (ngSubmit)=\"jobProfileFormData()\"\n            novalidate>\n            <div class=\"form-group\">\n\n                 <label class=\"col-sm-6 control-label\"><b>Profile Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Name\"\n                        formControlName=\"positionName\">\n                    <div *ngFor=\"let validation of validationMessage.positionName\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"jobProfileForm.get('positionName').hasError(validation.type) && (jobProfileForm.get('positionName').dirty || jobProfileForm.get('positionName').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{validation.message}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n\n                 <label class=\"col-sm-6 control-label\"><b>Pay Basis:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n\n                <select class=\"dropdown dropdown-toggle form-control\" Name=\"Pay Basis\" formControlName=\"payBasis\">\n                    <option class=\"dropdown-item\" selected disabled>Choose Pay Basis</option>\n                    <option [ngValue]=\"payBasis\" *ngFor=\"let payBasis of payType\"> {{payBasis}}</option>\n                </select>\n                <div *ngFor=\"let validation of validationMessage.payBasis\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"jobProfileForm.get('payBasis').hasError(validation.type) && (jobProfileForm.get('payBasis').dirty || jobProfileForm.get('payBasis').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{validation.message}}\n                        </div>\n                    </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Status:</b></label>\n                <select class=\"dropdown dropdown-toggle form-control\" Name=\"Status of Profile\"\n                    formControlName=\"isActive\">\n                    <option class=\"dropdown-item\" value=true>Active</option>\n                    <option class=\"dropdown-item\" value=false>In-Active</option>\n                </select>\n            </div>\n\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"jobProfileForm.invalid || permissionInfo.search('Create JobProfile') === -1\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../job-profile-list\">Cancel</button>\n\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { JobProfileService } from '../job-profile-services/job-profile.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-job-profile-list',\n  templateUrl: './job-profile-list.component.html',\n  styleUrls: ['./job-profile-list.component.scss']\n})\nexport class JobProfileListComponent implements OnInit {\n\n  // jobProfileList: Object;\n  public jobProfileList:any =[];\n  public showCard:any = {};\n  permissionInfo: any;\n\n  constructor(private api: JobProfileService,\n     private router: Router,\n     private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.getJobProfileData();\n  }\n\n//Method for showing data in a list for binding in HTML\n  getJobProfileData() {\n    try {\n      this.api.getJobProfileData().subscribe(data => {\n        if (data.status === 'success' || data.status === 200) {\n          this.jobProfileList = data.data;\n          if (data.data.length == 0) {\n            this.router.navigateByUrl(\"/pages/job-profile/add-job-profile\");\n          }\n          else {\n            const len = Object.keys(this.jobProfileList).length;\n            for (var i = 0; i < len; i++) {\n              this.showCard[this.jobProfileList[i]._id] = true;\n            }\n          }\n        }\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n\n  //Method For collapsed List Data\n  showData(jobProfileId: String) {\n    try {\n      this.showCard[`${jobProfileId}`] = !this.showCard[`${jobProfileId}`];\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for remove job profile list\n   deleteJobProfile(profileId: String) {\n    try {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeProfileData(profileId).subscribe(data => {\n            if (data.status === \"success\" || data.status === 200) {\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              )\n              this.getJobProfileData();\n            }\n          })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n  addJobProfile(){\n    try{\n      this.util.jobProfileStatus = 1;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Job Profiles List</h2>\n        <a [class.disabled]=\"permissionInfo.search('Create JobProfile') === -1\"\n        class=\"btn btn-primary\" routerLink=\"../add-job-profile\" style=\"float:right;\" (click)= \"addJobProfile()\"><i class=\"fa fa-plus\"></i>&nbsp;\n            Add Job-profile</a>\n    </div>\n    <!-- <div class=\"panel-body\">\n            <ul class=\"list-group\">\n                <li class=\"list-group-item\" *ngFor=\"let list of jobProfileList\">\n                    <strong><b (click)=\"showData(list._id)\"\n                            style=\"cursor: pointer\">{{list.positionName}}</b></strong>\n                    <div style=\"float: right;\">\n                        <i class=\"dropdown-toggle\" (click)=\"showData(list._id)\"></i>\n                    </div>\n                    <div class=\"card\" style=\"background-color:ghostwhite\" [hidden]=\"showCard[list._id]\">\n                        <table class=\"table\" style=\"margin: auto\">\n                            <tr>\n                                <th>Position Name:</th>\n                                <td>{{list?.positionName}}</td>\n                            </tr>\n                            <tr>\n                                <th>Pay Basis:</th>\n                                <td>{{list?.payBasis}}</td>\n                            </tr>\n                            <tr>\n                                <th>Is Active:</th>\n                                <td>{{list?.isActive}}</td>\n                            </tr>\n                        </table>\n                        <div>\n                            <a routerLink=\"../update-profile-data/{{list._id}}\" style=\"float: right;\"\n                                class=\"btn btn-primary\">\n                                <i class=\"fa fa-pencil-square-o\"></i></a>\n                            <button style=\"float: right;\" class=\"btn btn-danger\" type=\"button\"\n                                (click)=\"deleteJobProfile(list._id)\">\n                                <i class=\"fa fa-trash\"></i>\n                            </button>\n\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div> -->\n    <table class=\"table\" style=\"text-align: center;\">\n        <thead class=\" text-primary\">\n            <tr>\n            <th>S.No</th>\n            <th>Profile Name</th>\n            <th>Pay Basis</th>\n            <th>Is Active</th>\n            <th>Action</th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let list of jobProfileList; let i = index\">\n            <tr >\n                <td><b>{{i+1}}.</b></td>\n                <td>{{list.positionName}}</td>\n                <td>{{list.payBasis}}</td>\n                <td *ngIf=\"list.isActive\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                <td *ngIf=\"!list.isActive\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n            <td>\n                <a [class.disabled]=\"permissionInfo.search('Edit JobProfile') === -1\"\n                routerLink=\"../update-profile-data/{{list._id}}\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                <button [disabled]=\"permissionInfo.search('Delete JobProfile') === -1\"\n                class=\"btn btn-danger\" type=\"button\" (click)=\"deleteJobProfile(list._id)\">\n                    <i class=\"fa fa-trash\"></i></button>\n            </td>\n            </tr>\n    </table>\n</div>"],"sourceRoot":"webpack:///"}