{"version":3,"sources":["webpack:///src/app/pages/roles/roles.component.ts","webpack:///src/app/pages/roles/roles.component.html","webpack:///src/app/pages/roles/permission/update-permission/update-permission.component.ts","webpack:///src/app/pages/roles/permission/update-permission/update-permission.component.html","webpack:///src/app/pages/roles/permission/list-permission/list-permission.component.ts","webpack:///src/app/pages/roles/permission/list-permission/list-permission.component.html","webpack:///src/app/pages/roles/role/list-role/list-role.component.ts","webpack:///src/app/pages/roles/role/list-role/list-role.component.html","webpack:///src/app/pages/roles/roles.module.ts","webpack:///src/app/pages/roles/role/update-role/update-role.component.ts","webpack:///src/app/pages/roles/role/update-role/update-role.component.html","webpack:///src/app/pages/roles/role/add-role/add-role.component.ts","webpack:///src/app/pages/roles/role/add-role/add-role.component.html","webpack:///src/app/pages/roles/roles-routing.module.ts"],"names":["RolesComponent","selector","templateUrl","styleUrls","UpdatePermissionComponent","ActivatedRoute","updatePermissionAPI","FormBuilder","Router","errorFlag","successFlag","errMsg","successMsg","roleId","snapshot","paramMap","get","listIndividualPermissions","subscribe","data","roleTitle","title","status","getRolesListData","permissionList","Inject","createMultiObj","dataSource","create","fields","text","value","mode","placeholder","showDropDownIcon","filterBarPlaceholder","popupHeight","appendTo","editMultiObj","edit","deleteMultiObj","updatePermissionForm","group","permission","length","removeControl","setValue","updateRolePermissions","message","setTimeout","handleErrorMessage","navigateByUrl","error","console","log","submitPermissions","ListPermissionComponent","permissionListAPI","listIndividualRole","permissionInfo","permissionId","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","type","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","deletePermission","dismiss","DismissReason","cancel","ListRoleComponent","roleListAPI","router","listAllRole","rolesInfo","RolesModule","declarations","imports","providers","schemas","UpdateRoleComponent","updateRoleAPI","Route","updateRoleValidationMessage","updateRoleFormStruct","updateRoleFormExist","updateRoleForm","required","description","trim","updateRole","AddRoleComponent","rolesApi","formBuilder","addRoleValidationMessage","addRoleFormData","addRoleForm","err","addRole","submitRoles","route","path","component","canActivate","children","redirectTo","pathMatch","RolesRoutingModule","forChild"],"mappings":"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","file":"roles-roles-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * MultiSelect Checkbox Samples\n */\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-update-permission',\n  templateUrl: './update-permission.component.html',\n  styleUrls: ['./update-permission.component.scss']\n})\nexport class UpdatePermissionComponent implements OnInit {\n  errorFlag = false;\n  successFlag = false;\n  errMsg = '';\n  successMsg = '';\n  createMultiObj: MultiSelect;\n  editMultiObj: MultiSelect;\n  deleteMultiObj: MultiSelect;\n  updateRoleForm: any;\n  roleId: any;\n  roleTitle: any;\n  updatePermissionForm: any;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private updatePermissionAPI: RolesService,\n    private FormBuilder: FormBuilder,\n    private Router: Router\n  ) { }\n\n  ngOnInit() {\n    this.roleId = this.ActivatedRoute.snapshot.paramMap.get('roleId');\n    this.updatePermissionAPI.listIndividualPermissions(this.roleId).subscribe((data)=>{\n      this.roleTitle = data.data.title;\n      if(data.status === 'success'){\n        this.updatePermissionAPI.getRolesListData().subscribe((permissionList)=>{\n          MultiSelect.Inject(CheckBoxSelection);\n          // initialize the MultiSelect component\n          this.createMultiObj = new MultiSelect({\n            // set the country data to dataSource property\n            dataSource: permissionList.data.create,\n            // map the appropriate columns to fields property\n            fields: { text: 'Name', value: 'Name' },\n            // set the type of mode for checkbox to visualized the checkbox added in li element.\n            mode: 'CheckBox',\n            // set the placeholder to MultiSelect input element\n            placeholder: 'Select Create Permission',\n            // set maximum selection length in Multiselect.\n            // maximumSelectionLength: 1,\n            // set true for enable the dropdown icon.\n            showDropDownIcon: true,\n            // set the placeholder to MultiSelect filter input element\n            filterBarPlaceholder: 'Search Create Permission',\n            // set the MultiSelect popup height\n            popupHeight: '350px',\n          });\n          this.createMultiObj.appendTo('#createCheckbox');\n          this.createMultiObj.value = data.data.create;\n\n          MultiSelect.Inject(CheckBoxSelection);\n          // initialize the MultiSelect component\n          this.editMultiObj = new MultiSelect({\n            // set the country data to dataSource property\n            dataSource: permissionList.data.edit,\n            // map the appropriate columns to fields property\n            fields: { text: 'Name', value: 'Name' },\n            // set the type of mode for checkbox to visualized the checkbox added in li element.\n            mode: 'CheckBox',\n            // set the placeholder to MultiSelect input element\n            placeholder: 'Select Edit Permission',\n            // set maximum selection length in Multiselect.\n            // maximumSelectionLength: 1,\n            // set true for enable the dropdown icon.\n            showDropDownIcon: true,\n            // set the placeholder to MultiSelect filter input element\n            filterBarPlaceholder: 'Search Edit Permission',\n            // set the MultiSelect popup height\n            popupHeight: '350px',\n          });\n          this.editMultiObj.appendTo('#editCheckbox');\n          this.editMultiObj.value = data.data.edit;\n\n          MultiSelect.Inject(CheckBoxSelection);\n          // initialize the MultiSelect component\n          this.deleteMultiObj = new MultiSelect({\n            // set the country data to dataSource property\n            dataSource: permissionList.data.delete,\n            // map the appropriate columns to fields property\n            fields: { text: 'Name', value: 'Name' },\n            // set the type of mode for checkbox to visualized the checkbox added in li element.\n            mode: 'CheckBox',\n            // set the placeholder to MultiSelect input element\n            placeholder: 'Select Delete Permission',\n            // set maximum selection length in Multiselect.\n            // maximumSelectionLength: 1,\n            // set true for enable the dropdown icon.\n            showDropDownIcon: true,\n            // set the placeholder to MultiSelect filter input element\n            filterBarPlaceholder: 'Search Delete Permission',\n            // set the MultiSelect popup height\n            popupHeight: '350px',\n          });\n          this.deleteMultiObj.appendTo('#deleteCheckbox');\n          this.deleteMultiObj.value = data.data.delete;\n        })\n      }\n    })\n\n    this.updatePermissionForm = this.FormBuilder.group({\n      permission: this.FormBuilder.group({\n        create: [],\n        edit: [],\n        delete: []\n      })\n    })\n  }\n  submitPermissions(){\n    try {\n\n      if(this.createMultiObj.value.length === 0 && this.editMultiObj.value.length === 0 && this.deleteMultiObj.value.length === 0){\n        this.updatePermissionForm.removeControl('permission');\n      } else {\n        if(this.createMultiObj.value.length > 0){\n          this.updatePermissionForm.get('permission.create').setValue(this.createMultiObj.value);\n        } else {\n          this.updatePermissionForm.get('permission').removeControl('create');\n        }\n        if(this.editMultiObj.value.length > 0){\n          this.updatePermissionForm.get('permission.edit').setValue(this.editMultiObj.value);\n        } else {\n          this.updatePermissionForm.get('permission').removeControl('edit');\n        }\n        if(this.deleteMultiObj.value.length > 0){\n          this.updatePermissionForm.get('permission.delete').setValue(this.deleteMultiObj.value);\n        } else {\n          this.updatePermissionForm.get('permission').removeControl('delete');\n        }\n      }\n\n      this.updatePermissionAPI.updateRolePermissions(this.updatePermissionForm.value,this.roleId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.successFlag = true;\n          this.successMsg = data.message;\n          this.errorFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n            this.Router.navigateByUrl(`/pages/roles/list-permission/${this.roleId}`);\n          }, 1000);\n        } else if(data.status = 'error'){\n          this.errorFlag = true;\n          this.errMsg = data.message;\n          this.successFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n          }, 2000);\n\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  handleErrorMessage() {\n    this.successFlag = false;\n    this.errorFlag = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Update Permissions</h2>\n        <h4 class=\"card-title text-center titleHeading\">Role Title: {{roleTitle}}</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorFlag\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n        <form class=\"form-horizontal\" role=\"form\" (ngSubmit)=\"submitPermissions()\"\n        novalidate>\n       <div class=\"permission-form\">\n        <h4 class=\"card-title text-center\">Permissions</h4>\n       <div class=\"contain\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-4\">\n               <div class=\"create-section\">\n                <h5>Create</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"createCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Edit</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"editCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Delete</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section\">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"deleteCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n        </div>\n       </div>\n       </div>\n            <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            <button class=\"btn btn-danger\" type=\"button\" routerLink=\"/pages/roles/list-permission/{{roleId}}\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RolesService } from '../../roles-service/roles.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-permission',\n  templateUrl: './list-permission.component.html',\n  styleUrls: ['./list-permission.component.scss']\n})\nexport class ListPermissionComponent implements OnInit {\nroleId: any;\nroleTitle: any;\npermissionInfo: any;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private permissionListAPI: RolesService\n  ) { }\n\n  ngOnInit() {\n    this.roleId = this.ActivatedRoute.snapshot.paramMap.get('roleId');\n    this.permissionList();\n  }\n\n  permissionList(){\n    try {\n      this.permissionListAPI.listIndividualRole(this.roleId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.roleTitle = data.data.title;\n          this.permissionInfo = data.data.permission;\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  deletePermission(permissionId){\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.permissionListAPI.deletePermission(this.roleId,permissionId).subscribe((data)=>{\n          if(data.status === 'success'){\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.permissionList();\n          }\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your list data safe',\n          'error'\n        )\n      }\n    })\n}\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 style=\"text-align: center\">Permissions List</h2>\n        <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/roles/update-permission/{{roleId}}\"\n            style=\"float: right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Update Permissions</button>\n            <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/roles/list-role\"\n            style=\"float: right;\"><i class=\"fa fa-arrow-left\"></i></button>\n            <h4>{{ roleTitle }}</h4>\n    </div>\n\n    <table class=\"table\" style=\"text-align: center;\">\n      <thead class=\" text-primary\">\n          <tr>\n          <th>S.No</th>\n          <th>Permissions Given</th>\n          <th>Action</th>\n          </tr>\n      </thead>\n      <tbody *ngFor=\"let permission of permissionInfo; let i = index\">\n          <tr >\n          <td><b>{{i+1}}.</b></td>\n          <td> {{permission.title}} </td>\n          <td>\n              <button class=\"btn btn-danger\" type=\"button\" (click)=\"deletePermission(permission._id)\"><i class=\"fa fa-trash\"></i>\n              </button>&nbsp;\n          </td>\n          </tr>\n          </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-role',\n  templateUrl: './list-role.component.html',\n  styleUrls: ['./list-role.component.scss']\n})\nexport class ListRoleComponent implements OnInit {\n\n  constructor(\n    private roleListAPI: RolesService,\n    private router: Router\n    ) { }\n  rolesInfo: any;\n\n  ngOnInit() {\n    this.listAllRole();\n  }\n\n  listAllRole() {\n    try {\n      this.roleListAPI.listAllRole().subscribe((data)=>{\n        if(data.status === 'success'){\n          if(data.data.length === 0){\n            this.router.navigateByUrl(\"/pages/roles/add-role\");\n          } else {\n            this.rolesInfo = data.data;\n          }\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n          <h2>Roles</h2>\n          <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/roles/add-role\" style=\"float:right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Role</button>\n    </div>\n    <table class=\"table\" style=\"text-align: center;\">\n       <thead class=\" text-primary\">\n           <tr>\n           <th> S.No </th>\n           <th> Title </th>\n           <th> Description </th>\n           <th> Action </th>\n           </tr>\n       </thead>\n       <tbody *ngFor=\"let role of rolesInfo; let i = index\">\n           <tr>\n           <td><strong>{{i+1}}.</strong></td>\n           <td> {{role.title}} </td>\n           <td> {{role.description}} </td>\n           <td>\n               <a routerLink=\"/pages/roles/update-role/{{role._id}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n               <!-- <button class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash\"></i>\n               </button>&nbsp; -->\n               <button class=\"btn btn-info\" type=\"button\" routerLink=\"/pages/roles/list-permission/{{role._id}}\">Manage Role Permissions</button>\n           </td>\n           </tr>\n   </table>\n </div>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddRoleComponent } from './role/add-role/add-role.component';\nimport { UpdateRoleComponent } from './role/update-role/update-role.component';\nimport { UpdatePermissionComponent } from './permission/update-permission/update-permission.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RolesRoutingModule } from './roles-routing.module';\nimport { RolesComponent } from './roles.component';\nimport { RolesService } from './roles-service/roles.service';\nimport { ListRoleComponent } from './role/list-role/list-role.component';\nimport { ListPermissionComponent } from './permission/list-permission/list-permission.component';\n\n\n\n\n@NgModule({\n  declarations: [AddRoleComponent, UpdateRoleComponent, UpdatePermissionComponent, RolesComponent, ListRoleComponent, ListPermissionComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RolesRoutingModule,\n  ],\n  providers: [RolesService],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class RolesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-role',\n  templateUrl: './update-role.component.html',\n  styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n  updateRoleForm: any;\n  errorFlag = false;\n  successFlag = false;\n  errMsg = '';\n  successMsg = '';\n  roleId: any;\n\n  constructor(\n    private FormBuilder: FormBuilder,\n    private updateRoleAPI: RolesService,\n    private ActivatedRoute: ActivatedRoute,\n    private Route: Router\n  ) { }\n\n  ngOnInit() {\n    this.roleId = this.ActivatedRoute.snapshot.paramMap.get('roleId')\n    this.updateRoleFormStruct();\n    this.updateRoleFormExist();\n  }\n\n  updateRoleFormStruct(){\n    try {\n      this.updateRoleForm = this.FormBuilder.group({\n        title: new FormControl('',Validators.required),\n        description: new FormControl('')\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateRoleFormExist(){\n    try {\n      this.updateRoleAPI.listIndividualRole(this.roleId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.updateRoleForm = this.FormBuilder.group({\n            title: new FormControl(data.data.title, Validators.required),\n            description: new FormControl(data.data.description)\n          })\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateRoleValidationMessage = {\n    'title': [\n      {type: 'required', message: 'Title is required'}\n    ]\n  }\n\n  handleErrorMessage() {\n    this.successFlag = false;\n    this.errorFlag = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n\n  updateRole(){\n    try {\n      this.updateRoleForm.get('title').setValue(this.updateRoleForm.get('title').value.trim());\n      if(this.updateRoleForm.get('description').value === null){\n      this.updateRoleForm.get('description').setValue('');\n    } else {\n      this.updateRoleForm.get('description').setValue(this.updateRoleForm.get('description').value.trim());\n    }\n\n    // update  Role\n    this.updateRoleAPI.updateRole(this.updateRoleForm.value,this.roleId).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.successFlag = true;\n        this.successMsg = data.message;\n        this.errorFlag = false;\n\n        setTimeout(() => {\n          this.handleErrorMessage();\n          this.Route.navigateByUrl('/pages/roles/list-role');\n        }, 2000);\n\n      } else if(data.status === 'error'){\n        this.errorFlag = true;\n        this.successFlag = false;\n        this.errMsg = data.message\n      }\n    })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Update Role</h2>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorFlag\">\n            <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n            <strong>{{ successMsg }}</strong>\n         </p>\n      </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\"\n        novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><strong>Title:&nbsp;<span style=\"color: darkred\">*</span></strong></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Title\" formControlName=\"title\">\n                    <div *ngFor=\"let validation of updateRoleValidationMessage.title\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"updateRoleForm.get('title').hasError(validation.type) && (updateRoleForm.get('title').dirty || updateRoleForm.get('title').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <label class=\"col-sm-6 control-label\"><strong>Description:</strong></label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Description\" formControlName=\"description\">\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateRoleForm.invalid\">Update</button>\n            <button class=\"btn btn-danger\" type=\"button\" routerLink=\"/pages/roles/list-role\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RolesService } from '../../roles-service/roles.service';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * MultiSelect Checkbox Samples\n */\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n  addRoleForm: any;\n  createMultiObj: MultiSelect;\n  editMultiObj: MultiSelect;\n  deleteMultiObj: MultiSelect;\n  errorFlag = false;\n  successFlag = false;\n  errMsg = '';\n  successMsg = '';\n\n  constructor(\n    private rolesApi: RolesService,\n    public formBuilder: FormBuilder,\n    private Router: Router\n  ) { }\n\n  ngOnInit() {\n    this.addRoleFormData();\n    this.rolesApi.getRolesListData().subscribe((data)=>{\n      if(data.status === 'success'){\n\n        MultiSelect.Inject(CheckBoxSelection);\n        // initialize the MultiSelect component\n        this.createMultiObj = new MultiSelect({\n          // set the country data to dataSource property\n          dataSource: data.data.create,\n          // map the appropriate columns to fields property\n          fields: { text: 'Name', value: 'Name' },\n          // set the type of mode for checkbox to visualized the checkbox added in li element.\n          mode: 'CheckBox',\n          // set the placeholder to MultiSelect input element\n          placeholder: 'Select Create Permission',\n          // set maximum selection length in Multiselect.\n          // maximumSelectionLength: 1,\n          // set true for enable the dropdown icon.\n          showDropDownIcon: true,\n          // set the placeholder to MultiSelect filter input element\n          filterBarPlaceholder: 'Search Create Permission',\n          // set the MultiSelect popup height\n          popupHeight: '350px',\n        });\n        this.createMultiObj.appendTo('#createCheckbox');\n\n        MultiSelect.Inject(CheckBoxSelection);\n        // initialize the MultiSelect component\n        this.editMultiObj = new MultiSelect({\n          // set the country data to dataSource property\n          dataSource: data.data.edit,\n          // map the appropriate columns to fields property\n          fields: { text: 'Name', value: 'Name' },\n          // set the type of mode for checkbox to visualized the checkbox added in li element.\n          mode: 'CheckBox',\n          // set the placeholder to MultiSelect input element\n          placeholder: 'Select Edit Permission',\n          // set maximum selection length in Multiselect.\n          // maximumSelectionLength: 1,\n          // set true for enable the dropdown icon.\n          showDropDownIcon: true,\n          // set the placeholder to MultiSelect filter input element\n          filterBarPlaceholder: 'Search Edit Permission',\n          // set the MultiSelect popup height\n          popupHeight: '350px',\n        });\n        this.editMultiObj.appendTo('#editCheckbox');\n\n        MultiSelect.Inject(CheckBoxSelection);\n        // initialize the MultiSelect component\n        this.deleteMultiObj = new MultiSelect({\n          // set the country data to dataSource property\n          dataSource: data.data.delete,\n          // map the appropriate columns to fields property\n          fields: { text: 'Name', value: 'Name' },\n          // set the type of mode for checkbox to visualized the checkbox added in li element.\n          mode: 'CheckBox',\n          // set the placeholder to MultiSelect input element\n          placeholder: 'Select Delete Permission',\n          // set maximum selection length in Multiselect.\n          // maximumSelectionLength: 1,\n          // set true for enable the dropdown icon.\n          showDropDownIcon: true,\n          // set the placeholder to MultiSelect filter input element\n          filterBarPlaceholder: 'Search Delete Permission',\n          // set the MultiSelect popup height\n          popupHeight: '350px',\n        });\n        this.deleteMultiObj.appendTo('#deleteCheckbox');\n      }\n    })\n  }\n\n  addRoleFormData(){\n    try {\n      this.addRoleForm = this.formBuilder.group({\n        title: new FormControl('',Validators.required),\n        description: new FormControl(''),\n        permission: this.formBuilder.group({\n          create: [],\n          edit: [],\n          delete: []\n        })\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  // Submit roles\n  submitRoles(){\n    try {\n\n      if(this.createMultiObj.value === null && this.editMultiObj.value === null && this.deleteMultiObj.value === null){\n        this.addRoleForm.removeControl('permission');\n      } else {\n        if(this.createMultiObj.value !== null){\n          this.addRoleForm.get('permission.create').setValue(this.createMultiObj.value);\n        } else {\n          this.addRoleForm.get('permission').removeControl('create');\n        }\n        if(this.editMultiObj.value !== null){\n          this.addRoleForm.get('permission.edit').setValue(this.editMultiObj.value);\n        } else {\n          this.addRoleForm.get('permission').removeControl('edit');\n        }\n        if(this.deleteMultiObj.value !== null){\n          this.addRoleForm.get('permission.delete').setValue(this.deleteMultiObj.value);\n        } else {\n          this.addRoleForm.get('permission').removeControl('delete');\n        }\n      }\n\n      this.addRoleForm.get('title').setValue(this.addRoleForm.get('title').value.trim());\n      if(this.addRoleForm.get('description').value === null){\n        this.addRoleForm.get('description').setValue('');\n      } else {\n      this.addRoleForm.get('description').setValue(this.addRoleForm.get('description').value.trim());\n      }\n\n      // Requset to server\n      this.rolesApi.addRole(this.addRoleForm.value).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.successFlag = true;\n          this.successMsg = data.message;\n          this.errorFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n            this.Router.navigateByUrl('/pages/roles/list-role');\n          }, 1000);\n\n        } else if(data.status = 'error'){\n          this.errorFlag = true;\n          this.errMsg = data.message;\n          this.successFlag = false;\n\n          setTimeout(() => {\n            this.handleErrorMessage();\n          }, 2000);\n\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  addRoleValidationMessage = {\n    'title': [\n      {type: 'required', message: 'Title is required'}\n    ]\n  }\n\n  handleErrorMessage() {\n    this.successFlag = false;\n    this.errorFlag = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Add Roles</h2>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorFlag\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addRoleForm\" (ngSubmit)=\"submitRoles()\"\n        novalidate>\n            <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><strong>Title:&nbsp;<span style=\"color: darkred\">*</span></strong></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\" formControlName=\"title\">\n                    <div *ngFor=\"let validation of addRoleValidationMessage.title\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"addRoleForm.get('title').hasError(validation.type) && (addRoleForm.get('title').dirty || addRoleForm.get('title').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><strong>Description:&nbsp;<span style=\"color: darkred\">*</span></strong></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Description\" formControlName=\"description\">\n                </div>\n            </div>\n        </div>\n       <div class=\"permission-form\">\n        <h4 class=\"card-title text-center\">Permissions</h4>\n       <div class=\"contain\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n               <div class=\"create-section\">\n                <h5>Create</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"createCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Edit</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section \">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"editCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <h5>Delete</h5>\n                <div class=\"stackblitz-container material\">\n                    <div class=\"control-section\">\n                    <div class=\"control-wrapper\">\n                    <input type=\"text\" id=\"deleteCheckbox\">\n                    </div>\n                    </div>\n                    <div class=\"col-lg-4 property-section\">\n                    <div id=\"property\" title=\"Properties\">\n                    <table id=\"property\" title=\"Properties\">\n                    </table>\n                    </div>\n                    </div>\n                    </div>\n            </div>\n        </div>\n       </div>\n       </div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addRoleForm.invalid\">Submit</button>\n            <button class=\"btn btn-danger\" type=\"button\" routerLink=\"/pages/roles/list-role\">Cancel</button>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { RolesComponent } from './roles.component';\nimport { AddRoleComponent } from './role/add-role/add-role.component';\nimport { UpdateRoleComponent } from './role/update-role/update-role.component';\nimport { UpdatePermissionComponent } from './permission/update-permission/update-permission.component';\nimport { ListRoleComponent } from './role/list-role/list-role.component';\nimport { ListPermissionComponent } from './permission/list-permission/list-permission.component';\n\nconst route: Routes = [\n{\n    path :'',\n    component : RolesComponent,\n    canActivate:[AuthGuard],\n    children : [\n      {\n        path: 'add-role',\n        component: AddRoleComponent,\n      },\n      {\n        path: 'update-role/:roleId',\n        component: UpdateRoleComponent,\n      },\n      {\n        path: 'update-permission/:roleId',\n        component: UpdatePermissionComponent,\n      },\n      {\n        path: 'list-role',\n        component: ListRoleComponent,\n      },\n      {\n        path: 'list-permission/:roleId',\n        component: ListPermissionComponent,\n      },\n      {\n        path:'',\n        redirectTo:'list-role',\n        pathMatch:'full'\n      }\n    ]\n}\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class RolesRoutingModule { }\n"]}