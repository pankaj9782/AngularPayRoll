{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Arya Payroll",
    "description": "This is an API documentation of Arya Payroll"
  },
  "servers": [
    {
      "description": "Deploy server",
      "url": "http://192.168.1.119:3002"
    },
    {
      "description": "LAN Server",
      "url": "http://192.168.1.146:3002"
    },
    {
      "description": "localmachine server",
      "url": "http://localhost:3002"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Sub User",
      "description": "Operations about sub user"
    },
    {
      "name": "Sub User Settings",
      "description": "Sub user settings"
    },
    {
      "name": "Company",
      "description": "Operations about company"
    },
    {
      "name": "Company Settings",
      "description": "Change Company Settings"
    },
    {
      "name": "Currency",
      "description": "Operations about Currency"
    },
    {
      "name": "Company Payment Heads",
      "description": "Operations About Company Payment Heads"
    },
    {
      "name": "Company Branch",
      "description": "Operations about company branch"
    },
    {
      "name": "Department",
      "description": "Operations about the Department"
    },
    {
      "name": "Leave Types",
      "description": "Operttions about the Leaves"
    },
    {
      "name": "Job Category",
      "description": "Opertaions about the job category"
    },
    {
      "name": "Skill Category",
      "description": "Operations about the skill category"
    },
    {
      "name": "Employee Profile",
      "description": "Operations about Employee profile"
    },
    {
      "name": "Update Employee Profile",
      "description": "Operations To Update Employee Profile"
    },
    {
      "name": "List Employee Profile",
      "description": "Operations For List Employee Profile"
    },
    {
      "name": "Delete Employee Profile",
      "description": "Operations For Delete Employee Profile"
    },
    {
      "name": "Employee Profile Payroll Settings",
      "description": "Operations For Employee Profile Payroll Settings"
    },
    {
      "name": "Company Employee",
      "description": "Operations For All Employees in a Company"
    },
    {
      "name": "Employee Profile Settings",
      "description": "Employee settings"
    },
    {
      "name": "Assign And Unassign Ids",
      "description": "Admin assign the parent Ids"
    },
    {
      "name": "User Leave",
      "description": "Employee Apply for a Leave"
    },
    {
      "name": "Aprrove/Request Leave List",
      "description": "User Approve/ Request Leave"
    },
    {
      "name": "Leave Action",
      "description": "User action on a leave request"
    },
    {
      "name": "Parent Child Ids",
      "description": "Find Employee Parent and Child Ids"
    },
    {
      "name": "Attendance History",
      "description": "Attendance of a company and a Employee"
    },
    {
      "name": "Document Types",
      "description": "Operations about Comapany Document Types"
    },
    {
      "name": "Job Profile",
      "description": "Operations about Comapany Job profile"
    },
    {
      "name": "Holiday",
      "description": "Operations about Company Holiday"
    },
    {
      "name": "User Group",
      "description": "Operations about User Groups"
    },
    {
      "name": "User Permissions",
      "description": "Opreation to assign and unassign permissions"
    },
    {
      "name": "Profile Picture",
      "description": "Opeartion to Add or Remove Profile Picture"
    },
    {
      "name": "Document",
      "description": "Operations to Add or Remove Document"
    },
    {
      "name": "Salary Slip",
      "description": "Generate Salary Slip"
    },
    {
      "name": "Grade Rule",
      "description": "Operation About Grade Rules"
    },
    {
      "name": "Leave Settings",
      "description": "Manage Leave Settings"
    },
    {
      "name": "Earned Leave",
      "description": "Earned Leave Settings"
    },
    {
      "name": "Module",
      "description": "Check Module Existance"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Login Email",
                    "type": "string"
                  },
                  "password": {
                    "description": "Login Password",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/signup-via-email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User SignupViaMail",
        "operationId": "userSignup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Signup Email",
                    "type": "string"
                  },
                  "redirectUrl": {
                    "description": "Need to confrim your Email",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "redirectUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/confirm-registration": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User confrim registration",
        "operationId": "confirm user registation",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Need token to confrim registration",
                    "type": "string"
                  },
                  "password": {
                    "description": "Enter your desired password",
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "description": "Please Re-enter your password",
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "password",
                  "passwordConfirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/password/request-reset": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User reset password registration token",
        "operationId": "reset password registration token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Please enter your registered email with AryaPayRoll",
                    "type": "string"
                  },
                  "redirectUrl": {
                    "description": "Need to reset your password",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "redirectUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/password/set": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "set your new password",
        "operationId": "register new password",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Need token to set password",
                    "type": "string"
                  },
                  "password": {
                    "description": "Enter your desired password",
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "description": "Please Re-enter your password",
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "password",
                  "passwordConfirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user-details/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List User Details",
        "operationId": "listUserDetails",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need User Id to list individual user details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/availabe-timezone": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List TimeZones",
        "operationId": "listTimeZone",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-subuser/{parentUserId}": {
      "post": {
        "tags": [
          "Sub User"
        ],
        "summary": "Add a new sub user",
        "operationId": "new sub user",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent user id to add sub user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "sub user name",
                    "type": "string"
                  },
                  "email": {
                    "description": "Enter your registered Email",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Please enter the phone number",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/update-subuser/{parentUserId}/{subUserId}": {
      "post": {
        "tags": [
          "Sub User"
        ],
        "summary": "Update details of the sub user",
        "operationId": "update sub user",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent user id to update sub users",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subUserId",
            "required": true,
            "description": "Need sub user id to update individual sub user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "update sub user name",
                    "type": "string"
                  },
                  "phone": {
                    "description": "update the phone number",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/delete-subuser/{parentUserId}/{subUserId}": {
      "delete": {
        "tags": [
          "Sub User"
        ],
        "summary": "Delete the sub user",
        "operationId": "delete sub user",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent user id to delete sub users",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subUserId",
            "required": true,
            "description": "Need sub user id to delete individual sub user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/list-subusers/{parentUserId}": {
      "get": {
        "tags": [
          "Sub User"
        ],
        "summary": "List all the sub users of a parent user",
        "operationId": "list sub users",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent user id to list the sub users",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/subuser-details/{userId}": {
      "get": {
        "tags": [
          "Sub User Settings"
        ],
        "summary": "List individual sub user details",
        "operationId": "listIndividualSubUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to list individual sub user details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-company/{parentUserId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "If parent user add the company",
        "operationId": "parent add company",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent id to add company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/parent_add_company"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-company/{parentUserId}/{subUserId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "If sub user add the company",
        "operationId": "sub user add company",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent id to add company",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subUserId",
            "required": true,
            "description": "Need sub user id to add company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/parent_add_company"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-company/{parentUserId}/{companyId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "if parent user update the company",
        "operationId": "parent user update company",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent id to update company",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update individual",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/parent_user_update_company"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-company/{parentUserId}/{subUserId}/{companyId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "if sub user update the company",
        "operationId": "sub user update company",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent id to update company",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subUserId",
            "required": true,
            "description": "Need subUser id to update company",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update individual",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/parent_user_update_company"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-company/{companyId}": {
      "delete": {
        "tags": [
          "Company"
        ],
        "summary": "Delete the Company",
        "operationId": "delete company",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to delete company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/company-list/{parentUserId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "List all the Companies of a parent user",
        "operationId": "list companies",
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "required": true,
            "description": "Need parent user id to list the companies",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/subuser-company-list/{subUserId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "List all the Companies of a sub user",
        "operationId": "listSubUserCompanies",
        "parameters": [
          {
            "in": "path",
            "name": "subUserId",
            "required": true,
            "description": "Need sub user id to list the sub user companies",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/details/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "List individual company details",
        "operationId": "listIndividualCompany",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list individual company details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/get-tl-list/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "List all the TL in a Company",
        "operationId": "listCompanyTl",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need comapny Id to list the company TL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-currency/{userId}": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "If user wants to add currency",
        "operationId": "addCurrency",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to add currency",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Currency Name",
                    "type": "string"
                  },
                  "code": {
                    "description": "Currency Abbrevation",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-currency/{userId}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "List all the Currency",
        "operationId": "listCurrency",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to list the currency",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-currency/{currencyId}": {
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Delete the Currency",
        "operationId": "deleteCurrency",
        "parameters": [
          {
            "in": "path",
            "name": "currencyId",
            "required": true,
            "description": "Need currency Id to delete currency",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-payment-head/{companyId}": {
      "post": {
        "tags": [
          "Company Payment Heads"
        ],
        "summary": "If Company add the Payment Heads",
        "operationId": "companyAddPaymentHeads",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add company Payment Head",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/company_add_payment_heads"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-payment-head/{companyId}/{paymentHeadId}": {
      "post": {
        "tags": [
          "Company Payment Heads"
        ],
        "summary": "If company wants to update payment head",
        "operationId": "updateCompanyPaymentHead",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update payment head",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "paymentHeadId",
            "required": true,
            "description": "Need payment id to update individual payment head",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/company_update_payment_heads"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-payment-heads/{companyId}": {
      "get": {
        "tags": [
          "Company Payment Heads"
        ],
        "summary": "List all the Payment Heads of a company",
        "operationId": "listCompaniePaymentHeads",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list the payment heads",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-payment-head/{paymentHeadId}": {
      "delete": {
        "tags": [
          "Company Payment Heads"
        ],
        "summary": "Delete the Company payment Head",
        "operationId": "deleteCompanyPaymentHead",
        "parameters": [
          {
            "in": "path",
            "name": "paymentHeadId",
            "required": true,
            "description": "Need paymen head id to delete company payment head",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/payment-head-details/{paymentHeadId}": {
      "get": {
        "tags": [
          "Company Payment Heads"
        ],
        "summary": "List individual payment head details",
        "operationId": "listIndividualPaymentHead",
        "parameters": [
          {
            "in": "path",
            "name": "paymentHeadId",
            "required": true,
            "description": "Need payment head id to list individual payment head details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-branch/{companyParentId}": {
      "post": {
        "tags": [
          "Company Branch"
        ],
        "summary": "If parent company add the company branch",
        "operationId": "company add branch",
        "parameters": [
          {
            "in": "path",
            "name": "companyParentId",
            "required": true,
            "description": "Need company parent id to add branch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the branch",
                    "type": "string"
                  },
                  "address": {
                    "description": "Address of the branch",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email of the branch",
                    "type": "string"
                  },
                  "officialNumber": {
                    "description": "Official Number of the branch",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Enter phone number of the branch",
                    "type": "string"
                  },
                  "fax": {
                    "description": "Fax number of the branch",
                    "type": "string"
                  },
                  "outGoingMails": {
                    "description": "BCC Address for all outgoing mails of branch",
                    "type": "string"
                  },
                  "gstNumber": {
                    "description": "GSTNo",
                    "type": "string"
                  },
                  "currency": {
                    "description": "Home Currency",
                    "type": "string",
                    "enum": [
                      "USD",
                      "INR"
                    ]
                  }
                },
                "required": [
                  "name",
                  "address",
                  "email",
                  "officialNumber"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-branch/{companyParentId}/{branchId}": {
      "post": {
        "tags": [
          "Company Branch"
        ],
        "summary": "Update the branch",
        "operationId": "update branch",
        "parameters": [
          {
            "in": "path",
            "name": "companyParentId",
            "required": true,
            "description": "Need parent id to update branch",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "Need branch id to update individual",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the branch",
                    "type": "string"
                  },
                  "address": {
                    "description": "Address of the branch",
                    "type": "string"
                  },
                  "officialNumber": {
                    "description": "Official Number of the branch",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Enter phone number of the branch",
                    "type": "string"
                  },
                  "fax": {
                    "description": "Fax number of the branch",
                    "type": "string"
                  },
                  "gstNumber": {
                    "description": "GSTNo",
                    "type": "string"
                  },
                  "currency": {
                    "description": "Home Currency",
                    "type": "string",
                    "enum": [
                      "USD",
                      "INR"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/branch-list/{companyParentId}": {
      "get": {
        "tags": [
          "Company Branch"
        ],
        "summary": "List all the branch of a parent company",
        "operationId": "list branches",
        "parameters": [
          {
            "in": "path",
            "name": "companyParentId",
            "required": true,
            "description": "Need parent company id to list the branches",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-branch/{branchId}": {
      "delete": {
        "tags": [
          "Company Branch"
        ],
        "summary": "Delete the branch",
        "operationId": "delete branch",
        "parameters": [
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "Need branch id to delete branch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/branch-details/{branchId}": {
      "get": {
        "tags": [
          "Company Branch"
        ],
        "summary": "List individual branch details",
        "operationId": "listIndividualBranch",
        "parameters": [
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "Need branch id to list individual branch details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/branch/add-department/{branchId}/{companyId}": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "If a branch add the department",
        "operationId": "addDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "Need branch id to add department",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add department",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Title of the department",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description about the department",
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/branch/update-department/{branchId}/{departmentId}": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Update the Department",
        "operationId": "update department",
        "parameters": [
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "Need parent id to update department",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "departmentId",
            "required": true,
            "description": "Need department id to update individual",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Title of the branch",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the branch",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/branch/list-department/{branchId}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "List all the department of a branch",
        "operationId": "listBranchDepartments",
        "parameters": [
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "Need branch id to list the Branch deparments",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/departments/list-all/{companyId}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "List all the department of a company",
        "operationId": "listCompanyDepartments",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need Company Id to list the company deparments",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/branch/delete-department/{departmentId}": {
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Delete the department",
        "operationId": "delete department",
        "parameters": [
          {
            "in": "path",
            "name": "departmentId",
            "required": true,
            "description": "Need branch id to delete department",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/branch/department-details/{departmentId}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "List individual department details",
        "operationId": "listIndividualDepartment",
        "parameters": [
          {
            "in": "path",
            "name": "departmentId",
            "required": true,
            "description": "Need department id to list individual department details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/check-module-exist/{moduleId}/{companyId}/{type}": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Check Module Exist",
        "operationId": "checkModuleExistance",
        "parameters": [
          {
            "in": "path",
            "name": "moduleId",
            "required": true,
            "description": "Module Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Company Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "description": "Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-leave-type/{companyId}": {
      "post": {
        "tags": [
          "Leave Types"
        ],
        "summary": "If user add the leave type",
        "operationId": "add leave type",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add leave type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "leaveTypeName": {
                    "description": "Leave Name",
                    "type": "string"
                  },
                  "leaveTypeCode": {
                    "description": "Leave Code",
                    "type": "string"
                  },
                  "isPaid": {
                    "description": "Is Paid",
                    "type": "boolean"
                  }
                },
                "required": [
                  "leaveTypeName",
                  "leaveTypeCode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-leave-type/{companyId}/{leaveTypeId}": {
      "post": {
        "tags": [
          "Leave Types"
        ],
        "summary": "If user wants to the update leave type",
        "operationId": "update leave type",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update leave type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "leaveTypeId",
            "required": true,
            "description": "Need leave type id to update individual leave",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "leaveTypeName": {
                    "description": "Leave Name",
                    "type": "string"
                  },
                  "leaveTypeCode": {
                    "description": "Leave Code",
                    "type": "string"
                  },
                  "isPaid": {
                    "description": "Is Paid",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-leave-types/{companyId}": {
      "get": {
        "tags": [
          "Leave Types"
        ],
        "summary": "If user wants list all the leave types",
        "operationId": "list leave",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list leave types",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-leave-type/{leaveTypeId}": {
      "delete": {
        "tags": [
          "Leave Types"
        ],
        "summary": "If user wants delete the leave types",
        "operationId": "delete leave type",
        "parameters": [
          {
            "in": "path",
            "name": "leaveTypeId",
            "required": true,
            "description": "Need leave type id to delete individual leave type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/leave-type-details/{leaveTypeId}": {
      "get": {
        "tags": [
          "Leave Types"
        ],
        "summary": "List individual leave type details",
        "operationId": "listIndividualLeaveType",
        "parameters": [
          {
            "in": "path",
            "name": "leaveTypeId",
            "required": true,
            "description": "Need leave type id to list individual leave type details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-job-category/{companyId}": {
      "post": {
        "tags": [
          "Job Category"
        ],
        "summary": "If company add the parent job category",
        "operationId": "add parent job category",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add job category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/add_parent_job_category"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-job-category/{companyId}/{parentCategoryId}": {
      "post": {
        "tags": [
          "Job Category"
        ],
        "summary": "If company add child job category to parent job category",
        "operationId": "add child job category",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add job category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "parentCategoryId",
            "required": true,
            "description": "Need parent category id to refrence the parent job category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/add_parent_job_category"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-job-category/{companyId}/{jobCategoryId}": {
      "post": {
        "tags": [
          "Job Category"
        ],
        "summary": "If company update job category",
        "operationId": "update job category",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update job category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "jobCategoryId",
            "required": true,
            "description": "Need job category id to update the individual job category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "categoryName": {
                    "description": "Category Name",
                    "type": "string"
                  },
                  "isActive": {
                    "description": "Is Active",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-job-categories/{companyId}": {
      "get": {
        "tags": [
          "Job Category"
        ],
        "summary": "List all the job categories",
        "operationId": "list job categories",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list all categories",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-job-category/{jobCategoryId}": {
      "delete": {
        "tags": [
          "Job Category"
        ],
        "summary": "If company wants to delete the job category",
        "operationId": "delete category",
        "parameters": [
          {
            "in": "path",
            "name": "jobCategoryId",
            "required": true,
            "description": "Need job category id to delete individual job category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/job-category-details/{jobCategoryId}": {
      "get": {
        "tags": [
          "Job Category"
        ],
        "summary": "List individual job category details",
        "operationId": "listIndividualJobCategory",
        "parameters": [
          {
            "in": "path",
            "name": "jobCategoryId",
            "required": true,
            "description": "Need job category id to list individual job category details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/category/add-skill-category/{companyId}/{userId}": {
      "post": {
        "tags": [
          "Skill Category"
        ],
        "summary": "If category have skill category",
        "operationId": "add skill category",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add skill category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "skillName": {
                    "description": "Skill Name",
                    "type": "string"
                  },
                  "categoryId": {
                    "description": "Category Id",
                    "type": "string"
                  }
                },
                "required": [
                  "skillName",
                  "categoryId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/category/update-skill-category/{skillCategoryId}/{companyId}/{userId}": {
      "post": {
        "tags": [
          "Skill Category"
        ],
        "summary": "Update skill category",
        "operationId": "update skill category",
        "parameters": [
          {
            "in": "path",
            "name": "skillCategoryId",
            "required": true,
            "description": "Need skill category id to update the individual skill category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id for company verification",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id for user authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "skillName": {
                    "description": "Skill Name",
                    "type": "string"
                  },
                  "categoryId": {
                    "description": "Category Id",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/category/list-skill-category/{companyId}": {
      "get": {
        "tags": [
          "Skill Category"
        ],
        "summary": "List all the Skill categories",
        "operationId": "list skill categories",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list all categories",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/category/delete-skill-category/{skillCategoryId}": {
      "delete": {
        "tags": [
          "Skill Category"
        ],
        "summary": "Delete skill category",
        "operationId": "delete skill category",
        "parameters": [
          {
            "in": "path",
            "name": "skillCategoryId",
            "required": true,
            "description": "Need skill category id to delete individual skill category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/category/skill-category-details/{skillCategoryId}": {
      "get": {
        "tags": [
          "Skill Category"
        ],
        "summary": "List individual skill category details",
        "operationId": "listIndividualSkillCategory",
        "parameters": [
          {
            "in": "path",
            "name": "skillCategoryId",
            "required": true,
            "description": "Need skill category id to list individual skill category details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-employee/{parentUserId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "parentUserId",
            "description": "parent user Id to add employee profile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "description": "Add employee profile"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-details/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List Employee Details",
        "operationId": "listEmployeeDetails",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list Employee Details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-skills/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee skills",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Skills"
              }
            }
          },
          "description": "To add employee skills"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-skills/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the skills",
        "operationId": "listEmployeeskills",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all skills",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-employee-profile/{employeeId}/{userId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "parent employee Id to Update employee profile",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "description": "parent user Id to Update employee profile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdate"
              }
            }
          },
          "description": "Update employee profile"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/update-skills/{employeeId}/{skillId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee skill",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "skillId",
            "description": "skils Id to update employee individual skill",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Skills"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-skill/{employeeId}/{skillId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete skill",
        "operationId": "deleteEmployeeSkill",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete skill",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "skillId",
            "required": true,
            "description": "Need skill id to delete individual skill",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-family/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee Family Members",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Members"
              }
            }
          },
          "description": "To add employee family members"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-family-details/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the Family Details",
        "operationId": "listEmployeeFamilyDetails",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all family details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-family-details/{employeeId}/{familyId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee family detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "familyId",
            "description": "family Id to update employee individual family detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Members"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-family-detail/{employeeId}/{familyId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete family detail",
        "operationId": "deleteEmployeeFamilyDetail",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete family detail",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "familyId",
            "required": true,
            "description": "Need family id to delete individual family detail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-address/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-addresses/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the address",
        "operationId": "listEmployeeAddress",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all addresses",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-address/{employeeId}/{addressId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "description": "Address Id to update employee individual Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-address/{employeeId}/{addressId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete address",
        "operationId": "deleteEmployeeAddress",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "Need address id to delete individual address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-educational-details/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee Educational Details",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalDetails"
              }
            }
          },
          "description": "To add employee educational details"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-educational-details/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the Education Details",
        "operationId": "listEmployeeEducationDetails",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all education details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-educational-detail/{employeeId}/{educationId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee education detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "educationId",
            "description": "Education Id to update employee individual education details",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalDetails"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-educational-detail/{employeeId}/{educationId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete education detail",
        "operationId": "deleteEmployeeEducationDetail",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "educationId",
            "required": true,
            "description": "Need education id to delete individual education detail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-work-experiences/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee Work Experiences",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkExperiences"
              }
            }
          },
          "description": "To add employee educational details"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-work-experiences/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the Work Experiences",
        "operationId": "listEmployeeWorkExperiences",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all work experiences",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-work-experiences/{employeeId}/{workExperienceId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee work experiences",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workExperienceId",
            "description": "Work experiences Id to update employee individual work experience",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkExperiences"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-work-experience/{employeeId}/{workExperienceId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete work experience",
        "operationId": "deleteEmployeeWorkExperience",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete work experience",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workExperienceId",
            "required": true,
            "description": "Need work experience id to delete individual work experience",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-identity-proofs/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee Identity Proofs",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProofs"
              }
            }
          },
          "description": "To add employee identity proofs"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-identity-proofs/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the Identity Proofs",
        "operationId": "listEmployeeIdentityProofs",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all Identity Proofs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-identity-proofs/{employeeId}/{proofId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee Identity proof",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "proofId",
            "description": "Proof Id to update employee individual Identity proof",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProofs"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-identity-proof/{employeeId}/{proofId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete Identity Proof",
        "operationId": "deleteEmployeeIdentityProof",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete identity proof",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "proofId",
            "required": true,
            "description": "Need proof id to delete individual identity proof",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-bank-details/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee bank details",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBankDetails"
              }
            }
          },
          "description": "To add employee bank details"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-bank-details/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List Employee Bank Details",
        "operationId": "listEmployeeBankDetails",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list Employee Bank Details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-bank-details/{employeeId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee Bank Details",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBankDetails"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-bank-details/{employeeId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete Bank Details",
        "operationId": "deleteEmployeeBankDetails",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete bank details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-language-skills/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee language skills",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageSkills"
              }
            }
          },
          "description": "To add employee language details"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-language-skills/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the Language Skills",
        "operationId": "listEmployeeLanguageSkills",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all Language Skills",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-language-skill/{employeeId}/{languageId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee language skill",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "languageId",
            "description": "Language Id to update employee individual language skill",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageSkills"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-language-skill/{employeeId}/{languageId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete Language Skill",
        "operationId": "deleteEmployeeLanguageSkill",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete Language Skill",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "languageId",
            "required": true,
            "description": "Need language id to delete individual language skill",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-hobbies/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee hobbies",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hobbies"
              }
            }
          },
          "description": "To add employee hobbies details"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-hobbies/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List all the Hobbies",
        "operationId": "listEmployeeHobbies",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list all Hobbies",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-hobby/{employeeId}/{hobbyId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee language skill",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hobbyId",
            "description": "Hobby Id to update employee individual hobby",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hobbies"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-hobby/{employeeId}/{hobbyId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete Hobby",
        "operationId": "deleteEmployeeHobby",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete Hobby",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hobbyId",
            "required": true,
            "description": "Need hobby id to delete individual Hobby",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-employee-bio/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee bio",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBio"
              }
            }
          },
          "description": "To add employee hobbies bio"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-bio/{employeeId}": {
      "get": {
        "tags": [
          "List Employee Profile"
        ],
        "summary": "List Employee Bank Details",
        "operationId": "listEmployeeBio",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list Employee bio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-bio/{employeeId}": {
      "post": {
        "tags": [
          "Update Employee Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee Bio",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBio"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-bio/{employeeId}": {
      "delete": {
        "tags": [
          "Delete Employee Profile"
        ],
        "summary": "If Employee wants to delete Bank Details",
        "operationId": "deleteEmployeeBio",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete bio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-payroll-setting/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile Payroll Settings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to add employee Payroll Settings",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollSettings"
              }
            }
          },
          "description": "To add employee hobbies bio"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/list-payroll-settings/{employeeId}": {
      "get": {
        "tags": [
          "Employee Profile Payroll Settings"
        ],
        "summary": "List Employee Payroll Settings",
        "operationId": "listEmployeePayrollSettings",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list Employee Payroll Settings",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-payroll-setting/{employeeId}": {
      "post": {
        "tags": [
          "Employee Profile Payroll Settings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "description": "Employee Id to update employee Payroll Settings",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollSettings"
              }
            }
          },
          "description": "To add employee address"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/delete-payroll-setting/{employeeId}": {
      "delete": {
        "tags": [
          "Employee Profile Payroll Settings"
        ],
        "summary": "If Employee wants to delete Payroll Settings",
        "operationId": "deleteEmployeePayrollSettings",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete Payroll Settings",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-employees/{companyId}/{status}": {
      "get": {
        "tags": [
          "Company Employee"
        ],
        "summary": "List all the Employees in a Company",
        "operationId": "listCompanyEmployees",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need companyId id to list employees",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "status",
            "required": true,
            "description": "List employees according to their status (@params:'Active'/'Inactive')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/employee-status/{employeeId}/{status}": {
      "get": {
        "tags": [
          "Company Employee"
        ],
        "summary": "List all the Employees in a Company",
        "operationId": "listCompanyEmployeesStatus",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to change status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "status",
            "required": true,
            "description": "cahnge employees status according to their status (@params:'Active'/'Inactive')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/employee-set-password/{userId}": {
      "post": {
        "tags": [
          "Employee Profile Settings"
        ],
        "summary": "Add a new sub user",
        "operationId": "setEmployeePassword",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to set password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "description": "Password",
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "description": "Password Confirmation",
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "passwordConfirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/assign-parentId/{userId}": {
      "post": {
        "tags": [
          "Assign And Unassign Ids"
        ],
        "summary": "Assign ParentIds",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "user Id to add individual user parent Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeParentIds"
              }
            }
          },
          "description": "To add employee hobbies bio"
        },
        "responses": {
          "200": {
            "description": "Successfully returns the response"
          },
          "400": {
            "description": "Invalid input Parameters"
          },
          "401": {
            "description": "Invalid Access Token"
          },
          "404": {
            "description": "No data found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/unassign-parentId/{userId}/{parentUserId}": {
      "get": {
        "tags": [
          "Assign And Unassign Ids"
        ],
        "summary": "Unassign ParentIds",
        "operationId": "unAssignIds",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "user Id to delete individual parentIds",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "parentUserId",
            "description": "user Id to remove individual parentIds",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/activity-leave/{userId}/{leaveId}": {
      "post": {
        "tags": [
          "Leave Action"
        ],
        "summary": "User action on a leave request",
        "operationId": "leaveAction",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "user Id to take action",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "leaveId",
            "description": "Leave Id to take action on individual leave request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "Take action",
                    "type": "string",
                    "enum": [
                      "Approve",
                      "Reject",
                      "Delete"
                    ]
                  },
                  "reason": {
                    "description": "Give Reason",
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-leave/{userId}/{companyId}": {
      "post": {
        "tags": [
          "User Leave"
        ],
        "summary": "Add a Leave",
        "operationId": "addLeave",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to apply a leave",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to apply a leave",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "description": "Leave Reason",
                    "type": "string"
                  },
                  "fromDate": {
                    "description": "From Date",
                    "type": "string"
                  },
                  "fromLeaveFor": {
                    "description": "Leave For",
                    "type": "string",
                    "enum": [
                      "First Half",
                      "Second Half",
                      "Full Day"
                    ]
                  },
                  "toDate": {
                    "description": "To Date",
                    "type": "string"
                  },
                  "toLeaveFor": {
                    "description": "Leave For",
                    "type": "string",
                    "enum": [
                      "First Half",
                      "Second Half",
                      "Full Day"
                    ]
                  },
                  "requestToUserId": {
                    "description": "Request user Id",
                    "type": "string"
                  },
                  "leaveTypeId": {
                    "description": "Leave Type Id",
                    "type": "string"
                  }
                },
                "required": [
                  "reason",
                  "fromDate",
                  "fromLeaveFor",
                  "toDate",
                  "toLeaveFor",
                  "requestToUserId",
                  "leaveTypeId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/mark-leave-absent-or-sandwich/{userId}": {
      "post": {
        "tags": [
          "User Leave"
        ],
        "summary": "Mark Absent Or Sandwich Employee Leave",
        "operationId": "markAbsentOrSandwich",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to to take action",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "description": "Leave Reason",
                    "type": "string"
                  },
                  "fromDate": {
                    "description": "From Date",
                    "type": "string"
                  },
                  "fromLeaveFor": {
                    "description": "Leave For",
                    "type": "string",
                    "enum": [
                      "First Half",
                      "Second Half",
                      "Full Day"
                    ]
                  },
                  "toDate": {
                    "description": "To Date",
                    "type": "string"
                  },
                  "toLeaveFor": {
                    "description": "Leave For",
                    "type": "string",
                    "enum": [
                      "First Half",
                      "Second Half",
                      "Full Day"
                    ]
                  },
                  "requestToUserId": {
                    "description": "Request user Id",
                    "type": "string"
                  },
                  "leaveTypeId": {
                    "description": "Leave Type Id",
                    "type": "string"
                  },
                  "status": {
                    "description": "Leave Status",
                    "type": "string",
                    "enum": [
                      "Unsanctioned",
                      "Sandwich"
                    ]
                  }
                },
                "required": [
                  "reason",
                  "fromDate",
                  "fromLeaveFor",
                  "toDate",
                  "toLeaveFor",
                  "requestToUserId",
                  "leaveTypeId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/attendance/{companyId}": {
      "get": {
        "tags": [
          "User Leave"
        ],
        "summary": "Company Attendance",
        "operationId": "listCompanyAttendance",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list attendance",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/request-approve-list/{userId}": {
      "get": {
        "tags": [
          "Aprrove/Request Leave List"
        ],
        "summary": "List all the approve/request leave to login user",
        "operationId": "approve/requestLeaveList",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to list approve/request leave to user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/parent-child-ids/{employeeId}": {
      "get": {
        "tags": [
          "Parent Child Ids"
        ],
        "summary": "List all the parent and child ids of an employee",
        "operationId": "listParentChildIds",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need emplyee id to list parent and child ids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-user-leave-history/{companyId}/{employeeId}": {
      "get": {
        "tags": [
          "Attendance History"
        ],
        "summary": "List all the attendance of a company and a employee",
        "operationId": "listAttendance",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list company holidays",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list user holidays",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-all-job-profiles/{companyId}": {
      "get": {
        "tags": [
          "Job Profile"
        ],
        "summary": "If company wants to list all job profile",
        "operationId": "listJobProfiles",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list job profiles",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-document-types/{companyId}": {
      "post": {
        "tags": [
          "Document Types"
        ],
        "summary": "If company have document types",
        "operationId": "addDocumentType",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add document types",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Title Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Document Description",
                    "type": "string"
                  },
                  "isRequired": {
                    "description": "Document Required",
                    "type": "boolean"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-document-types/{companyId}/{documentTypeId}": {
      "post": {
        "tags": [
          "Document Types"
        ],
        "summary": "If company wants to update document types",
        "operationId": "updateDocumentType",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update document type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentTypeId",
            "required": true,
            "description": "Need document type id to update individual document type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Title Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Document Description",
                    "type": "string"
                  },
                  "isRequired": {
                    "description": "Document Required",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-all-document-types/{companyId}": {
      "get": {
        "tags": [
          "Document Types"
        ],
        "summary": "If company wants to list all document types",
        "operationId": "listDocumentTypes",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list document types",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/uploaded-documnets/{employeeId}/{companyId}": {
      "get": {
        "tags": [
          "Document Types"
        ],
        "summary": "Check Employee Uploaded Documents",
        "operationId": "listUploadedDocumentTypes",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list document uploaded by an employee",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to get document types",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-document-type/{documentTypeId}": {
      "delete": {
        "tags": [
          "Document Types"
        ],
        "summary": "If company wants to delete document type",
        "operationId": "deleteDocumentType",
        "parameters": [
          {
            "in": "path",
            "name": "documentTypeId",
            "required": true,
            "description": "Need document type id to delete individual document type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/document-type-details/{documentTypeId}": {
      "get": {
        "tags": [
          "Document Types"
        ],
        "summary": "List Individual Document Type",
        "operationId": "listIndividualDocumentTypes",
        "parameters": [
          {
            "in": "path",
            "name": "documentTypeId",
            "required": true,
            "description": "Need document type id to list individual document types",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-job-profile/{companyId}": {
      "post": {
        "tags": [
          "Job Profile"
        ],
        "summary": "If company add a job profile",
        "operationId": "addJobProfile",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add job profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "positionName": {
                    "description": "Position Name",
                    "type": "string"
                  },
                  "payBasis": {
                    "description": "Pay Basis",
                    "type": "string",
                    "enum": [
                      "Monthly Salary",
                      "Daily Wages"
                    ]
                  },
                  "isActive": {
                    "description": "Status of Profile",
                    "type": "boolean"
                  }
                },
                "required": [
                  "positionName",
                  "payBasis"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-job-profile/{companyId}/{jobProfileId}": {
      "post": {
        "tags": [
          "Job Profile"
        ],
        "summary": "If company wants to update job profile",
        "operationId": "updatejobProfile",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update job profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "jobProfileId",
            "required": true,
            "description": "Need job profile id to update individual job profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "positionName": {
                    "description": "Position Name",
                    "type": "string"
                  },
                  "payBasis": {
                    "description": "Pay Basis",
                    "type": "string",
                    "enum": [
                      "Monthly Salary",
                      "Daily Wages"
                    ]
                  },
                  "isActive": {
                    "description": "Status of Profile",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/list-leave/{userId}": {
      "get": {
        "tags": [
          "User Leave"
        ],
        "summary": "If user wants to list all the leaves",
        "operationId": "listLeaves",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to list leaves",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/particular-date-leaves/{userId}/{date}": {
      "get": {
        "tags": [
          "User Leave"
        ],
        "summary": "If user wants to list the leaves date wise",
        "operationId": "listLeavesDateWise",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to list leaves date wise",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "description": "Need date to list leaves for particular date",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/all-employee/particular-date-leaves/{companyId}/{date}": {
      "get": {
        "tags": [
          "User Leave"
        ],
        "summary": "If user wants to list the leaves for all employees date wise",
        "operationId": "employeesListLeavesDateWise",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list employees leaves date wise",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "description": "Need date to list leaves for particular date",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-job-profile/{jobProfileId}": {
      "delete": {
        "tags": [
          "Job Profile"
        ],
        "summary": "If company wants to delete job profile",
        "operationId": "deleteJobProfile",
        "parameters": [
          {
            "in": "path",
            "name": "jobProfileId",
            "required": true,
            "description": "Need job profile id to delete individual job profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/job-profile-details/{jobProfileId}": {
      "get": {
        "tags": [
          "Job Profile"
        ],
        "summary": "List individual job profile details",
        "operationId": "listIndividualJobProfile",
        "parameters": [
          {
            "in": "path",
            "name": "jobProfileId",
            "required": true,
            "description": "Need job Profile id to list individual job profile details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-holiday/{companyId}": {
      "post": {
        "tags": [
          "Holiday"
        ],
        "summary": "If company add a Holiday",
        "operationId": "addHoliday",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add holiday",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Holiday Title",
                    "type": "string"
                  },
                  "holidayDate": {
                    "description": "Holday Date",
                    "type": "string"
                  },
                  "type": {
                    "description": "Holiday Type",
                    "type": "string",
                    "enum": [
                      "NATIONAL",
                      "STATE",
                      "WEEKLY",
                      "FESTIVAL"
                    ]
                  }
                },
                "required": [
                  "title",
                  "holidayDate",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-holiday/{companyId}/{holidayId}": {
      "post": {
        "tags": [
          "Holiday"
        ],
        "summary": "If company update a Holiday",
        "operationId": "updateHoliday",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update holiday",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "holidayId",
            "required": true,
            "description": "Need holiday id to update individual holiday",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Holiday Title",
                    "type": "string"
                  },
                  "holidayDate": {
                    "description": "Holiday Date",
                    "type": "string"
                  },
                  "type": {
                    "description": "Holiday Type",
                    "type": "string",
                    "enum": [
                      "NATIONAL",
                      "STATE",
                      "WEEKLY",
                      "FESTIVAL"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-all-holidays/{companyId}": {
      "get": {
        "tags": [
          "Holiday"
        ],
        "summary": "If company wants to list all holidays",
        "operationId": "listHolidays",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list holidays",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-holiday/{holidayId}": {
      "delete": {
        "tags": [
          "Holiday"
        ],
        "summary": "If company wants to delete holiday",
        "operationId": "deleteHoliday",
        "parameters": [
          {
            "in": "path",
            "name": "holidayId",
            "required": true,
            "description": "Need holidayId to delete individual holiday",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/holiday-details/{holidayId}": {
      "get": {
        "tags": [
          "Holiday"
        ],
        "summary": "List individual holiday details",
        "operationId": "listIndividualHoliday",
        "parameters": [
          {
            "in": "path",
            "name": "holidayId",
            "required": true,
            "description": "Need holiday id to list individual holiday details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-user-group": {
      "post": {
        "tags": [
          "User Group"
        ],
        "summary": "Add User Group",
        "operationId": "addUserGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "User Group Title",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the User Group",
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/update-user-group/{userGroupId}": {
      "post": {
        "tags": [
          "User Group"
        ],
        "summary": "Update the User Group",
        "operationId": "updateUserGroup",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "description": "Need user group id to update user group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "User Group Title",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the User Group",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/user-group-details/{userGroupId}": {
      "get": {
        "tags": [
          "User Group"
        ],
        "summary": "List the User Group Details",
        "operationId": "listUserGroup",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "description": "Need user group id to list the user group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/delete-user-group/{userGroupId}": {
      "delete": {
        "tags": [
          "User Group"
        ],
        "summary": "Delete the User Group",
        "operationId": "deleteUserGroup",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "description": "Need user group id to delete user group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/list-user-groups": {
      "get": {
        "tags": [
          "User Group"
        ],
        "summary": "List all the User Group Details",
        "operationId": "listAllUserGroups",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subuser/user-permissions-action/{subUserId}": {
      "post": {
        "tags": [
          "User Permissions"
        ],
        "summary": "Add Permissions to sub user",
        "operationId": "addPermissions",
        "parameters": [
          {
            "in": "path",
            "name": "subUserId",
            "required": true,
            "description": "Need sub user id to add permissions",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/upload-profile-picture/{userId}": {
      "post": {
        "tags": [
          "Profile Picture"
        ],
        "summary": "Upload User Avatar",
        "operationId": "addAvatar",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id to add profile picture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "avatar"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/remove-profile-picture/{userId}": {
      "delete": {
        "tags": [
          "Profile Picture"
        ],
        "summary": "Remove Avatar",
        "operationId": "deleteAvatar",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user user id to remove avatar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/upload-documents/{userId}/{documentTypeId}/{employeeId}/{type}/{companyId}": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload Documnet",
        "operationId": "addDocument",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user Id to keep track which user add or update documnet",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentTypeId",
            "required": true,
            "description": "Need Document Type to add Document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to add document to individual user",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "description": "Need type while user want to update or add documnet(@params:'Add','Update')",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company Id to add document of employee for individual company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "document"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/remove-documnets/{documentTypeId}/{employeeId}": {
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Remove Document",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "in": "path",
            "name": "documentTypeId",
            "required": true,
            "description": "Need Document Type to remove Document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to remove document to individual user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/list-documents/{employeeId}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "List all the Documents",
        "operationId": "listAllDocuments",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list documents",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/generate-salary-slip/{companyId}": {
      "post": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "Employee Salary Slip",
        "operationId": "generateSalarySlip",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to get all the employee in a company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "string"
                  },
                  "month": {
                    "type": "string"
                  }
                },
                "required": [
                  "year",
                  "month"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/salary-slip-list/{companyId}": {
      "post": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "List Employees Salary Slip",
        "operationId": "listSalarySlips",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to get all the employee salary slip in a company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "string"
                  },
                  "month": {
                    "type": "string"
                  }
                },
                "required": [
                  "year",
                  "month"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/filter-salary-slip/{companyId}/{modeType}/{year}/{month}": {
      "get": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "Filter Salary Slip",
        "operationId": "filterSalarySlips",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to get all the employee salary slip in a company",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "modeType",
            "required": true,
            "description": "Need mode type to filter salary slips",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "description": "Need year to filter salary slips for particular year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "description": "Need month to filter salary slips for particular month",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/current-month-salary-slip/{companyId}/{year}/{month}": {
      "get": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "List Current month Salary Slip",
        "operationId": "listCurrentMonthSalarySlip",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to get all the employee in a company",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "description": "Need year to get salary slips for particular year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "description": "Need month to get salary slips for particular month",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/bank-statement/{companyId}": {
      "post": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "List Company Bank Statement",
        "operationId": "listBankStatement",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to get the bank statement of all employees",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "string"
                  },
                  "month": {
                    "type": "string"
                  },
                  "statementType": {
                    "type": "string",
                    "enum": [
                      "Bank",
                      "Cash",
                      "Cheque"
                    ]
                  }
                },
                "required": [
                  "year",
                  "month"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-cheque-details/{salaryId}": {
      "post": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "Update Cheque Number",
        "operationId": "updateChequeNumber",
        "parameters": [
          {
            "in": "path",
            "name": "salaryId",
            "required": true,
            "description": "Salary ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkNum": {
                    "type": "string"
                  }
                },
                "required": [
                  "checkNum"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/get-cheque-details/{salaryId}": {
      "get": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "Get Cheque Details",
        "operationId": "getChequeDetails",
        "parameters": [
          {
            "in": "path",
            "name": "salaryId",
            "required": true,
            "description": "Salary ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/salary-slip-details/{salarySlipId}": {
      "get": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "List Salary Slip",
        "operationId": "listSalaryDetails",
        "parameters": [
          {
            "in": "path",
            "name": "salarySlipId",
            "required": true,
            "description": "Need salary slip id to list salary slip details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-grade-rule/{companyId}": {
      "post": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "Company Grade Rule",
        "operationId": "addGradeRule",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to add grade rule",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeRulePaymentHead"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/add-grade-rule-payment-head/{gradeRuleId}": {
      "post": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "Company Grade Rule Payment Head",
        "operationId": "addGradeRulePaymentHead",
        "parameters": [
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Need grade rule id to add grade rule payment head",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentHead"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-grade-rule/{companyId}/{gradeRuleId}": {
      "post": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "Company Grade Rule",
        "operationId": "updateGradeRule",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to update grade rule",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Need grade rule id to update individual grade rule",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Title",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/update-grade-rule-payment-head/{paymentHeadsId}/{gradeRuleId}": {
      "post": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "Company Grade Rule",
        "operationId": "updateGradeRulePaymentHeads",
        "parameters": [
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Need grade rule id to update individual grade rule",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "paymentHeadsId",
            "required": true,
            "description": "Need Grade Rule Payment Heads id to Update Individual Grade Rule Payment Heads",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGradeRulePaymentHead",
                "description": "To update grade rule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/grade-rule-list/{gradeRuleId}": {
      "get": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "List Grade Rule",
        "operationId": "listGradeRule",
        "parameters": [
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Need grade rule id to list grade rules",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/list-all-grade-rule/{companyId}": {
      "get": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "List All Grade Rule In A Company",
        "operationId": "listAllGradeRule",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list all grade rules in a company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-grade-rule-payment-head/{paymentHeadsId}/{gradeRuleId}": {
      "delete": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "Delete Grade Rule Payment Heads",
        "operationId": "deleteGradeRulePaymentHeads",
        "parameters": [
          {
            "in": "path",
            "name": "paymentHeadsId",
            "required": true,
            "description": "Need grade rule payment heads id to remove individual payment heads",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Need grade rule id to delete individual grade rule payment head",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/delete-grade-rule/{gradeRuleId}": {
      "delete": {
        "tags": [
          "Grade Rule"
        ],
        "summary": "Delete Grade Rule",
        "operationId": "deleteGradeRule",
        "parameters": [
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Need grade rule id to delete grade rule",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-leave-settings/{employeeId}/{userId}": {
      "post": {
        "tags": [
          "Leave Settings"
        ],
        "summary": "Add Leave Settings",
        "operationId": "addLeaveSettings",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to add leave setting",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "leavePerMonth": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "startDate",
                  "endDate",
                  "leavePerMonth"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-leave-settings/{leaveSettingId}/{employeeId}/{userId}": {
      "post": {
        "tags": [
          "Leave Settings"
        ],
        "summary": "Update Leave Settings",
        "operationId": "updateLeaveSettings",
        "parameters": [
          {
            "in": "path",
            "name": "leaveSettingId",
            "required": true,
            "description": "Need leave setting id to update individual leave setting",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id for find employee",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "leavePerMonth": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/list-leave-settings/{employeeId}": {
      "get": {
        "tags": [
          "Leave Settings"
        ],
        "summary": "List Leave Settings",
        "operationId": "listLeaveSettings",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id for list leave settings",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/add-earned-leave/{employeeId}/{userId}": {
      "post": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "Add Earned Leave",
        "operationId": "addEarnedLeave",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to add his/her earned leave",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EarnedLeave"
              }
            }
          },
          "description": "To add employee Earned Leave Balance"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/update-earned-leave/{earnedLeaveId}/{employeeId}/{userId}": {
      "post": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "Update Earned Leave",
        "operationId": "updateEarnedLeave",
        "parameters": [
          {
            "in": "path",
            "name": "earnedLeaveId",
            "required": true,
            "description": "Need earned leave id to update individual leave setting",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id for find employee",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Need user id for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EarnedLeave"
              }
            }
          },
          "description": "To update employee Earned Leave Balance"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/list-all-eraned-leave/{companyId}/{year}/{month}": {
      "get": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "List all the Employee Earned Leave",
        "operationId": "listAllEarnedLeave",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company id to list all the earned leave",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "description": "Need year to list all the earned leave for particular year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "description": "Need month to list all the earned leave for particular month",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/earned-leave-details/{employeeId}/{year}/{month}": {
      "get": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "Filter Employee Earned Leave",
        "operationId": "filterEarnedLeave",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employeeId id to filter the earned leave",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "description": "Need year to filter the earned leave for particular year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "description": "Need month to filter the earned leave for particular month",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/earned-leave-details/{earnedLeaveId}/{employeeId}": {
      "get": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "Earned Leave list",
        "operationId": "listEarnedLeave",
        "parameters": [
          {
            "in": "path",
            "name": "earnedLeaveId",
            "required": true,
            "description": "Need earned leave id to list details",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to list details of individual employee",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/earned-leave-history/{employeeId}/{year}/{month}": {
      "get": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "Earned Leave History list",
        "operationId": "listEarnedLeaveHistroy",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need earned leave id to list history",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "description": "Need year to filter the earned leave history for particular year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "description": "Need month to filter the earned leave history for particular month",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee/delete-earned-leave/{employeeId}/{year}/{month}/{leaveCount}": {
      "delete": {
        "tags": [
          "Earned Leave"
        ],
        "summary": "Delete Earned Leave",
        "operationId": "deleteEarnedLeave",
        "parameters": [
          {
            "in": "path",
            "name": "employeeId",
            "required": true,
            "description": "Need employee id to delete earned leave",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": true,
            "description": "Need year to delete earned leave for particular year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "description": "Need month to delete earned leave for particular month",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "leaveCount",
            "required": true,
            "description": "Need leave count to update earnedLeaveBalance",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/excel-compnay-details/{companyId}/{startDate}/{endDate}/{gradeRuleId}": {
      "get": {
        "tags": [
          "Salary Slip"
        ],
        "summary": "List Company Details in Excel",
        "operationId": "listExcelCompanyDetails",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Company ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "startDate",
            "required": true,
            "description": "Start Date",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "endDate",
            "required": true,
            "description": "End Date",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "gradeRuleId",
            "required": true,
            "description": "Grade Rule ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/company/upload-logo/{companyId}/{type}/{isCompanyLogo}": {
      "post": {
        "tags": [
          "Company Settings"
        ],
        "summary": "Upload Company Logo",
        "operationId": "uploadCompanyLogo",
        "parameters": [
          {
            "in": "path",
            "name": "companyId",
            "required": true,
            "description": "Need company Id to add company Logo",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "description": "Differentiate the type of logo(@params:'Add CompanyLogo','Update CompanyLogo','Update ReportLogo')",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "isCompanyLogo",
            "required": true,
            "description": "Need to set default logo in case of false",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyLogo": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "companyLogo"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "add_parent_job_category": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "categoryName": {
                  "description": "Category Name",
                  "type": "string"
                },
                "isActive": {
                  "description": "Is Active",
                  "type": "boolean"
                }
              },
              "required": [
                "categoryName"
              ]
            }
          }
        }
      },
      "parent_user_update_company": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the company",
                  "type": "string"
                },
                "address": {
                  "description": "Address of the company",
                  "type": "string"
                },
                "officialNumber": {
                  "description": "Official Number of the company",
                  "type": "string"
                },
                "domicile": {
                  "type": "string"
                },
                "phone": {
                  "description": "Enter phone number of the company",
                  "type": "string"
                },
                "fax": {
                  "description": "Fax number of the company",
                  "type": "string"
                },
                "gstNumber": {
                  "description": "GSTNo",
                  "type": "string"
                },
                "currency": {
                  "description": "Home Currency",
                  "type": "string",
                  "enum": [
                    "USD",
                    "INR"
                  ]
                },
                "logoUrl": {
                  "description": "Company Logo",
                  "type": "string"
                },
                "newLogoUrl": {
                  "description": "New Company Logo (.jpg)",
                  "type": "string"
                },
                "deleteLogo": {
                  "description": "Delete Company Logo",
                  "type": "boolean"
                },
                "timeZone": {
                  "description": "Time Zone on Reports",
                  "type": "string"
                },
                "reportLogo": {
                  "description": "Company Logo on Reports",
                  "type": "string"
                },
                "autoIncreaseDoc": {
                  "description": "Auto Increase of Document References",
                  "type": "string"
                },
                "nameInList": {
                  "description": "Short Name and Name in List",
                  "type": "boolean"
                },
                "printDialog": {
                  "description": "Open Print Dialog Direct on Reports",
                  "type": "boolean"
                },
                "searchItemList": {
                  "description": "Search Item List",
                  "type": "boolean"
                },
                "searchCustomerList": {
                  "description": "Search Customer List",
                  "type": "boolean"
                },
                "searchSupplierList": {
                  "description": "Search Supplier List",
                  "type": "boolean"
                },
                "epfNumber": {
                  "description": "EPF Number",
                  "type": "string"
                },
                "panNumber": {
                  "description": "PAN Number",
                  "type": "string"
                },
                "tanNumber": {
                  "description": "TAN Number",
                  "type": "string"
                },
                "tdsCircle": {
                  "description": "TDS Circle/ AO Code",
                  "type": "string"
                },
                "status": {
                  "description": "Company Status",
                  "type": "string",
                  "enum": [
                    "Active",
                    "Inactive"
                  ]
                },
                "deductionCycle": {
                  "description": "Deduction Cycle",
                  "type": "string",
                  "enum": [
                    "Monthly",
                    "Quarterly",
                    "Yearly"
                  ]
                },
                "loginTimeOut": {
                  "description": "Login Timeout",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parent_add_company": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the company",
                  "type": "string"
                },
                "address": {
                  "description": "Address of the company",
                  "type": "string"
                },
                "email": {
                  "description": "Email of the company",
                  "type": "string"
                },
                "officialNumber": {
                  "description": "Official Number of the company",
                  "type": "string"
                },
                "domicile": {
                  "type": "string"
                },
                "phone": {
                  "description": "Enter phone number of the company",
                  "type": "string"
                },
                "fax": {
                  "description": "Fax number of the company",
                  "type": "string"
                },
                "outGoingMails": {
                  "description": "BCC Address for all outgoing mails",
                  "type": "string"
                },
                "gstNumber": {
                  "description": "GSTNo",
                  "type": "string"
                },
                "currency": {
                  "description": "Home Currency",
                  "type": "string",
                  "enum": [
                    "USD",
                    "INR"
                  ]
                },
                "logoUrl": {
                  "description": "Company Logo",
                  "type": "string"
                },
                "newLogoUrl": {
                  "description": "New Company Logo (.jpg)",
                  "type": "string"
                },
                "deleteLogo": {
                  "description": "Delete Company Logo",
                  "type": "boolean"
                },
                "timeZone": {
                  "description": "Time Zone on Reports",
                  "type": "string"
                },
                "reportLogo": {
                  "description": "Company Logo on Reports",
                  "type": "string"
                },
                "autoIncreaseDoc": {
                  "description": "Auto Increase of Document References",
                  "type": "string"
                },
                "nameInList": {
                  "description": "Short Name and Name in List",
                  "type": "boolean"
                },
                "printDialog": {
                  "description": "Open Print Dialog Direct on Reports",
                  "type": "boolean"
                },
                "searchItemList": {
                  "description": "Search Item List",
                  "type": "boolean"
                },
                "searchCustomerList": {
                  "description": "Search Customer List",
                  "type": "boolean"
                },
                "searchSupplierList": {
                  "description": "Search Supplier List",
                  "type": "boolean"
                },
                "epfNumber": {
                  "description": "EPF Number",
                  "type": "string"
                },
                "panNumber": {
                  "description": "PAN Number",
                  "type": "string"
                },
                "tanNumber": {
                  "description": "TAN Number",
                  "type": "string"
                },
                "tdsCircle": {
                  "description": "TDS Circle/ AO Code",
                  "type": "string"
                },
                "status": {
                  "description": "Company Status",
                  "type": "string",
                  "enum": [
                    "Active",
                    "Inactive"
                  ]
                },
                "deductionCycle": {
                  "description": "Deduction Cycle",
                  "type": "string",
                  "enum": [
                    "Monthly",
                    "Quarterly",
                    "Yearly"
                  ]
                },
                "loginTimeOut": {
                  "description": "Login Timeout",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "address",
                "email",
                "officialNumber"
              ]
            }
          }
        }
      },
      "company_add_payment_heads": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Addition",
                    "Deduction"
                  ]
                },
                "parentId": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "type"
              ]
            }
          }
        }
      },
      "company_update_payment_heads": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Addition",
                    "Deduction"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Members": {
        "type": "object",
        "properties": {
          "family": {
            "type": "object",
            "properties": {
              "members": {
                "type": "object",
                "properties": {
                  "relation": {
                    "type": "string",
                    "enum": [
                      "Mother",
                      "Father",
                      "Brother",
                      "Sister",
                      "Uncle",
                      "Aunt",
                      "Spouse",
                      "Son",
                      "Daughter"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "age": {
                    "type": "string"
                  },
                  "occupation": {
                    "type": "string"
                  },
                  "education": {
                    "type": "string"
                  },
                  "income": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "familyType": {
            "type": "string",
            "enum": [
              "Joint",
              "Nuclear Family"
            ]
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "address": {
            "type": "object",
            "properties": {
              "doorNum": {
                "type": "string"
              },
              "streetName1": {
                "type": "string"
              },
              "streetName2": {
                "type": "string"
              },
              "landmark": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "district": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "addressType": {
                "type": "string"
              }
            }
          }
        }
      },
      "EarnedLeave": {
        "type": "object",
        "properties": {
          "earnedLeave": {
            "type": "object",
            "properties": {
              "month": {
                "type": "string"
              },
              "year": {
                "type": "string"
              },
              "leaveCount": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              }
            }
          }
        }
      },
      "EducationalDetails": {
        "type": "object",
        "properties": {
          "educationalDetails": {
            "type": "object",
            "properties": {
              "courseName": {
                "type": "string"
              },
              "instituteName": {
                "type": "string"
              },
              "passOutYear": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "scoredPercent": {
                "type": "string"
              }
            }
          }
        }
      },
      "WorkExperiences": {
        "type": "object",
        "properties": {
          "workExperiences": {
            "type": "object",
            "properties": {
              "companyName": {
                "type": "string"
              },
              "designation": {
                "type": "string"
              },
              "experienceYears": {
                "type": "string"
              },
              "jobDescription": {
                "type": "string"
              },
              "relivingReason": {
                "type": "string"
              },
              "relivingIs": {
                "type": "string",
                "enum": [
                  "Formal",
                  "Informal"
                ]
              },
              "remarks": {
                "type": "string"
              }
            }
          }
        }
      },
      "IdentityProofs": {
        "type": "object",
        "properties": {
          "identityProofs": {
            "type": "object",
            "properties": {
              "identityName": {
                "type": "string"
              },
              "identityNum": {
                "type": "string"
              },
              "authorityName": {
                "type": "string"
              },
              "issuePlace": {
                "type": "string"
              },
              "expiryDate": {
                "type": "string"
              },
              "remarks": {
                "type": "string"
              }
            }
          }
        }
      },
      "LanguageSkills": {
        "type": "object",
        "properties": {
          "languageSkills": {
            "type": "object",
            "properties": {
              "toSpeak": {
                "type": "string"
              },
              "toRead": {
                "type": "string"
              },
              "toWrite": {
                "type": "string"
              }
            }
          }
        }
      },
      "Skills": {
        "type": "object",
        "properties": {
          "skills": {
            "type": "object",
            "properties": {
              "skillId": {
                "type": "string"
              },
              "experienceYears": {
                "type": "string"
              },
              "startDate": {
                "type": "object",
                "properties": {
                  "month": {
                    "type": "string"
                  },
                  "year": {
                    "type": "string"
                  }
                }
              },
              "endDate": {
                "type": "object",
                "properties": {
                  "month": {
                    "type": "string"
                  },
                  "year": {
                    "type": "string"
                  }
                }
              },
              "remarks": {
                "type": "string"
              }
            }
          }
        }
      },
      "Hobbies": {
        "type": "object",
        "properties": {
          "hobbies": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "timeBound": {
                "type": "string",
                "enum": [
                  "Frequent",
                  "Often",
                  "Occasional",
                  "Rare"
                ]
              },
              "remarks": {
                "type": "string"
              }
            }
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "dob": {
            "type": "string"
          },
          "jobProfileId": {
            "type": "string"
          },
          "esiPfJoiningDate": {
            "type": "string"
          },
          "joiningDate": {
            "type": "string"
          },
          "relivingDate": {
            "type": "string"
          },
          "resignDate": {
            "type": "string"
          },
          "resignReason": {
            "type": "string"
          },
          "settlement": {
            "type": "object",
            "properties": {
              "finalAmount": {
                "type": "string"
              },
              "date": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "refNum": {
                "type": "string"
              },
              "remarks": {
                "type": "string"
              }
            }
          },
          "contactDetails": {
            "type": "object",
            "properties": {
              "personal": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "landLineNum": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              },
              "official": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "landLineNum": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "officialEmailAsLoginEmail": {
            "type": "boolean"
          }
        },
        "required": [
          "departmentId",
          "branchId",
          "name",
          "companyId"
        ]
      },
      "EmployeeUpdate": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "dob": {
            "type": "string"
          },
          "jobProfileId": {
            "type": "string"
          },
          "esiPfJoiningDate": {
            "type": "string"
          },
          "joiningDate": {
            "type": "string"
          },
          "relivingDate": {
            "type": "string"
          },
          "resignDate": {
            "type": "string"
          },
          "resignReason": {
            "type": "string"
          },
          "settlement": {
            "type": "object",
            "properties": {
              "finalAmount": {
                "type": "string"
              },
              "date": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "refNum": {
                "type": "string"
              },
              "remarks": {
                "type": "string"
              }
            }
          },
          "contactDetails": {
            "type": "object",
            "properties": {
              "official": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "landLineNum": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "officialEmailAsLoginEmail": {
            "type": "boolean"
          }
        },
        "required": [
          "departmentId",
          "branchId",
          "name",
          "companyId"
        ]
      },
      "GradeRulePaymentHead": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "paymentHead": {
            "type": "object",
            "properties": {
              "paymentHeadId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Fixed",
                  "Percent"
                ]
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "paymentHeadId",
              "type",
              "value"
            ]
          }
        },
        "required": [
          "title"
        ]
      },
      "PaymentHead": {
        "type": "object",
        "properties": {
          "paymentHead": {
            "type": "object",
            "properties": {
              "paymentHeadId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Fixed",
                  "Percent"
                ]
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "paymentHeadId",
              "type",
              "value"
            ]
          }
        }
      },
      "UpdateGradeRulePaymentHead": {
        "type": "object",
        "properties": {
          "paymentHead": {
            "type": "object",
            "properties": {
              "paymentHeadId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Fixed",
                  "Percent"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "Leave": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "leaveTypeId": {
            "type": "string"
          },
          "leaveFor": {
            "type": "string",
            "enum": [
              "First Half",
              "Second Half",
              "Full Day"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending"
            ]
          }
        }
      },
      "Comments": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "EmployeePayrollSettings": {
        "type": "object",
        "properties": {
          "payroll": {
            "type": "object",
            "properties": {
              "ctc": {
                "type": "string"
              },
              "ctcEffectiveFromDate": {
                "type": "string"
              },
              "ctcEffectiveToDate": {
                "type": "string"
              },
              "paidLeaveBalance": {
                "type": "string"
              },
              "earnedLeaveBalance": {
                "type": "string"
              },
              "gradeRule": {
                "type": "string"
              },
              "basicPay": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserPermissions": {
        "type": "object",
        "properties": {
          "userPermissionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EmployeeSkills": {
        "type": "object",
        "properties": {
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skills"
            }
          }
        }
      },
      "EmployeeFamily": {
        "type": "object",
        "properties": {
          "family": {
            "type": "object",
            "properties": {
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Members"
                }
              }
            }
          }
        }
      },
      "EmployeeEducationalDetails": {
        "type": "object",
        "properties": {
          "educationalDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationalDetails"
            }
          }
        }
      },
      "EmployeeWorkExperiences": {
        "type": "object",
        "properties": {
          "workExperiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperiences"
            }
          }
        }
      },
      "EmployeeIdentityProofs": {
        "type": "object",
        "properties": {
          "identityProofs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProofs"
            }
          }
        }
      },
      "EmployeeBankDetails": {
        "type": "object",
        "properties": {
          "bankDetails": {
            "type": "object",
            "properties": {
              "official": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountNum": {
                    "type": "string"
                  },
                  "accountPlace": {
                    "type": "string"
                  },
                  "accountType": {
                    "type": "string"
                  },
                  "debitCardNum": {
                    "type": "string"
                  },
                  "debitCardType": {
                    "type": "string"
                  },
                  "remarks": {
                    "type": "string"
                  }
                }
              },
              "personal": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountNum": {
                    "type": "string"
                  },
                  "accountPlace": {
                    "type": "string"
                  },
                  "accountType": {
                    "type": "string"
                  },
                  "debitCardNum": {
                    "type": "string"
                  },
                  "debitCardType": {
                    "type": "string"
                  },
                  "remarks": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "EmployeeLanguageSkills": {
        "type": "object",
        "properties": {
          "languageSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageSkills"
            }
          }
        }
      },
      "EmployeeHoobies": {
        "type": "object",
        "properties": {
          "hobbies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Hobbies"
            }
          }
        }
      },
      "EmployeeParentIds": {
        "type": "object",
        "properties": {
          "parentIdsData": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string"
              },
              "parentUserId": {
                "type": "string"
              }
            }
          }
        }
      },
      "EmployeeBio": {
        "type": "object",
        "properties": {
          "bio": {
            "type": "object",
            "properties": {
              "height": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "moleIdentification": {
                "type": "string"
              },
              "bloodGroup": {
                "type": "string"
              },
              "eyePower": {
                "type": "string"
              },
              "handicapped": {
                "type": "boolean"
              },
              "handicappedPercent": {
                "type": "string"
              },
              "multipleHandicapped": {
                "type": "boolean"
              },
              "multipleHandicappedPercent": {
                "type": "string"
              },
              "illness": {
                "type": "object",
                "properties": {
                  "physical": {
                    "type": "object",
                    "properties": {
                      "physicalIllnessName": {
                        "type": "string"
                      },
                      "treatmentName": {
                        "type": "string"
                      },
                      "hospitalName": {
                        "type": "string"
                      },
                      "treatmentDuration": {
                        "type": "string"
                      },
                      "illnessStatus": {
                        "type": "string"
                      }
                    }
                  },
                  "mental": {
                    "type": "object",
                    "properties": {
                      "mentalIllnessName": {
                        "type": "string"
                      },
                      "treatmentName": {
                        "type": "string"
                      },
                      "hospitalName": {
                        "type": "string"
                      },
                      "treatmentDuration": {
                        "type": "string"
                      },
                      "illnessStatus": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
