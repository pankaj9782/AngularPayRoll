{"version":3,"sources":["./src/app/pages/employee-wizard/employee-list/employee-list.component.ts","./src/app/pages/employee-wizard/employee-list/employee-list.component.html","./src/app/pages/employee-wizard/employee-wizard.module.ts","./src/app/pages/employee-wizard/employee-wizard-routing.module.ts","./src/app/pages/employee-wizard/employee-profile/employee-profile.component.ts","./src/app/pages/employee-wizard/employee-profile/employee-profile.component.html","./src/app/pages/employee-wizard/employee-wizard.component.ts","./src/app/pages/employee-wizard/employee-wizard.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACuB;AAGlD;AACmC;;;;;;;;;ICMtD,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAFiE,8FAAwB;IAChG,0DACF;IADE,6FACF;;;;IA+FQ,wEAEE;IADA,qbAA6C;IAC7C,mEAAmC;IAAA,uDAAwB;IAAA,4DAAI;;;IAA5B,0DAAwB;IAAxB,oGAAwB;;;;IAC7D,wEAEE;IADA,qbAA6C;IAC7C,mEAAmC;IAAA,uDAAwB;IAAA,4DAAI;;;IAA5B,0DAAwB;IAAxB,oGAAwB;;;;IAjDvE,wEACE;IAAA,qEACE;IAIA,qEACE;IAAA,0EACE;IAAA,qEACA;IAAA,0EACE;IAAA,gFAEA;IADE,6XAAwC;IAD1C,4DAEA;IAAA,4EACF;IAD4D,mSAAS,YAAY,IAAC;IAAhF,4DACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAK;IACL,qEAAK;IAAA,wDAAgB;IAAA,4DAAK;IAC1B,sEAAK;IAAA,wDAAuB;IAAA,4DAAK;IACjC,sEAAK;IAAA,wDAAqB;IAAA,4DAAK;IAC/B,sEAAK;IAAA,wDAAgB;IAAA,4DAAK;IAC1B,sEAAK;IAAA,wDAAc;IAAA,4DAAK;IACxB,sEACE;IAAA,2EACE;IAAA,yEAC6F;IADxC,gUAA2B;IACa,oEAC5D;IAAC,4DAAI;IACtC,2EAEE;IAAA,yEACkD;IAAA,oEACZ;IAAA,wEAAY;IAAA,4DAAI;IAEtD,yEACoE;IAA3C,mWAA2B,aAAa,KAAE;IAAC,oEAC1C;IAAA,8EAAkB;IAAA,4DAAI;IAEhD,yEAC+D;IAAtC,mWAA2B,QAAQ,KAAE;IAAC,oEAC9B;IAAA,mFAAuB;IAAA,4DAAI;IAE5D,yEACiE;IAAxC,mWAA2B,UAAU,KAAE;IAAC,oEAC/B;IAAA,qFAAyB;IAAA,4DAAI;IAE/D,yHAEE;IACF,yHAEE;IACJ,4DAAM;IACR,4DAAM;IACR,4DAAK;IACP,4DAAK;IArDP,4DACE;;;;IAOW,0DAAmB;IAAnB,6IAAmB;IAQvB,0DAAgB;IAAhB,yFAAgB;IAChB,0DAAuB;IAAvB,kGAAuB;IACvB,0DAAqB;IAArB,8FAAqB;IACrB,0DAAgB;IAAhB,0FAAgB;IAChB,0DAAc;IAAd,uFAAc;IASX,0DAA+C;IAA/C,4HAA+C;IAe9C,2DAAoC;IAApC,oGAAoC;IAGpC,0DAAkC;IAAlC,kGAAkC;;;IAWvD,sEACE;IAAA,yEAAgC;IAAA,uDAA2B;IAAA,4DAAK;IAClE,4DAAM;;;IAD4B,0DAA2B;IAA3B,6FAA2B;;;IAevD,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,kFAAgB;;;IAK1B,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,kFAAgB;;;IAWpB,0EAGE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IALF,sEACE;IAAA,yHAGE;IAEJ,4DAAM;;;;IAJF,0DAAuJ;IAAvJ,0OAAuJ;;;IAYzJ,0EAGE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IALF,sEACE;IAAA,yHAGE;IAEJ,4DAAM;;;;IAJF,0DAA2L;IAA3L,8QAA2L;;;IAoCnM,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,kFAAgB;;;IAK1B,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,kFAAgB;;;IAYpB,6EAEE;IAAA,uDACF;IAAA,4DAAS;;;IAH6D,mGAA+B;IACnG,+FAA2B;IAC3B,0DACF;IADE,8FACF;;;IAGA,0EAGE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,kGACF;;;IALF,sEACE;IAAA,0HAGE;IAEJ,4DAAM;;;;IAJF,0DAAoM;IAApM,0RAAoM;;;IAmC5M,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,mFAAgB;;;IAK1B,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,mFAAgB;;;;IAkBd,wEACE;IAAA,qEACE;IAAA,qEAAK;IAAA,uDAA2B;IAAA,4DAAK;IACrC,qEACE;IAAA,6EACwB;IADwB,yXAAoC;IAC5D,mEAA2B;IACnD,4DAAS;IACX,4DAAK;IACP,4DAAK;IAEP,4DAAQ;;;IARC,0DAA2B;IAA3B,sGAA2B;;ADvRjD,MAAM,qBAAqB;IAwBhC,YAAmB,EAAe,EACxB,GAAoB,EACrB,MAAc,EACb,MAAc,EACd,KAAqB,EACrB,eAA2B,EAC3B,IAAsB;QANb,OAAE,GAAF,EAAE,CAAa;QACxB,QAAG,GAAH,GAAG,CAAiB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAY;QAC3B,SAAI,GAAJ,IAAI,CAAkB;QA5BhC,iBAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,0BAAqB,GAAG,EAAE,CAAC;QAO3B,sBAAiB,GAAW,CAAC,CAAC;QAC9B,sBAAiB,GAAW,EAAE,CAAC;QAI/B,WAAM,GAAG,QAAQ,CAAC;QAClB,sBAAiB,GAAG,kBAAkB,CAAC;QACvC,iBAAY,GAAG,UAAU,CAAC;QAG1B,uBAAkB,GAAG,EAAE,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QAkLrB,yCAAyC;QACzC,2BAAsB,GAAG;YACvB,UAAU,EAAE;gBACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACrD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,6BAA6B,IAAI,CAAC,iBAAiB,kBAAkB,EAAE;gBACrG,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,uCAAuC,IAAI,CAAC,iBAAiB,aAAa,EAAE;gBAC1G,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,wGAAwG,EAAE;aACvI;YACD,sBAAsB,EAAE;gBACtB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,8BAA8B,EAAE;gBAC7D,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAE;aACvD;SACF;QA6BH,uBAAkB,GAAG;YACnB,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC7D;SACF;IArNO,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;IAErD,CAAC;IAED,cAAc;QACZ,IAAI;YACF,IAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAC;gBACtD,QAAQ,CAAC,cAAc,CAAC,0BAA0B,CAAsB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACrG;iBAAM;gBACJ,QAAQ,CAAC,cAAc,CAAC,0BAA0B,CAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACxG;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI;YACF,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACnD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;oBAC7B,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;wBACxB,IAAG,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAC;4BACzB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAqB,CAAC,KAAK,GAAG,UAAU,CAAC;4BACjF,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAgB,CAAC,KAAK,EAAE,CAAC;yBAChE;6BAAM,IAAG,IAAI,CAAC,MAAM,KAAK,UAAU,EAAC;4BACnC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;gCACzC,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oCAC3B,IAAG,IAAI,CAAC,IAAI,KAAK,CAAC,EAAC;wCACjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yCAAyC,CAAC,CAAC;qCACtE;yCAAM;wCACL,IAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC;wCAC7C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;wCACvB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;qCAC9B;iCACF;4BACH,CAAC,CAAC;yBACH;qBACF;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC;wBACpC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;qBACjC;iBACJ;YACH,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI;YACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;oBACjD,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,+DAA+D,CAAC,CAAC,iEAAiE;iBACtJ,CAAC,CAAC;gBACH,oBAAoB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC7D,yDAAU,CAAC,QAAQ;oBACnB,+EAAe,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBACnD,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;QACD,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,QAAQ,CAAC,KAAa,EAAE,IAAI;QAC1B,IAAI;YACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAG,IAAI,KAAK,QAAQ,EAAC;gBACnB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC1B,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAC;oBACjC,UAAU,CAAC,GAAE,EAAE;wBACd,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAgB,CAAC,KAAK,EAAE,CAAC;oBAClE,CAAC,EAAC,CAAC,CAAC;oBACJ,kDAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;iBACnC;aACF;iBAAM,IAAG,IAAI,KAAK,aAAa,EAAC;gBAC/B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;aAChC;iBAAM,IAAG,IAAI,KAAK,UAAU,EAAC;gBAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IAEH,CAAC;IAED,mBAAmB;QACjB,IAAI;YACF,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACjF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,CAAC;4BACzF,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BACzB,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAgB,CAAC,KAAK,EAAE,CAAC;wBACxE,CAAC,EAAE,IAAI,CAAC;qBACT;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BACzB,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAgB,CAAC,KAAK,EAAE,CAAC;wBACxE,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,2CAA2C;IAC3C,kBAAkB;QACf,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;QACxE,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAsB,CAAC,KAAK,GAAG,QAAQ,CAAC;QACjF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,8CAA8C;IAC9C,mBAAmB;QACjB,IAAG;YAED,IAAI,UAAU,GAAI,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAsB,CAAC,KAAK,CAAC;YACrF,IAAI,MAAM,GAAI,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAsB,CAAC,KAAK,CAAC;YAEnF,IAAG,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;gBACxB,MAAM,GAAG,EAAE,CAAC;gBACZ,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;aACxC;YACD,IAAG,MAAM,KAAK,QAAQ,EAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;gBAC/B,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;gBAC5C,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;iBAAM,IAAG,MAAM,KAAK,UAAU,EAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;gBAC9C,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;SAEF;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IAEH,CAAC;IAgBD,kBAAkB;IAClB,SAAS;QACP,IAAG;YACD,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;gBACrC,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;iBAChC;YACH,CAAC,CAAC;SACH;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAEH,sBAAsB;IACtB,YAAY;QACV,IAAG;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAChC,aAAa,EAAE,IAAI,wDAAS,CAAC;oBAC3B,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC3B,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;iBACtD,CAAC;aACH,CAAC;SACH;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAQD,4BAA4B;IAC5B,UAAU,CAAC,IAAI,EAAC,IAAI;QACpB,IAAG;YACD,IAAG,IAAI,KAAK,QAAQ,EAAC;gBACnB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACpE;SACF;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACD,CAAC;IAED,wBAAwB;IACxB,QAAQ;QACN,IAAG;YACC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;gBAC3E,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,CAAC;wBACxF,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAgB,CAAC,KAAK,EAAE,CAAC;wBAClE,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,EAAE,IAAI,CAAC;iBACT;qBAAM,IAAG,IAAI,CAAC,MAAM,KAAK,OAAO,EAAC;oBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC/B,UAAU,CAAC,GAAE,EAAE;wBACZ,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAgB,CAAC,KAAK,EAAE,CAAC;wBAClE,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,EAAC,IAAI,CAAC;iBACR;YACH,CAAC,CAAC;SACL;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,yBAAyB;IACzB,kBAAkB;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAG;YACD,IAAG,IAAI,KAAK,QAAQ,EAAC;gBACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAC3B;iBAAM,IAAG,IAAI,KAAK,aAAa,EAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;aAC9B;SACF;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,cAAc;IACd,UAAU,CAAC,IAAI;QACb,IAAG;YACD,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;gBAC1C,WAAW,EAAE;oBACX,aAAa,EAAE,iBAAiB;oBAChC,YAAY,EAAE,gBAAgB;iBAC/B;gBACD,cAAc,EAAE,KAAK;aACtB,CAAC;YAEF,wBAAwB,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,iCAAiC;gBACvC,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,iBAAiB,EAAE,KAAK;gBACxB,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,IAAI;gBACpB,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;wBAC1D,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;4BAC/B,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;4BACD,UAAU,CAAC,GAAE,EAAE;gCACZ,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAiB,CAAC,KAAK,EAAE,CAAC;4BAC7E,CAAC,EAAC,CAAC,CAAC;yBACD;oBACL,CAAC,CAAC;iBACD;qBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;oBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,4BAA4B,EAC5B,OAAO,CACR;iBACF;YACH,CAAC,CAAC;SACH;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,kBAAkB;IAClB,cAAc;QACZ,IAAG;YACD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;gBACzD,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAC;wBACvC,UAAU,CAAC,GAAE,EAAE;4BACZ,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAiB,CAAC,KAAK,EAAE,CAAC;wBAC7E,CAAC,EAAC,CAAC,CAAC;wBACJ,kDAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;qBAClC;yBAAM;wBACL,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;qBACvD;iBACF;YACH,CAAC,CAAC;SACH;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,gBAAgB;IAChB,YAAY;QACV,IAAG;YACA,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;SAC1E;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,uBAAuB;IACvB,qBAAqB,CAAC,UAAU;QAC9B,IAAG;YACD,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;gBACxD,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACnC;YACH,CAAC,CAAC;SACH;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,yBAAyB,CAAC,KAAa;QACrC,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;YAC1C,WAAW,EAAE;gBACX,aAAa,EAAE,iBAAiB;gBAChC,YAAY,EAAE,gBAAgB;aAC/B;YACD,cAAc,EAAE,KAAK;SACtB,CAAC;QACF,wBAAwB,CAAC,IAAI,CAAC;YAC5B,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,eAAe,IAAI,CAAC,YAAY,sBAAsB;YAC5D,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,KAAK,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;oBACvE,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;wBAC/B,wBAAwB,CAAC,IAAI,CAC3B,kBAAkB,EAClB,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;wBACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBACxB;gBACL,CAAC,CAAC;aACD;iBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;gBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,gCAAgC,EAChC,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,KAAK,EAAC,UAAU;QAC3B,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,wBAAwB;YAErE,MAAM,CAAC,MAAM,GAAG,CAAC,KAAU,EAAE,EAAE;gBAC7B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBAC3C,IAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,EAAC;wBACxC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;wBACvC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;wBAClD,MAAM;qBACP;iBACF;YACH,CAAC;YACD,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7C,aAAa;gBACb,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;oBAC1C,WAAW,EAAE;wBACX,aAAa,EAAE,iBAAiB;wBAChC,YAAY,EAAE,gBAAgB;qBAC/B;oBACD,cAAc,EAAE,KAAK;iBACtB,CAAC;gBAEF,wBAAwB,CAAC,IAAI,CAAC;oBAC5B,KAAK,EAAE,eAAe;oBACtB,IAAI,EAAE,yCAAyC;oBAC/C,IAAI,EAAE,SAAS;oBACf,gBAAgB,EAAE,IAAI;oBACtB,iBAAiB,EAAE,KAAK;oBACxB,gBAAgB,EAAE,IAAI;oBACtB,cAAc,EAAE,IAAI;oBACpB,iBAAiB,EAAE,KAAK;iBACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;wBAClB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAC,UAAU,EAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;4BAC/F,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;gCAC3B,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;6BACF;wBACH,CAAC,CAAC;qBACD;yBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;wBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,0BAA0B,EAC1B,OAAO,CACR;wBACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;4BAC5C,IAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,EAAC;gCACxC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gCACvC,MAAM;6BACP;yBACF;qBACF;gBACH,CAAC,CAAC;aAEH;SACF;IACH,CAAC;IAED,qBAAqB;IACrB,eAAe;QACb,IAAI;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC9B,MAAM,EAAE,CAAC,EAAE,CAAC;aACb,CAAC;SACH;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;IAED,kCAAkC;IAClC,cAAc;QACZ,IAAI;YACF,IAAI,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAqB,CAAC,KAAK,CAAC,MAAM,KAAI,CAAC,EAAC;gBAChF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;;0FAjhBY,qBAAqB;qGAArB,qBAAqB;QCflC,yEACE;QAAA,yEACE;QAAA,wEAAwB;QAAA,wEAAa;QAAA,4DAAK;QAC5C,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAAsC;QAAA,oEAAG;QAAA,wDAAuB;QAAA,4DAAI;QAAA,4DAAQ;QAC5E,6EACE;QADsE,gJAAU,oBAAgB,IAAC;QACjG,6EAA4E;QAAA,2EAAe;QAAA,4DAAS;QACpG,0HACE;QAEJ,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,4EAAsC;QAAA,qEAAG;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAQ;QAC5D,8EAEE;QAFwE,gJAAU,kBAAc,IAAC;QAEjG,8EAAyE;QAAA,kEAAM;QAAA,4DAAS;QACxF,8EAAkE;QAAA,oEAAQ;QAAA,4DAAS;QACrF,4DAAS;QACX,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACA;QAAA,8EAAiF;QAAhC,8IAAS,yBAAqB,IAAC;QAAC,oEAA4B;QAAA,yEAAa;QAAA,4DAAS;QACnI,8EAA+D;QAA/B,8IAAS,wBAAoB,IAAC;QAAC,oEAAoC;QAAA,wEAAY;QAAA,4DAAS;QAC1H,4DAAM;QACR,4DAAM;QAGN,2EACE;QAAA,2EACI;QAAA,yEAAuJ;QAAA,oEAAiC;QAAA,+EAAmB;QAAA,4DAAI;QACnN,4DAAM;QACR,4DAAM;QACN,4DAAM;QAOR,4DAAM;QAEN,2EACE;QAAA,0EACI;QAAA,6EACE;QAAA,6EACE;QAAA,sEACE;QAAA,sEAAK;QAAA,qEAAQ;QAAA,4DAAK;QAClB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yHACE;QAqDJ,4DAAQ;QAEZ,4DAAK;QACP,4DAAM;QACN,oHACE;QAEJ,4DAAM;QAGN,2EACE;QAAA,2EACE;QAAA,2EAEE;QACA,2EACE;QAAA,0EAAwB;QAAA,wEAAY;QAAA,4DAAK;QAE3C,4DAAM;QACN,2EACE;QAAA,gHACE;QAEJ,4DAAM;QAEN,2EACE;QAAA,gHACE;QAEJ,4DAAM;QAEN,2EACE;QAAA,4EACE;QAD8C,kJAAY,yBAAqB,IAAC;QAChF,0EACE;QAAA,4EAAsC;QAAA,qEAAG;QAAA,2EAAe;QAAA,4EAA6B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QAEzG,wEACA;QAAA,oHACE;QAMJ,4DAAM;QACN,0EACE;QAAA,6EAAsC;QAAA,qEAAG;QAAA,mFAAuB;QAAA,4EACnC;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACjD,wEAEA;QAAA,oHACE;QAMJ,4DAAM;QACN,0EACE;QACA,8EACoC;QAAA,kEAAM;QAAA,4DAAS;QACnD,8EACuB;QAAA,iEAAK;QAAA,4DAAS;QAEvC,4DAAM;QACR,4DAAO;QACT,4DAAM;QAOR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,2EAEE;QACA,2EACE;QAAA,0EAAwB;QAAA,6EAAiB;QAAA,4DAAK;QAEhD,4DAAM;QACN,2EACE;QAAA,gHACE;QAEJ,4DAAM;QAEN,4EACE;QAAA,kHACE;QAEJ,4DAAM;QAEN,4EACE;QAAA,6EACE;QADgE,mJAAY,cAAU,IAAC;QACvF,2EACE;QAAA,6EAAsC;QAAA,sEAAG;QAAA,mFAAsB;QAAA,6EAClC;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACjD,+EAEE;QADA,uJAAU,oCAA+B,QAAQ,CAAC,IAAC;QACnD,+EAA6D;QAAA,wFAA2B;QAAA,4DAAS;QACjG,4HAEE;QAEJ,4DAAS;QACT,sHACE;QAMJ,4DAAM;QACN,2EACE;QACA,+EACiC;QAAA,mEAAM;QAAA,4DAAS;QAChD,+EACuB;QAAA,kEAAK;QAAA,4DAAS;QAEvC,4DAAM;QACR,4DAAO;QACT,4DAAM;QAMR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,4EACE;QAAA,4EAEE;QACA,4EACE;QAAA,2EAAwB;QAAA,gFAAmB;QAAA,4DAAK;QAElD,4DAAM;QACN,4EACE;QAAA,kHACE;QAEJ,4DAAM;QAEN,4EACE;QAAA,kHACE;QAEJ,4DAAM;QAEN,4EACE;QAAA,2EACE;QACA,4EACE;QAAA,4EACE;QAAA,2EACE;QAAA,2EACE;QAAA,8EACE;QAAA,8EACE;QAAA,uEACE;QAAA,uEAAI;QAAA,2EAAc;QAAA,4DAAK;QACvB,uEAAK;QAAA,qEAAO;QAAA,4DAAK;QACnB,4DAAK;QACP,4DAAQ;QACR,0HACE;QAUJ,4DAAQ;QACV,4DAAM;QACR,4DAAK;QACP,4DAAM;QACR,4DAAM;QAER,4DAAM;QACN,+EACuB;QAAA,kEAAK;QAAA,4DAAS;QACvC,4DAAM;QAMR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAxT6C,2DAAuB;QAAvB,sFAAuB;QAGhC,0DAA2C;QAA3C,2FAA2C;QAUzE,0DAAyB;QAAzB,sFAAyB;QAiBxB,2DAAmE;QAAnE,2HAAmE;QA0B/D,2DAAiC;QAAjC,qFAAiC;QA0D3C,0DAAyC;QAAzC,uGAAyC;QAgBV,0DAAoB;QAApB,kFAAoB;QAMnB,0DAAmB;QAAnB,iFAAmB;QAMhC,0DAA6B;QAA7B,0FAA6B;QAKtC,0DAA0D;QAA1D,wGAA0D;QAa1D,0DAAsE;QAAtE,oHAAsE;QAWzE,0DAAiC;QAAjC,gGAAiC;QA2BT,2DAAoB;QAApB,kFAAoB;QAMnB,0DAAmB;QAAnB,iFAAmB;QAMhC,0DAA+C;QAA/C,4GAA+C;QAO7B,2DAAuC;QAAvC,sFAAuC;QAKlE,0DAA0D;QAA1D,wGAA0D;QAW7D,0DAA8B;QAA9B,6FAA8B;QA0BN,2DAAoB;QAApB,kFAAoB;QAMnB,0DAAmB;QAAnB,iFAAmB;QAmB/B,2DAAgD;QAAhD,8FAAgD;;6FDrR9D,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACmB;AACI;AACmB;AACV;AACjB;AACL;AACD;AACwB;;AAiBvE,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,mBAHrB,CAAC,0EAAe,EAAC,sEAAS,CAAC,YAR5B;YACP,4DAAY;YACZ,4DAAY;YACZ,2FAA2B;YAC3B,kEAAmB;YACnB,0DAAW;YACX,qEAAgB;SACjB;mIAIU,oBAAoB,mBAZhB,kFAAuB,EAAE,qGAAwB,EAAE,6FAAqB,aAErF,4DAAY;QACZ,4DAAY;QACZ,2FAA2B;QAC3B,kEAAmB;QACnB,0DAAW;QACX,qEAAgB;6FAKP,oBAAoB;cAblC,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,kFAAuB,EAAE,qGAAwB,EAAE,6FAAqB,CAAC;gBACxF,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,2FAA2B;oBAC3B,kEAAmB;oBACnB,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,SAAS,EAAC,CAAC,0EAAe,EAAC,sEAAS,CAAC;aACtC;;;;;;;;;;;;;;ACzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACQ;AACE;AACa;AACmB;AACT;;;AAEhF,MAAM,KAAK,GAAY;IACnB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAG,kFAAuB;QACnC,WAAW,EAAC,CAAC,sEAAS,CAAC;QACvB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAC,kBAAkB;gBACvB,SAAS,EAAC,qGAAwB;aACnC;YACD;gBACE,IAAI,EAAC,8BAA8B;gBACnC,SAAS,EAAC,qGAAwB;aACnC;YACD;gBACE,IAAI,EAAC,eAAe;gBACpB,SAAS,EAAC,4FAAqB;aAChC;YACD;gBACE,IAAI,EAAC,EAAE;gBACP,UAAU,EAAC,eAAe;gBAC1B,SAAS,EAAC,MAAM;aACjB;SACF;KACF;CACF,CAAC;AAUK,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,kBAN7B;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;SAC7B;mIAGU,2BAA2B,cALpC,4DAAY;6FAKH,2BAA2B;cARzC,sDAAQ;eAAC;gBACN,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;iBAC7B;aACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCwF;AACV;AAIlD;;;;;;;;;;;;;ICAvB,wEACI;IAAA,wEAAyG;IAA5C,2TAAuB;IAAqB,uEAAY;IAAA,4DAAI;IAC7H,4DAAK;;;;IACL,wEACI;IAAA,wEAA2H;IAA3E,2TAAuB;IAAoD,kEAAO;IAAA,4DAAI;IAC1I,4DAAK;;;;IACL,wEACI;IAAA,wEAA4I;IAAtG,oUAAgC;IAAsE,4EAAiB;IAAA,4DAAI;IACrK,4DAAK;;;;IACL,wEACI;IAAA,wEAAwI;IAAlG,oUAAgC;IAAkE,0EACpI;IAAA,4DAAI;IACZ,4DAAK;;;;IACL,wEACI;IAAA,wEAAyH;IAAnF,4TAAuB;IAA4D,uEAAY;IAAA,4DAAI;IAC7I,4DAAK;;;;IACL,wEACI;IAAA,wEAAgI;IAAnE,6TAAwB;IAA2C,0EAAe;IAAA,4DAAI;IACvJ,4DAAK;;;IACL,wEACI;IAAA,wEAA2F;IAAA,yEAAc;IAAA,4DAAI;IACjH,4DAAK;;;;IACL,wEACI;IAAA,wEAA0H;IAAvD,iUAA4B;IAA2B,yEAAc;IAAA,4DAAI;IAChJ,4DAAK;;;;IACL,wEACI;IAAA,wEAAmI;IAA3D,gUAA2B;IAAgC,2EAAgB;IAAA,4DAAI;IAC3J,4DAAK;;;;IACL,wEACI;IAAA,wEAAmI;IAA5D,kUAA6B;IAA+B,0EAAe;IAAA,4DAAI;IAC1J,4DAAK;;;;IACL,wEACI;IAAA,wEAAqI;IAA/D,sUAAiC;IAA8B,yEAAc;IAAA,4DAAI;IAC3J,4DAAK;;;;IACL,wEACI;IAAA,wEAA2I;IAAnE,wUAAmC;IAAgC,0EAAe;IAAA,4DAAI;IAClK,4DAAK;;;IAQG,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,+EAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,mFAAgB;;;IAYxB,6EAEI;IAAA,uDACJ;IAAA,4DAAS;;;IAH6D,iGAA6B;IAC/F,6FAAyB;IACzB,0DACJ;IADI,4FACJ;;;IAGY,0EAOI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,kGACJ;;;IATJ,sEACI;IAAA,4HAOI;IAER,4DAAM;;;;IATyC,0DAMlD;IANkD,sPAMlD;;;IAcL,6EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAFuD,6FAAwB;IACpF,0DACJ;IADI,4FACJ;;;IAGY,0EAOI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IATJ,sEACI;IAAA,4HAOI;IAER,4DAAM;;;;IATyC,0DAMlD;IANkD,oPAMlD;;;IAcL,6EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAF+D,iGAA4B;IAChG,0DACJ;IADI,iGACJ;;;IAGY,0EAOI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IATJ,sEACI;IAAA,4HAOI;IAER,4DAAM;;;;IATyC,0DAMlD;IANkD,gQAMlD;;;IAgBL,6EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAF+D,iGAA4B;IAChG,0DACJ;IADI,yIACJ;;;IAGY,0EAOI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IATJ,sEACI;IAAA,4HAOI;IAER,4DAAM;;;;IATyC,0DAMlD;IANkD,gQAMlD;;;IAaW,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,4HAKI;IAER,4DAAM;;;;IAPyC,0DAIpD;IAJoD,wOAIpD;;;IAaS,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,4HAKI;IAER,4DAAM;;;;IAPyC,0DAIpD;IAJoD,qOAIpD;;;IAeC,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,6HASI;IAER,4DAAM;;;;IAXyC,0DAQpD;IARoD,mTAQpD;;;IASS,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,6HASI;IAER,4DAAM;;;;IAXyC,0DAQpD;IARoD,qUAQpD;;;IASS,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,6HASI;IAER,4DAAM;;;;IAXyC,0DAQpD;IARoD,mTAQpD;;;IAgBS,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,6HASI;IAER,4DAAM;;;;IAXyC,0DAQlD;IARkD,mTAQlD;;;IASO,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,6HASI;IAER,4DAAM;;;;IAXyC,0DAQlD;IARkD,qUAQlD;;;IASO,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,6HASI;IAER,4DAAM;;;;IAXyC,0DAQlD;IARkD,mTAQlD;;;;IAWD,sEACI;IAAA,4EAAkE;IAA3C,iUAAmB;IAA1C,4DAAkE;IAAA,oFACtE;IAAA,4DAAM;;;IAId,6EAEI;IAAA,uDACJ;IAAA,4DAAS;;;IAHsD,6FAAwB;IACnF,yFAAoB;IACpB,0DACJ;IADI,wFACJ;;;;IANQ,0EACI;IAAA,6EACZ;IADwG,8VAAwC;IAChJ,6EAA4E;IAAA,4EAAiB;IAAA,4DAAS;IACtG,mIAEI;IAEN,4DAAS;IACC,4DAAM;;;IALgB,0DAAgC;IAAhC,0FAAgC;;;IAOlD,0EAOI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IATJ,sEACI;IAAA,6HAOI;IAER,4DAAM;;;;IATyC,0DAMlD;IANkD,uPAMlD;;;;IAyBO,0EACI;IAAA,2EACI;IAAA,0EAAgC;IAAA,gFAAqB;IAAA,4DAAK;IAC1D,6EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAC7B,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,wDAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,gFAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACzC,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,iFAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAA6B;IAAA,4DAAK;IACtC,sEAAI;IAAA,yFAA6B;IAAA,4DAAK;IACtC,sEAAI;IAAA,wDAAoC;IAAA,4DAAK;IACjD,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACrB,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAEjC,4DAAK;IACT,4DAAQ;IACR,2EAAgC;IAAA,wFAA4B;IAAA,4DAAK;IACjE,8EACI;IAAA,sEACI;IAAA,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAAsC;IAAA,4DAAK;IAC/C,sEAAI;IAAA,gFAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAA0C;IAAA,4DAAK;IACvD,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,+EAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAA0C;IAAA,4DAAK;IACnD,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAAsC;IAAA,4DAAK;IACnD,4DAAK;IACT,4DAAQ;IACR,2EAAgC;IAAA,sFAA0B;IAAA,4DAAK;IAC/D,8EACI;IAAA,sEACI;IAAA,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAAwC;IAAA,4DAAK;IACjD,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAAwC;IAAA,4DAAK;IACrD,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,kFAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAA8C;IAAA,4DAAK;IACvD,sEAAI;IAAA,+EAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACzD,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAAwC;IAAA,4DAAK;IACrD,4DAAK;IACT,4DAAQ;IACR,uEACI;IAAA,+EAAyE;IAA5C,yUAAmB;IAAyB,qEAAqC;IAAA,wEAAY;IAAA,4DAAS;IACvI,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IA9De,0DAAiB;IAAjB,iFAAiB;IAEjB,0DAAgB;IAAhB,iFAAgB;IAIhB,0DAAe;IAAf,gFAAe;IAEf,0DAA4B;IAA5B,6FAA4B;IAI5B,0DAA6B;IAA7B,8FAA6B;IAE7B,0DAAoC;IAApC,qGAAoC;IAIpC,0DAAkB;IAAlB,mFAAkB;IAElB,0DAAoB;IAApB,qFAAoB;IAQpB,0DAAsC;IAAtC,sGAAsC;IAEtC,0DAA0C;IAA1C,2GAA0C;IAI1C,0DAA0C;IAA1C,2GAA0C;IAE1C,0DAAsC;IAAtC,uGAAsC;IAOtC,0DAAwC;IAAxC,wGAAwC;IAExC,0DAAwC;IAAxC,yGAAwC;IAIxC,0DAA8C;IAA9C,+GAA8C;IAE9C,0DAA4C;IAA5C,6GAA4C;IAI5C,0DAAwC;IAAxC,yGAAwC;;;IAjExE,2EAEI;IAAA,0EACI;IAAA,yEACI;IAAA,8HACI;IAoER,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAvEkC,0DAA4B;IAA5B,oFAA4B;;;IA0EhE,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,+EAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,mFAAgB;;;IAcJ,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,uPAItD;;;IAaW,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,uPAItD;;;IA+DW,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAIpD;IAJoD,mQAIpD;;;IAmCS,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,2IAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,2RAItD;;;IAVL,0EACI;IAAA,0EACI;IAAA,6EAAsC;IAAA,oEAAG;IAAA,wFAA6B;IAAA,4DAAI;IAAA,4DAAQ;IAClF,yEACI;IAAA,wEACA;IAAA,qIACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAXW,0DAAkE;IAAlE,qHAAkE;;;IAgCnE,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,2IAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,mTAItD;;;IAVL,2EACI;IAAA,0EACI;IAAA,6EAAsC;IAAA,oEAAG;IAAA,iGAAsC;IAAA,4DAAI;IAAA,4DAAQ;IAC3F,yEACI;IAAA,wEACA;IAAA,qIACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAXW,0DAA0E;IAA1E,6HAA0E;;;;IApKvG,2EACI;IADoE,mVAAkC;IACtG,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,gEACA;IAAA,2EACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,6EAAsC;IAAA,oEAAG;IAAA,mHAAsD;IAAA,4DAAI;IAAA,4DAAQ;IAC3G,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,0GAA8C;IAAA,4DAAI;IAAA,4DAAQ;IACnG,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IAUN,2EAEI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,kFAAsB;IAAA,4DAAI;IAAA,4DAAQ;IAC3E,0EACI;IAAA,+EACZ;IAAA,8EAAgD;IAAA,8FAEhD;IAAA,4DAAS;IACX,iFACI;IAAA,+EAA4C;IAAA,iEAAK;IAAA,4DAAS;IAC9D,4DAAW;IACX,iFACI;IAAA,+EAA4C;IAAA,iEAAK;IAAA,4DAAS;IAC9D,4DAAW;IACX,iFACI;IAAA,+EAA6C;IAAA,kEAAM;IAAA,4DAAS;IAChE,4DAAW;IACX,iFACI;IAAA,+EAA4C;IAAA,iEAAK;IAAA,4DAAS;IAC9D,4DAAW;IACX,iFACI;IAAA,+EAA4C;IAAA,iEAAK;IAAA,4DAAS;IAC9D,4DAAW;IACX,iFACI;IAAA,+EAAgD;IAAA,qEAAS;IAAA,4DAAS;IACtE,4DAAW;IACb,4DAAS;IACG,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,qGAAyC;IAAA,4DAAI;IAAA,4DAAQ;IAC9F,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,2FAA+B;IAAA,4DAAI;IAAA,4DAAQ;IACpF,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4DAAI;IAAA,4DAAQ;IACrE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,8EAAsC;IAAA,qEAAG;IAAA,8EAAkB;IAAA,4DAAI;IAAA,4DAAQ;IACvE,+EACV;IADgE,6VAAqC;IACrG,8EAAgD;IAAA,qFAEhD;IAAA,4DAAS;IACT,+EAA4C;IAAA,8DAAE;IAAA,4DAAS;IACvD,+EAA2C;IAAA,+DAAG;IAAA,4DAAS;IAC3D,4DAAS;IACC,4DAAM;IACV,4DAAM;IACN,iIACI;IAgBR,4DAAM;IACN,2EACI;IAAA,4EACI;IAAA,2EACI;IAAA,8EAAsC;IAAA,qEAAG;IAAA,uFAA2B;IAAA,4DAAI;IAAA,4DAAQ;IAChF,+EACV;IADsG,+VAAuC;IAC7I,8EAAgD;IAAA,qFAEhD;IAAA,4DAAS;IACT,+EAA4C;IAAA,8DAAE;IAAA,4DAAS;IACvD,+EAA2C;IAAA,+DAAG;IAAA,4DAAS;IAC3D,4DAAS;IACC,4DAAM;IACV,4DAAM;IACN,iIACI;IAgBR,4DAAM;IACV,4DAAM;IACN,uEAAI;IAAA,iFAAoB;IAAA,4DAAK;IAC7B,6EACI;IAAA,6EACI;IAAA,4EACI;IAAA,+EAAuC;IAAA,sEAAG;IAAA,sHAAyD;IAAA,4DAAI;IAAA,4DAAQ;IAC/G,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,6EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,+FAAkC;IAAA,4DAAI;IAAA,4DAAQ;IACvF,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,8EAAsC;IAAA,sEAAG;IAAA,iFAAoB;IAAA,4DAAI;IAAA,4DAAQ;IACzE,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,yFAA4B;IAAA,4DAAI;IAAA,4DAAQ;IACjF,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,6FAAgC;IAAA,4DAAI;IAAA,4DAAQ;IACrF,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,uEAAI;IAAA,+EAAkB;IAAA,4DAAK;IAC3B,6EACI;IAAA,6EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,mHAAsD;IAAA,4DAAI;IAAA,4DAAQ;IAC3G,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,+FAAkC;IAAA,4DAAI;IAAA,4DAAQ;IACvF,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,8EAAsC;IAAA,sEAAG;IAAA,iFAAoB;IAAA,4DAAI;IAAA,4DAAQ;IACzE,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,yFAA4B;IAAA,4DAAI;IAAA,4DAAQ;IACjF,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,+EAAsC;IAAA,sEAAG;IAAA,6FAAgC;IAAA,4DAAI;IAAA,4DAAQ;IACrF,2EACI;IAAA,0EACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,+EACZ;IAD+F,iZAAwB;IACvH,yDACA;IAAA,4DAAS;IACG,gFAAmE;IAAtB,uUAAqB;IAAC,mEAAM;IAAA,4DAAS;IAEtF,4DAAM;IACV,4DAAM;IACV,4DAAO;;;IA/QmC,8FAA6B;IAG9D,0DAAwC;IAAxC,yGAAwC;IAOpB,0DAAsD;IAAtD,wGAAsD;IAiBtD,0DAAsD;IAAtD,wGAAsD;IAmEtD,2DAA0D;IAA1D,4GAA0D;IAkC1C,2DAAY;IAAZ,8EAAY;IA+BZ,2DAAa;IAAb,+EAAa;IAoBhC,0DAAyD;IAAzD,0HAAyD;IA2CzD,2DAAuD;IAAvD,wHAAuD;IA0CvB,2DAAoC;IAApC,qGAAoC;IAC9F,0DACA;IADA,qGACA;;;;IA2BwB,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAiB;IAAA,4DAAK;IAC3B,qEAAK;IAAA,uDAAiB;IAAA,4DAAK;IAC3B,qEAAK;IAAA,uDAAoB;IAAA,4DAAK;IAC9B,qEAAK;IAAA,uDAAoB;IAAA,4DAAK;IAC9B,sEACI;IAAA,+EAAsF;IAA9E,+XAA+B;IAA+C,qEAAqC;IACzI,4DAAS;IAAA,mEACK;IAAA,+EAA8E;IAAjC,gYAAgC;IAAC,qEAA2B;IACvH,4DAAU;IACd,4DAAK;IACP,4DAAK;IACT,4DAAQ;;;IAXiB,0DAAiB;IAAjB,6FAAiB;IACjB,0DAAiB;IAAjB,6FAAiB;IACjB,0DAAoB;IAApB,gGAAoB;IACpB,0DAAoB;IAApB,gGAAoB;;;IAlBrD,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACzB,4DAAK;IACT,4DAAQ;IACR,oIACI;IAalB,4DAAQ;IACZ,4DAAM;IACR,4DAAK;IACT,4DAAM;IACR,4DAAM;;;IAlB2B,2DAAiC;IAAjC,wFAAiC;;;IAsB1D,wEACE;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IAC/B,4DAAI;;;IADM,0DAAY;IAAZ,gFAAY;;;IAItB,wEACE;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACnC,4DAAI;;;IADM,0DAAgB;IAAhB,oFAAgB;;;IA4BpB,8EACA;IAAA,uDACA;IAAA,4DAAS;;;IAFD,qFAAuB;IAC/B,0DACA;IADA,4FACA;;;IA6BI,0EASE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,mGACF;;;IAXJ,sEACI;IAAA,oIASE;IAEN,4DAAM;;;;IAXyC,0DAQxC;IARwC,kRAQxC;;;;IA3ErB,sEACI;IAAA,yEACI;IAAA,wHACE;IAEN,4DAAM;IACN,yEACI;IAAA,yHACE;IAEN,4DAAM;IACR,2EAEA;IAF4E,0UAA0B;IAEtG,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,0EACI;IAAA,0EACE;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,2EAAe;IAAA,uEAAoC;IAAA,4DAAI;IAAA,4DAAQ;IACxG,0EACE;IAAA,yEAEF;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,uEACzB;IAAA,4DAAI;IAAA,4DAAQ;IAC5C,0EACE;IAAA,yEACF;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,0EAAc;IAAA,4DAAI;IAAA,4DAAQ;IACnE,+EACE;IAAA,+EAAoD;IAAA,2FAEpD;IAAA,4DAAS;IACT,sIACA;IAEF,4DAAS;IACb,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,4EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,uEAC9B;IAAA,4DAAI;IAAA,4DAAQ;IAC5C,0EACE;IAAA,yEAEF;IAAA,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,uEAC9B;IAAA,4DAAI;IAAA,4DAAQ;IAC5C,0EACE;IAAA,yEAEF;IAAA,4DAAM;IACV,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,2EAAe;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IACzG,0EACE;IAAA,yEAEA;IAAA,+HACI;IAYN,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,wEAAY;IAAA,uEAAoC;IAAA,4DAAI;IAAA,4DAAQ;IACrG,0EACE;IAAA,yEACF;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,yEAAa;IAAA,uEAAoC;IAAA,4DAAI;IAAA,4DAAQ;IACtG,0EACE;IAAA,yEACF;IAAA,4DAAM;IACV,4DAAM;IACR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,+EACA;IAAA,wDACA;IAAA,4DAAS;IACuB,+EAC9B;IADoD,yUAAyB;IAC7E,oEACF;IAAA,4DAAS;IACG,4DAAM;IACN,4DAAO;IACf,4DAAM;;;IAtGsB,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAIjB,0DAAiC;IAAjC,kGAAiC;IAEvE,0DAAa;IAAb,kFAAa;IACO,0DAAgD;IAAhD,iHAAgD;IAsBnB,2DAAmC;IAAnC,oFAAmC;IA8BvE,2DAAuD;IAAvD,yGAAuD;IA8BtB,2DAAwC;IAAxC,yGAAwC;IACtF,0DACA;IADA,8FACA;;;;IAQA,8EAA6G;IAArG,2UAAyB;IAA4E,sEAAW;IAAA,4DAAS;;;;IAoB7G,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAqB;IAAA,4DAAK;IAC/B,qEAAK;IAAA,uDAAwB;IAAA,4DAAK;IAClC,qEAAK;IAAA,uDAAqB;IAAA,4DAAK;IAC/B,qEAAK;IAAA,uDAAuB;IAAA,4DAAK;IACjC,sEACI;IACA,+EAAwF;IAAhF,iYAAiC;IAA+C,qEAAqC;IAC/I,4DAAS;IAAA,mEACS;IAAA,+EAAiF;IAApC,mYAAmC;IAAC,qEAA2B;IAC9H,4DAAS;IACK,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IAZK,0DAAqB;IAArB,2HAAqB;IACrB,0DAAwB;IAAxB,8HAAwB;IACxB,0DAAqB;IAArB,2HAAqB;IACrB,0DAAuB;IAAvB,6HAAuB;;;IAlBxD,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,8EAAkB;IAAA,4DAAK;IAC/B,4DAAK;IACT,4DAAQ;IACR,oIACI;IAcR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAnBqB,2DAAmC;IAAnC,0FAAmC;;;IAuBtD,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,gFAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,oFAAgB;;;IA2BR,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,oIASI;IAER,4DAAM;;;;IAXyC,0DAQ5D;IAR4D,sTAQ5D;;;IAcC,8EACA;IAAA,uDACA;IAAA,4DAAS;;;IAF8C,sFAAwB;IAC/E,0DACA;IADA,6FACA;;;IAmBgB,0EASI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAXJ,sEACI;IAAA,oIASI;IAER,4DAAM;;;;IAXyC,0DAQ1D;IAR0D,4TAQ1D;;;;IAtFb,sEACI;IAAA,yEACI;IAAA,wHACI;IAER,4DAAM;IACN,yEACI;IAAA,yHACI;IAER,4DAAM;IACN,2EACI;IADqE,4UAA4B;IACjG,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,8EAAkB;IAAA,uEAC3C;IAAA,4DAAI;IAAA,4DAAQ;IAC5B,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,uEAC9C;IAAA,4DAAI;IAAA,4DAAQ;IAC5B,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,gFAAoB;IAAA,4EACpD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC7B,0EACI;IAAA,yEACA;IAAA,+HACI;IAYR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,yEAAa;IAAA,uEACtC;IAAA,4DAAI;IAAA,4DAAQ;IAC5B,0EACI;IAAA,+EACZ;IAAA,+EAAoD;IAAA,4FAEpD;IAAA,4DAAS;IACT,sIACA;IAEF,4DAAS;IACC,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,wFAA4B;IAAA,uEACrD;IAAA,4DAAI;IAAA,4DAAQ;IAC5B,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IAGN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,oFAAwB;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAClH,0EACI;IAAA,yEAEA;IAAA,+HACI;IAYR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,+EAClB;IAAA,wDACA;IAAA,4DAAS;IACS,+EAChB;IAD6D,2UAA2B;IACxF,oEACF;IAAA,4DAAS;IACK,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACX,4DAAM;;;IAvGgC,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAIf,0DAA8B;IAA9B,+FAA8B;IAChE,0DAAa;IAAb,kFAAa;IACO,0DAAwD;IAAxD,yHAAwD;IAqB3D,2DAAiE;IAAjE,mHAAiE;IAuB1E,2DAA8C;IAA9C,8FAA8C;IAoBrC,2DAAmE;IAAnE,qHAAmE;IAiB1B,0DAAqC;IAArC,sGAAqC;IACrG,0DACA;IADA,mGACA;;;;IAUN,yEAA6G;IAA1G,mUAA2B;IAA+E,wEAAa;IAAA,4DAAI;;;IAwB9F,qEAAyC;IAAA,oEAAkE;IAAA,4DAAK;;;IAChH,qEAA0C;IAAA,oEAAgE;IAAA,4DAAK;;;;IAJvH,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAA4B;IAAA,4DAAK;IACtC,oIAAyC;IACzC,oIAA0C;IAC1C,qEAAK;IAAA,6EAAmI;IAAlD,8VAA+B;IAAhH,4DAAmI;IAAA,4DAAK;IAC7I,qEACI;IAAA,6EACpB;IADsE,ubAA4C,CAAC,EAAC,KAAK,KAAE;IAC3H,oEAAmC;IAAC,oEACtC;IAAA,4DAAS;IACS,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;;IAVK,0DAA4B;IAA5B,wGAA4B;IAC7B,0DAAoC;IAApC,mGAAoC;IACpC,0DAAqC;IAArC,oGAAqC;IACgB,0DAA4B;IAA5B,8GAA4B;;;IAnBjH,0EACI;IAAA,0EAAgC;IAAA,yEAAQ;IAAA,6FAAkC;IAAA,4DAAS;IAAA,4DAAK;IACxF,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,4EAAgB;IAAA,4DAAK;IACzB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;IACT,4DAAQ;IACR,oIACI;IAYR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAjBqB,2DAAqE;IAArE,oGAAqE;;;IAoCpE,qEAAyC;IAAA,oEAAkE;IAAA,4DAAK;;;IAChH,qEAA0C;IAAA,oEAAgE;IAAA,4DAAK;;;;IAJvH,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAuC;IAAA,4DAAK;IACjD,oIAAyC;IACzC,oIAA0C;IAC1C,qEAAK;IAAA,uDAA+B;IAAA,4DAAK;IACzC,qEAAI;IAAA,uDAA0H;;;IAAA,4DAAK;IACnI,sEACI;IAAA,+EAA0M;IAA5D,waAA2D;IAAC,qEAAqC;IACjQ,4DAAS;IAAA,mEACS;IAAA,+EAA4G;IAA5C,wZAA2C;IAAC,qEAA+B;IAC7J,4DAAS;IAAA,mEACS;IAAA,+EAAyG;IAA3D,uaAA0D;IAAC,qEAA2B;IAAA,4DAAS;IACjJ,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IAbK,0DAAuC;IAAvC,mHAAuC;IACxC,0DAAoC;IAApC,mGAAoC;IACpC,0DAAqC;IAArC,oGAAqC;IACpC,0DAA+B;IAA/B,2GAA+B;IAChC,0DAA0H;IAA1H,gUAA0H;;;IArB1J,0EACI;IAAA,0EAAgC;IAAA,yEAAQ;IAAA,sFAA2B;IAAA,4DAAS;IAAA,4DAAK;IACjF,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,uEAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;IACT,4DAAQ;IACR,qIACI;IAeR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IApBqB,2DAAsE;IAAtE,qGAAsE;;;;IA+BzF,0EACI;IAAA,2EACI;IAAA,0EAAgC;IAAA,gFAAqB;IAAA,4DAAK;IAC1D,6EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,qEAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAA6B;IAAA,4DAAK;IAC1C,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAA+B;IAAA,4DAAK;IACxC,sEAAI;IAAA,yEAAa;IAAA,4DAAK;IACtB,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IAC3C,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACvC,4DAAK;IACT,4DAAQ;IACR,2EAAgC;IAAA,iFAAqB;IAAA,4DAAK;IAC1D,8EACI;IAAA,sEACI;IAAA,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAA6B;IAAA,4DAAK;IAC1C,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,0EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAA+B;IAAA,4DAAK;IACxC,sEAAI;IAAA,yEAAa;IAAA,4DAAK;IACtB,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IAC3C,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACvC,4DAAK;IACT,4DAAQ;IACR,uEACI;IAAA,+EAAiF;IAApD,iVAA2B;IAAyB,qEAAqC;IAAA,wEAAY;IAAA,4DAAS;IAC/I,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IAtCe,0DAAwB;IAAxB,wFAAwB;IAExB,0DAA6B;IAA7B,8FAA6B;IAI7B,0DAA+B;IAA/B,gGAA+B;IAE/B,0DAA8B;IAA9B,+FAA8B;IAI9B,0DAA0B;IAA1B,2FAA0B;IAO1B,0DAAwB;IAAxB,wFAAwB;IAExB,0DAA6B;IAA7B,8FAA6B;IAI7B,0DAA+B;IAA/B,gGAA+B;IAE/B,0DAA8B;IAA9B,+FAA8B;IAI9B,0DAA0B;IAA1B,2FAA0B;;;IAxC1D,2EACI;IAAA,0EACI;IAAA,yEACI;IAAA,8HACI;IA4CR,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IA/CkC,0DAAiC;IAAjC,yFAAiC;;;IAkDrE,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,+EAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,mFAAgB;;;IAaJ,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,oSAItD;;;IAWW,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,sTAItD;;;IA+CW,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAIxD;IAJwD,oSAIxD;;;IAWa,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAIxD;IAJwD,sTAIxD;;;;IA/Ff,2EACI;IADoE,8UAA6B;IACjG,0EAAwB;IAAA,oEAAG;IAAA,2EAAgB;IAAA,4DAAI;IAAA,4DAAK;IACpD,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,0EACI;IAAA,4EAAsC;IAAA,oEAAG;IAAA,uEAAW;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IACrG,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC/G,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAA,4DAAQ;IACpE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAAA,4DAAQ;IAC7D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,yEAAa;IAAA,4DAAI;IAAA,4DAAQ;IAClE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,iEAGA;IAAA,8EAA0G;IAAnE,qWAA2C;IAAlF,4DAA0G;IAAA,sFAAyB;IAAA,iEAAI;IAAA,iEAIvI;IAAA,4EACI;IAAA,2EAAwB;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4DAAI;IAAA,4DAAK;IACpD,4EACI;IAAA,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,uEAAW;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IACrG,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC/G,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAA,4DAAQ;IACpE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAAA,4DAAQ;IAC7D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,yEAAa;IAAA,4DAAI;IAAA,4DAAQ;IAClE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACN,8EAA4G;IAAzB,gZAAwB;IAAC,wDAAW;IAAA,4DAAS;IAChI,+EAA2E;IAA9B,8UAA6B;IAAC,kEAAM;IAAA,4DAAS;IAE9F,4DAAM;IAEV,4DAAO;;;IAlImC,8FAA6B;IAE9D,0DAAyD;IAAzD,0HAAyD;IAOrC,2DAAqD;IAArD,uGAAqD;IAerD,0DAA2D;IAA3D,6GAA2D;IAuCD,2DAAqB;IAArB,sFAAqB;IAInG,0DAAyD;IAAzD,0HAAyD;IAQrC,2DAAqD;IAArD,uGAAqD;IAerD,0DAA2D;IAA3D,6GAA2D;IAmClC,2DAAoC;IAApC,qGAAoC;IAA0B,0DAAW;IAAX,gFAAW;;;;IAyB3G,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAsB;IAAA,4DAAK;IAChC,qEAAK;IAAA,uDAA0B;IAAA,4DAAK;IACpC,qEAAK;IAAA,uDAAqB;IAAA,4DAAK;IAC/B,qEAAK;IAAA,uDAAiB;IAAA,4DAAK;IAC3B,sEACI;IAAA,+EAAwF;IAAhF,iYAAiC;IAA+C,qEAAqC;IAAC,4DAAS;IAAA,mEACvI;IAAA,+EAAiF;IAApC,mYAAmC;IAAC,qEAA2B;IAAA,4DAAS;IACzH,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IATK,0DAAsB;IAAtB,4HAAsB;IACtB,0DAA0B;IAA1B,gIAA0B;IAC1B,0DAAqB;IAArB,2HAAqB;IACrB,0DAAiB;IAAjB,uHAAiB;;;IAlBlD,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,wEAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,6EAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACrB,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACrB,4DAAK;IACT,4DAAQ;IACR,oIACI;IAWR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAhBqB,2DAAuC;IAAvC,8FAAuC;;;IAoB1D,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,gFAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,oFAAgB;;;IAyBR,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAIxD;IAJwD,+TAIxD;;;IA0BT,8EAAoE;IAAA,uDAAe;IAAA,4DAAS;;;IAA/C,kFAAoB;IAAG,0DAAe;IAAf,yFAAe;;;;IA/DzF,sEACI;IAAA,yEACI;IAAA,wHACI;IAER,4DAAM;IACN,yEACI;IAAA,yHACI;IAER,4DAAM;IACN,2EACI;IADuE,yUAAyB;IAChG,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,+EAAmB;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC7G,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,wEAAY;IAAA,4DAAI;IAAA,4DAAQ;IACjE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,6EAAiB;IAAA,4DAAI;IAAA,4DAAQ;IACtE,0EACI;IAAA,yEAEA;IAAA,+HACI;IASR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4DAAI;IAAA,4DAAQ;IACrE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4DAAI;IAAA,4DAAQ;IACrE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,wEAAY;IAAA,4DAAI;IAAA,4DAAQ;IACjE,0EACI;IAAA,+EAClB;IAAA,+EAAkC;IAAA,4FAAgC;IAAA,4DAAS;IAC3E,sIAAoE;IACtE,4DAAS;IACO,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAAA,4DAAQ;IAC7D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,8EAA+G;IAAzB,+YAAwB;IAAC,wDAAiB;IAAA,4DAAS;IACzI,+EAA4D;IAA7B,4UAA4B;IAAC,kEAAM;IAAA,4DAAS;IAC/E,4DAAO;IACX,4DAAM;;;IA5EgC,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAIf,0DAAgC;IAAhC,iGAAgC;IAClE,0DAAkB;IAAlB,uFAAkB;IACL,0DAAuD;IAAvD,wHAAuD;IAmBnD,2DAAiE;IAAjE,mHAAiE;IA8BhF,2DAAgB;IAAhB,yEAAgB;IAChB,0DAAoC;IAApC,uFAAoC;IAYI,0DAAuC;IAAvC,wGAAuC;IAA0B,0DAAiB;IAAjB,sFAAiB;;;;IAIxI,yEAAwG;IAArG,iUAAyB;IAA4E,yEAAc;IAAA,4DAAI;;;;IA6BtG,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAkB;IAAA,4DAAK;IAC5B,qEAAK;IAAA,uDAAc;IAAA,4DAAK;IACxB,qEAAK;IAAA,uDAAkB;IAAA,4DAAK;IAC5B,qEAAK;IAAA,uDAAmB;IAAA,4DAAK;IAC7B,sEACI;IAAA,+EAAqE;IAArC,oYAAoC;IAAC,qEACjD;IACtC,4DAAS;IAAA,mEACS;IAAA,+EAAqF;IAAxC,uYAAuC;IAAC,qEAC3E;IAAA,4DAAS;IACvB,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IAZK,0DAAkB;IAAlB,8FAAkB;IAClB,0DAAc;IAAd,0FAAc;IACd,0DAAkB;IAAlB,8FAAkB;IAClB,0DAAmB;IAAnB,+FAAmB;;;IAnBpD,2EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB,qEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;IACT,4DAAQ;IACR,oIACI;IAcR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAnBqB,2DAAuC;IAAvC,8FAAuC;;;IAsB1D,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,gFAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,oFAAgB;;;IAWlC,6EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAF6D,iGAA0B;IAC5F,0DACJ;IADI,+FACJ;;;IAekC,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,+QAI1D;;;IAiC3B,8EAAkE;IAAA,uDAAU;IAAA,4DAAS;;;IAA7E,8EAAgB;IAA0C,0DAAU;IAAV,0EAAU;;;;IAzEtE,sEACI;IAAA,yEACI;IAAA,wHACI;IAER,4DAAM;IACN,yEACI;IAAA,yHACI;IAER,4DAAM;IACN,0EAA+B;IAAA,uDAA0B;IAAA,4DAAK;IAC9D,2EACI;IADoE,+UAA+B;IACnG,2EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,kFAAsB;IAAA,4EACtD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC7B,+EACZ;IAAA,+EAAoD;IAAA,0FAA8B;IAAA,4DAAS;IAC7F,qIACI;IAEN,4DAAS;IACO,4EACI;IAAA,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iEAAK;IAAA,4DAAI;IAAA,4DAAQ;IAC1D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,gEAAI;IAAA,4DAAI;IAAA,4DAAQ;IACzD,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAAA,4DAAQ;IAChE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,sEAAU;IAAA,4DAAI;IAAA,4DAAQ;IAC/D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4DAAI;IAAA,4DAAQ;IACrE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,6EAAsC;IAAA,qEAAG;IAAA,wEAAY;IAAA,4DAAI;IAAA,4DAAQ;IACjE,+EACd;IAAA,+EAAoD;IAAA,wFAA4B;IAAA,4DAAS;IACzF,sIAAkE;IAClE,4DAAS;IACK,8EAA4G;IAAzB,+YAAwB;IAAC,wDAAgB;IAAA,4DAAS;IACrI,+EAAuD;IAAxB,uUAAuB;IAAC,kEAAM;IAAA,4DAAS;IAC1E,4DAAO;IACX,4DAAM;;;IA5EgC,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAI1B,0DAA0B;IAA1B,sGAA0B;IACf,0DAA6B;IAA7B,8FAA6B;IAC9D,0DAA2C;IAA3C,4GAA2C;IACvC,0DAAmD;IAAnD,oHAAmD;IAKpC,0DAAuC;IAAvC,qFAAuC;IAgBlC,2DAAsD;IAAtD,wGAAsD;IAsCxE,2DAA+B;IAA/B,uFAA+B;IAEI,0DAAoC;IAApC,qGAAoC;IAA0B,0DAAgB;IAAhB,qFAAgB;;;;IAIpI,8EAA6H;IAA9B,+UAA6B;IAAC,oEAAiC;IAAA,2EAAgB;IAAA,4DAAS;;;;IAU3K,0EACI;IAAA,2EACI;IAAA,0EAAgC;IAAA,2EAAgB;IAAA,4DAAK;IACrD,6EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,oFAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAqC;;IAAA,4DAAK;IAClD,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,kFAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAAmC;;IAAA,4DAAK;IAC5C,sEAAI;IAAA,iFAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACzC,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,uEAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,+EAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACvC,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACrB,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IAC3B,4DAAK;IACT,4DAAQ;IAER,uEACI;IAAA,+EAAoF;IAAvD,oVAA8B;IAAyB,qEAAqC;IAAA,wEAAY;IAAA,4DAAS;IAClJ,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IA5Be,0DAAc;IAAd,8EAAc;IAEd,0DAAqC;IAArC,iKAAqC;IAIrC,0DAAmC;IAAnC,gKAAmC;IAEnC,0DAA4B;IAA5B,6FAA4B;IAI5B,0DAAuB;IAAvB,wFAAuB;IAEvB,0DAA0B;IAA1B,2FAA0B;IAI1B,0DAAkB;IAAlB,mFAAkB;IAElB,0DAAc;IAAd,+EAAc;;;IA7B9C,2EACI;IAAA,0EACI;IAAA,yEACI;IAAA,8HACI;IAkCR,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IArCkC,0DAAgC;IAAhC,wFAAgC;;;IAwCpE,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,+EAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,mFAAgB;;;IAcJ,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,mQAI1D;;;IAYe,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,sTAI1D;;;IAYe,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,gTAI1D;;;IAWe,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,0SAI1D;;;IAoBP,8EAA2F;IAAA,uDAAqB;IAAA,4DAAS;;;IAAjE,uFAAyB;IAAU,0DAAqB;IAArB,qFAAqB;;;IAG1F,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAI9D;IAJ8D,qRAI9D;;;IAYmB,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,qIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,kRAI1D;;;IAaT,8EACA;IAAA,uDACA;IAAA,4DAAS;;;IAFD,qFAAuB;IAC/B,0DACA;IADA,4FACA;;;;IAxHJ,2EACI;IADuE,0UAAyB;IAChG,2EACI;IAAA,0EAAwB;IAAA,oEAAG;IAAA,0EAAe;IAAA,4DAAI;IAAA,4DAAK;IACnD,2EACI;IAAA,2EACI;IAAA,0EACI;IAAA,4EAAsC;IAAA,oEAAG;IAAA,sEAAU;IAAA,4EAC5C;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC3B,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,0FAA8B;IAAA,4EAChE;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC3B,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,wFAA4B;IAAA,4EAC9D;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC3B,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,+EAAmB;IAAA,4DAAI;IAAA,4DAAQ;IACxE,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,4DAAI;IAAA,4DAAQ;IAC1E,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,6EAAiB;IAAA,4EACnD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC3B,0EACI;IAAA,+EAClB;IAAA,8EAAgD;IAAA,4FAAgC;IAAA,4DAAS;IACzF,uIAA2F;IAC7F,4DAAS;IACW,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4EAClD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC3B,0EACI;IAAA,yEACA;IAAA,gIACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,+EAAmB;IAAA,4EACvD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IACzB,+EAChB;IAAA,+EAAoD;IAAA,2FAEpD;IAAA,4DAAS;IACT,uIACA;IAEF,4DAAS;IACK,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,8EAA+G;IAAzB,gZAAwB;IAAC,wDAAmB;IAAA,4DAAS;IAC3I,+EAAwE;IAA3B,2UAA0B;IAAC,kEAAM;IAAA,4DAAS;IAC3F,4DAAO;;;IAhImC,iGAAgC;IACjE,0DAA+C;IAA/C,gHAA+C;IAS3B,2DAAiD;IAAjD,mGAAiD;IAgBjD,0DAAkE;IAAlE,oHAAkE;IAgBlE,0DAAgE;IAAhE,kHAAgE;IAehE,0DAA8D;IAA9D,gHAA8D;IAyB5E,2DAA8C;IAA9C,iGAA8C;IAEhC,0DAAuD;IAAvD,yGAAuD;IAgBvD,0DAA8D;IAA9D,gHAA8D;IAkB9C,2DAAuC;IAAvC,wFAAuC;IAQlC,0DAAuC;IAAvC,wGAAuC;IAA0B,0DAAmB;IAAnB,sFAAmB;;;;IAqBlH,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAgB;IAAA,4DAAK;IAC1B,qEAAK;IAAA,uDAAiB;IAAA,4DAAK;IAC3B,qEAAK;IAAA,uDAAgB;IAAA,4DAAK;IAC1B,qEACI;IAAA,8EAA4F;IAApF,oYAAqC;IAA+C,qEAAqC;IAAC,4DAAS;IAC/I,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IAPK,0DAAgB;IAAhB,4FAAgB;IAChB,0DAAiB;IAAjB,6FAAiB;IACjB,0DAAgB;IAAhB,4FAAgB;;;IAhBjD,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IACd,qEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;IACT,4DAAQ;IACR,oIACI;IASR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAdqB,2DAAkC;IAAlC,yFAAkC;;;IAkBrD,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,gFAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,oFAAgB;;;;IARpC,sEACI;IAAA,yEACI;IAAA,wHACI;IAER,4DAAM;IACN,yEACI;IAAA,yHACI;IAER,4DAAM;IACN,2EACI;IADsE,+UAA+B;IACrG,qEAAI;IAAA,uDAA+B;IAAA,4DAAK;IACxC,2EACI;IAAA,0EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,kEAAM;IAAA,4DAAI;IAAA,4DAAQ;IAC3D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iEAAK;IAAA,4DAAI;IAAA,4DAAQ;IAC1D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,kEAAM;IAAA,4DAAI;IAAA,4DAAQ;IAC3D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,8EAA8G;IAAzB,+YAAwB;IAAC,wDAAoB;IAAA,4DAAS;IAC3I,+EAA+D;IAAhC,+UAA+B;IAAC,kEAAM;IAAA,4DAAS;IAClF,4DAAO;IACX,4DAAM;;;IAlCgC,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAIf,0DAA+B;IAA/B,gGAA+B;IACjE,0DAA+B;IAA/B,6GAA+B;IAC9B,0DAAqD;IAArD,sHAAqD;IAoBZ,2DAAsC;IAAtC,uGAAsC;IAA0B,0DAAoB;IAApB,yFAAoB;;;;IAI1I,8EAAyH;IAAjH,kVAAgC;IAAiF,uEAAY;IAAA,4DAAS;;;;IAuBtH,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAA0B;;IAAA,4DAAK;IACpC,qEAAK;IAAA,uDAAwB;;IAAA,4DAAK;IAClC,qEAAK;IAAA,uDAAsB;IAAA,4DAAK;IAChC,sEAAK;IAAA,wDAAe;IAAA,4DAAK;IACzB,sEACI;IAAA,+EAAoG;IAA5F,6YAA6C;IAA+C,qEAAqC;IACzJ,4DAAS;IACG,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IATK,0DAA0B;IAA1B,gKAA0B;IAC1B,0DAAwB;IAAxB,8JAAwB;IACxB,0DAAsB;IAAtB,kGAAsB;IACtB,0DAAe;IAAf,2FAAe;;;IAnBhD,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,4EAAgB;IAAA,4DAAK;IACzB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;IACT,4DAAQ;IACR,oIACI;IAWR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAhBqB,2DAAuC;IAAvC,8FAAuC;;;IAoB1D,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,gFAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,oFAAgB;;;IAYR,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,+QAItD;;;IAYW,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,2RAI1D;;;IAce,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAItD;IAJsD,yQAItD;;;;IA1DjB,sEACI;IAAA,yEACI;IAAA,wHACI;IAER,4DAAM;IACN,yEACI;IAAA,yHACI;IAER,4DAAM;IACN,2EACI;IAD6E,8UAA8B;IAC3G,0EAAgC;IAAA,uDAA6B;IAAA,4DAAK;IAClE,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,8EAAkB;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC5G,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,mFAAuB;IAAA,4EACvD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC7B,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,4EAAgB;IAAA,4EAChD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC7B,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAAA,4DAAQ;IAC7D,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IAGV,4DAAM;IACN,2EACI;IAAA,+EACd;IAAA,wDACA;IAAA,4DAAS;IACK,+EACZ;IADkC,8UAA8B;IAChE,oEACF;IAAA,4DAAS;IACC,4DAAM;IACV,4DAAO;IACX,4DAAM;;;IAjFgC,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAIf,0DAAsC;IAAtC,uGAAsC;IAC5C,0DAA6B;IAA7B,kGAA6B;IAOxC,2DAAmE;IAAnE,qHAAmE;IAgBnE,0DAAuE;IAAvE,yHAAuE;IAkBvE,2DAAiE;IAAjE,mHAAiE;IAsBpC,0DAA6C;IAA7C,8GAA6C;IACzG,0DACA;IADA,+FACA;;;;IAQF,8EAA4H;IAApH,iVAA+B;IAAqF,6EAAkB;IAAA,4DAAS;;;;IAqB/H,wEACI;IAAA,qEACI;IAAA,qEAAK;IAAA,uDAAsB;IAAA,4DAAK;IAChC,qEAAK;IAAA,uDAAqB;IAAA,4DAAK;IAC/B,qEAAK;IAAA,uDAA0B;;IAAA,4DAAK;IACpC,qEAEI;IAAA,+EAAuG;IAA/F,gZAAgD;IAA+C,qEACvF;IACpC,4DAAS;IAAA,mEACW;IAAA,+EAAsF;IAAzC,wYAAwC;IAAC,qEAChF;IAAA,4DAAS;IACnB,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;IAZK,0DAAsB;IAAtB,kGAAsB;IACtB,0DAAqB;IAArB,iGAAqB;IACrB,0DAA0B;IAA1B,gKAA0B;;;IAjB3D,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEAAI;IAAA,yEAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,uEAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;IACT,4DAAQ;IACR,oIACI;IAcR,4DAAQ;IACZ,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAnBqB,2DAAkC;IAAlC,yFAAkC;;;IAuBrD,wEACI;IAAA,yEAAQ;IAAA,uDAAY;IAAA,4DAAS;IACjC,4DAAI;;;IADQ,0DAAY;IAAZ,gFAAY;;;IAIxB,wEACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACrC,4DAAI;;;IADQ,0DAAgB;IAAhB,oFAAgB;;;IAaJ,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAI5D;IAJ4D,sTAI5D;;;IAYiB,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAIhE;IAJgE,mTAIhE;;;IA4BqB,0EAKI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAPJ,sEACI;IAAA,oIAKI;IAER,4DAAM;;;;IAPyC,0DAI1D;IAJ0D,gTAI1D;;;;IAzEjB,sEACI;IAAA,yEACI;IAAA,wHACI;IAER,4DAAM;IACN,yEACI;IAAA,yHACI;IAER,4DAAM;IACN,2EACI;IADwE,0UAA0B;IAClG,2EACI;IAAA,0EAAgC;IAAA,uDAAyB;IAAA,4DAAK;IAC9D,2EACI;IAAA,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,iFAAqB;IAAA,4EAA6B;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IAC/G,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,mFAAuB;IAAA,4EAC7D;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IACvB,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,kFAAsB;IAAA,4DAAI;IAAA,4DAAQ;IAC3E,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,+EAAmB;IAAA,4DAAI;IAAA,4DAAQ;IACxE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,+EAAmB;IAAA,4EACvD;IAAA,6DAAC;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAQ;IACzB,0EACI;IAAA,yEACA;IAAA,+HACI;IAQR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,6EAAsC;IAAA,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAA,4DAAQ;IACpE,0EACI;IAAA,yEACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,+EAChB;IAAA,wDACA;IAAA,4DAAS;IACO,+EACd;IADoC,kVAAkC;IACtE,oEACF;IAAA,4DAAS;IACG,4DAAM;IACV,4DAAO;IACX,4DAAM;;;IAjGgC,0DAAgB;IAAhB,kFAAgB;IAKf,0DAAsB;IAAtB,wFAAsB;IAIf,0DAAiC;IAAjC,kGAAiC;IAClE,0DAAuD;IAAvD,wHAAuD;IACxB,0DAAyB;IAAzB,8FAAyB;IAOpC,2DAAyE;IAAzE,2HAAyE;IAgBzE,0DAAwE;IAAxE,0HAAwE;IAgCxE,2DAAuE;IAAvE,yHAAuE;IAuB9C,0DAAwC;IAAxC,yGAAwC;IACtG,0DACA;IADA,kGACA;;;;IAQA,8EAAkI;IAA1H,oVAAkC;IAAwF,8EAAmB;IAAA,4DAAS;;ADv/DvK,MAAM,wBAAwB;IA2IrC,YAAmB,EAAe,EACxB,MAAwB,EACxB,GAAoB,EACrB,MAAc,EACb,MAAc,EACd,KAAoB,EACpB,QAAgC,EAChC,IAAgB,EAChB,IAAqB;QARZ,OAAE,GAAF,EAAE,CAAa;QACxB,WAAM,GAAN,MAAM,CAAkB;QACxB,QAAG,GAAH,GAAG,CAAiB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAe;QACpB,aAAQ,GAAR,QAAQ,CAAwB;QAChC,SAAI,GAAJ,IAAI,CAAY;QAChB,SAAI,GAAJ,IAAI,CAAiB;QArI7B,oBAAe,GAAG,IAAI,KAAK,EAAE,CAAC;QAC9B,eAAU,GAAG,IAAI,KAAK,EAAE,CAAC;QACzB,mBAAc,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,mBAAc,GAAG,IAAI,KAAK,EAAE,CAAC;QAE7B,mBAAc,GAAY,KAAK,CAAC;QAEhC,aAAQ,GAAY,KAAK,CAAC;QAG1B,YAAO,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAG7C,eAAU,GAAG,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACzC,sBAAiB,GAAG,IAAI,KAAK,EAAE,CAAC;QAEhC,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAW,KAAK,CAAC;QAGzB,wBAAmB,GAAW,IAAI,CAAC;QACnC,iBAAY,GAAY,IAAI,CAAC;QAI7B,aAAQ,GAAW,EAAE,CAAC,CAAG,2BAA2B;QAIpD,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,gCAAgC;QAGrE,gBAAW,GAAG,QAAQ,CAAC;QACvB,aAAQ,GAAG,KAAK,CAAC;QAKjB,aAAQ,GAAE,CAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,QAAQ,EAAC,OAAO,EAAC,MAAM,EAAC,QAAQ,EAAC,KAAK,EAAC,UAAU,CAAC,CAAC,CAAC,wBAAwB;QAGnH,UAAK,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAE,mCAAmC;QACrH,YAAO,GAAG,CAAC,CAAC;QAEnB,UAAK,GAAY,KAAK,CAAC;QACvB,SAAI,GAAY,KAAK,CAAC;QAEtB,cAAS,GAAY,IAAI,CAAC,CAAC,gCAAgC;QAG3D,eAAU,GAAG,QAAQ,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,eAAU,GAAW,IAAI,CAAC;QAE1B,kBAAa,GAAY,IAAI,CAAC,CAAE,+BAA+B;QAG/D,cAAS,GAAU,IAAI,CAAC;QAExB,aAAQ,GAAW,IAAI,CAAC;QAGxB,mBAAc,GAAY,IAAI,CAAC;QAC/B,kBAAa,GAAY,IAAI,CAAC,CAAC,sBAAsB;QAGrD,cAAS,GAAY,IAAI,CAAC;QAE1B,aAAQ,GAAG,EAAE,CAAC,CAAC,wBAAwB;QACvC,aAAQ,GAAY,IAAI,CAAC,CAAC,8CAA8C;QACxE,aAAQ,GAAY,IAAI,CAAC,CAAC,2BAA2B;QAKrD,gBAAW,GAAY,IAAI,CAAC,CAAC,uBAAuB;QACpD,gBAAW,GAAY,IAAI,CAAC,CAAC,uBAAuB;QAEpD,gBAAW,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,yBAAyB,CAAC,CAAC;QAE5D,YAAO,GAAW,IAAI,CAAC,CAAC,eAAe;QACvC,YAAO,GAAW,IAAI,CAAC,CAAC,gBAAgB;QAExC,sBAAiB,GAAY,KAAK,CAAC,CAAC,2BAA2B;QAC/D,sBAAiB,GAAY,KAAK,CAAC,CAAC,2BAA2B;QAC/D,mBAAc,GAAY,IAAI,CAAC,CAAC,4BAA4B;QAI5D,oBAAe,GAAG,qBAAqB,CAAC;QAGxC,qBAAgB,GAAG,EAAE,CAAC;QACtB,sBAAiB,GAAG,CAAC,WAAW,EAAC,UAAU,CAAC,CAAC;QAE7C,sBAAiB,GAAY,IAAI,CAAC,CAAC,qBAAqB;QACxD,sBAAiB,GAAY,IAAI,CAAC,CAAC,qBAAqB;QAIxD,uBAAkB,GAAG,IAAI,CAAC;QAK1B,iBAAY,GAAY,IAAI,CAAC,CAAC,oBAAoB;QAClD,iBAAY,GAAY,IAAI,CAAC,CAAC,oBAAoB;QAIlD,0BAAqB,GAAG,IAAI,CAAC;QAG7B,YAAO,GAAG,QAAQ,CAAC;QACnB,kBAAa,GAAG,QAAQ,CAAC;QACzB,oBAAe,GAAG,QAAQ,CAAC;QAC3B,iBAAY,GAAG,QAAQ,CAAC;QACxB,qBAAgB,GAAG,QAAQ,CAAC;QAC5B,kBAAa,GAAG,QAAQ,CAAC;QAEzB,gBAAW,GAAG,QAAQ,CAAC;QACvB,mBAAc,GAAG,QAAQ,CAAC;QA8b5B,+BAA+B;QAC/B,yBAAoB,GAAG;YACrB,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iCAAiC,EAAC;aAC/D;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iCAAiC,EAAC;aAC/D;YACD,YAAY,EAAE;gBACZ,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sCAAsC,EAAC;aACpE;YACD,oBAAoB,EAAE;gBACpB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,+BAA+B,EAAC;gBAC5D,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAC;aAExD;YACD,4BAA4B,EAAE;gBAC5B,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,qCAAqC,EAAC;gBAClE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAC;aAExD;SACF;QA+BD,4BAA4B;QAE5B,yBAAoB,GAAG;YACrB,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,qBAAqB,EAAE;gBACpD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAE;gBAC/C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE;gBAChD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACvD;SACF;QA2MD,+BAA0B,GAAG;YAC3B,aAAa,EAAE;gBACb,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;gBAC1D,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE;aAC7C;YACD,eAAe,EAAE;gBACf,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,wBAAwB,EAAE;gBACvD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,oBAAoB,EAAE;aACnD;SACF;QAuED,oCAAoC;QACpC,sBAAiB,GAAG;YAClB,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAE;aAClD;YACD,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC7D;YACD,UAAU,EAAE;gBACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACzD;YACD,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0BAA0B,EAAE;aAC1D;YACD,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,8BAA8B,EAAE;aAC9D;YACD,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;gBAClD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,qBAAqB,EAAE;aACpD;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0BAA0B,EAAE;gBACzD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACpD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,qBAAqB,EAAE;gBACrD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,wBAAwB,EAAE;aACzD;YACD,aAAa,EAAE;gBACb,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAE;gBACvD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,wBAAwB,EAAE;gBACxD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC5D;SAEF;QA4ED,4BAAuB,GAAG;YACxB,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE;aAC5C;SACF;QAwfD,2BAAsB,GAAG;YACvB,iBAAiB,EAAE;gBACjB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,0BAA0B,EAAE;gBACxD,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,yCAAyC,EAAC;aACnE;SACF;QA8KD,0BAAqB,GAAG;YACtB,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;aACvD;YACD,YAAY,EAAE;gBACZ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,4BAA4B,EAAE;gBAC3D,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,wCAAwC,EAAE;gBACxE,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,kCAAkC,EAAE;aACjE;SACF;QAuBD,uBAAkB,GAAG;YACnB,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC5D;YACD,sBAAsB,EAAE;gBACtB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,oBAAoB,EAAE;gBACpB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,kBAAkB,EAAE;gBAClB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sCAAsC,EAAE;aACrE;YACD,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC5D;YACD,UAAU,EAAE;gBACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;gBAC5D,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,mCAAmC,EAAE;aAClE;SACF;QAiPD,mCAA8B,GAAG;YAC/B,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,wBAAwB,EAAE;aACxD;YACD,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACtD;YACD,eAAe,EAAE;gBACf,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC7D;SACF;QAwLD,sCAAiC,GAAG;YAClC,cAAc,EAAE;gBACd,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;YACD,aAAa,EAAE;gBACb,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC7D;YACD,eAAe,EAAE;gBACf,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,4BAA4B,EAAE;aAC5D;YACD,YAAY,EAAE;gBACZ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACzD;YACD,YAAY,EAAE;gBACZ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACzD;YACD,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,qBAAqB,EAAE;aACrD;SACF;QAqJD,4BAAuB,GAAG,EAAE,CAAC;QAC7B,6BAAwB,GAAG,EAAE,CAAC;IA5rEO,CAAC;IAlJpC,WAAW;QACR,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAqB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACpG,CAAC;IAqJH,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACpE,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,EAAC,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,EAAC,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACxF,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAE,gEAAgE;QAC5F,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,0DAA0D;QACvF,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,sCAAsC;QACxD,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,gEAAgE;QAC5F,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,+CAA+C;QACzE,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,mBAAmB;QACnD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC1B,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAqB,CAAC,YAAY,CAAC,UAAU,EAAC,UAAU,CAAC,CAAC;IAC5G,CAAC;IAED;;;OAGG;IAEH,kBAAkB;QAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,cAAc,EAAE,IAAI,wDAAS,CAAC;gBAC5B,QAAQ,EAAE,IAAI,wDAAS,CAAC;oBACtB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;wBAC5C,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,OAAO,CAAC,6BAA6B,CAAC;qBAClD,CAAC,CAAC;oBACH,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;wBAClD,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,OAAO,CAAC,8CAA8C,CAAC;qBACnE,CAAC,CAAC;oBACH,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;wBAC5C,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;qBACtE,CAAC,CAAC;iBACJ,CAAC;gBACF,QAAQ,EAAE,IAAI,wDAAS,CAAC;oBACtB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;wBAC5C,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,OAAO,CAAC,6BAA6B,CAAC;qBAClD,CAAC,CAAC;oBACH,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;wBAClD,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,OAAO,CAAC,8CAA8C,CAAC;qBACnE,CAAC,CAAC;oBACH,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ;wBAChE,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;qBACtE,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;YACF,yBAAyB,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACjD,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC5B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAE1B,CAAC;IACJ,CAAC;IAED;;;OAGG;IAEH,oBAAoB;QAClB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;YACxD,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrD,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,EAAC;wBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wBAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;qBAC/D;oBACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBACrC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;wBACpE,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;wBAC5D,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;wBACpE,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;wBAC9D,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;wBAC5D,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;wBAClD,cAAc,EAAE,IAAI,wDAAS,CAAC;4BAC5B,QAAQ,EAAE,IAAI,wDAAS,CAAC;gCACtB,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAC,yDAAU,CAAC,OAAO,CAAC;oCACpF,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,OAAO,CAAC,6BAA6B,CAAC;iCAClD,CAAC,CAAC;gCACH,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAC,yDAAU,CAAC,OAAO,CAAC;oCACxF,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,OAAO,CAAC,8CAA8C,CAAC;iCACnE,CAAC,CAAC;gCACH,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,EAAC,yDAAU,CAAC,OAAO,CAAC;oCAC/E,yDAAU,CAAC,QAAQ;oCACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iCACtE,CAAC,CAAC;6BACJ,CAAC;4BACF,QAAQ,EAAE,IAAI,wDAAS,CAAC;gCACtB,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAC,yDAAU,CAAC,OAAO,CAAC;oCACpF,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,OAAO,CAAC,6BAA6B,CAAC;iCAClD,CAAC,CAAC;gCACH,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAC,yDAAU,CAAC,OAAO,CAAC;oCACxF,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oCACxB,yDAAU,CAAC,OAAO,CAAC,8CAA8C,CAAC;iCACnE,CAAC,CAAC;gCACH,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,EAAC,yDAAU,CAAC,OAAO,CAAC;oCAC/E,yDAAU,CAAC,QAAQ;oCACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iCACtE,CAAC,CAAC;6BACJ,CAAC;yBACH,CAAC;wBACF,yBAAyB,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;wBACjD,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;wBAC5B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;qBAC1B,CAAC;iBACH;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IAEH,YAAY;QACV,IAAI;YACF,aAAa;YACb,IAAI,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC/E,IAAG,IAAI,CAAC,aAAa,KAAK,IAAI,EAAC;gBAC7B,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;oBAChC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;wBACjE,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACnD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;4BACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;4BAC5C,UAAU,CAAC,GAAG,EAAE;gCACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,2CAA2C,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gCAC3G,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;6BACI,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC3B,UAAU,CAAC,GAAG,EAAE;gCACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;oBACH,CAAC,CAAC;iBACH;aACF;iBAAM;gBACL,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;oBAChC,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;wBACpG,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACnD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;4BACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC/B,UAAU,CAAC,GAAG,EAAE;gCACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;6BACI,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC3B,UAAU,CAAC,GAAG,EAAE;gCACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;oBACH,CAAC,CAAC;iBACH;aACF;SAEF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,oDAAoD;IAEpD,qBAAqB,CAAC,MAAM;QAC1B,IAAG,MAAM,KAAK,KAAK,EAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aAAM,IAAG,MAAM,KAAK,IAAI,EAAC;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QAED,IAAG,IAAI,CAAC,SAAS,KAAK,IAAI,EAAC;YACzB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC;YACpF,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;YACzG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;YACrH,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;SAC1G;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAC;YAClC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC/E,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC1E;IACH,CAAC;IAED,oDAAoD;IAGpD;;;OAGG;IAEH,gBAAgB;QACd,IAAI;YACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,GAAG,EAAE,IAAI,wDAAS,CAAC;oBACjB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC,CAAC,CAAC;oBACnH,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBACrF,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC1B,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACvC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oBAC5F,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;oBACnC,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC,CAAC,CAAC;oBAC5I,mBAAmB,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;oBAC3C,0BAA0B,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC,CAAC,CAAC;oBACpJ,OAAO,EAAE,IAAI,wDAAS,CAAC;wBACrB,QAAQ,EAAE,IAAI,wDAAS,CAAC;4BACtB,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BACxC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BAClC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BACjC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BACtC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;yBACnC,CAAC;wBACF,MAAM,EAAE,IAAI,wDAAS,CAAC;4BACpB,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BACtC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BAClC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BACjC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;4BACtC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;yBACnC,CAAC;qBACH,CAAC;iBACH,CAAC;aACH,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED;;;OAGG;IAEH,OAAO;QACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QACxC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,GAAG,EAAE,IAAI,wDAAS,CAAC;oBACjB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC,CAAC,CAAC;oBACvI,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBACzG,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC7C,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;oBACvE,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oBACpH,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACnD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;oBACzD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC,CAAC,CAAC;oBAC5K,mBAAmB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC;oBACzE,0BAA0B,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,0BAA0B,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC,CAAC,CAAC;oBAC5L,OAAO,EAAE,IAAI,wDAAS,CAAC;wBACrB,QAAQ,EAAE,IAAI,wDAAS,CAAC;4BACtB,mBAAmB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC;4BAC1F,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC;4BAC9E,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;4BAC5E,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAC;4BACtF,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC;yBAC/E,CAAC;wBACF,MAAM,EAAE,IAAI,wDAAS,CAAC;4BACpB,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;4BACpF,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC;4BAC5E,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;4BAC1E,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;4BACpF,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC;yBAC7E,CAAC;qBACH,CAAC;iBACH,CAAC;aACH,CAAC;SACH;IACH,CAAC;IAED,0CAA0C;IAC1C,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;YACvD,IAAG,IAAI,CAAC,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;gBAClD,IAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAC;oBACrC,IAAI,CAAC,OAAO,GAAE,KAAK,CAAC;oBACpB,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC;oBACnB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;iBACnC;qBAAI;oBACH,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;oBAClC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC;oBACnB,IAAI,CAAC,OAAO,GAAE,KAAK,CAAC;oBACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACvC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IACD,mBAAmB;QACjB,IAAG;YACD,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACvE,IAAG,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAAC;gBACrC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC9E,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,WAAW,EAAE,CAAC;4BACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;iBAAM,IAAG,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAAC;gBAC5C,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC1E,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,WAAW,EAAE,CAAC;4BACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;SAEF;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IAEH,CAAC;IAED;;;;OAIG;IAEH,KAAK,CAAC,KAAa;QACnB,IAAI,iBAAiB,GAAG,EAAC,SAAS,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC,EAAC,CAAC;QACxI,IAAI,KAAK,KAAK,MAAM,EAAE;YACpB,IAAG,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAAC;gBACrC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/F,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,sBAAsB,EAAE,CAAC;aAC7E;iBAAM;gBACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/F,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,sBAAsB,EAAE,CAAC;aAC7E;SACF;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,eAAe,EAAE,CAAC;YACrE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,sBAAsB,EAAE,CAAC;SAC7E;IACH,CAAC;IAED;;;;OAIG;IAEH,OAAO,CAAC,KAAa;QACnB,IAAI,iBAAiB,GAAG,EAAC,SAAS,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC,EAAC;QACzI,IAAI,KAAK,KAAK,MAAM,EAAE;YACpB,IAAG,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAAC;gBACrC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,sBAAsB,EAAE,CAAC;aACrF;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACnE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,sBAAsB,EAAE,CAAC;aACrF;SACF;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,eAAe,EAAE,CAAC;YAC7E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,sBAAsB,EAAE,CAAC;SACrF;IACH,CAAC;IAuBD,oCAAoC;IAEpC;;;OAGG;IACH,iBAAiB;QACf,IAAI;YACF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,OAAO,EAAE,IAAI,wDAAS,CAAC;oBACrB,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAChC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAChC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC7B,gCAAgC;oBAChC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ;wBAClE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;wBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,yDAAU,CAAC,OAAO,CAAC,6BAA6B,CAAC;qBAClD,CAAC,CAAC;oBACH,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,SAAS,CAAC;iBACxC,CAAC;aACH,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAaD,6BAA6B;IAE7B,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAG;gBACrD,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE;oBACxE,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;oBAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,0BAA0B;IAE1B,aAAa;QACX,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;IAEvB,CAAC;IAED,kDAAkD;IAElD,WAAW;QACT,IAAG;YACD,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC7E,IAAG,IAAI,CAAC,SAAS,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,KAAI,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;gBAClF,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBACpF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,WAAW,EAAE,CAAC;4BACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,CAAC;qBACH;gBACH,CAAC,CAAC;aACH;iBAAI;gBACH,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAClG,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,WAAW,EAAE,CAAC;4BACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBAER;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,CAAC;qBACH;gBACH,CAAC,CAAC;gBACF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;SACF;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IAEH,CAAC;IAED;;;OAGG;IAEH,WAAW,CAAC,EAAS;QACnB,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAE;QAClB,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,EAAC;gBAC7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvC,OAAO,EAAE,IAAI,wDAAS,CAAC;wBACrB,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;wBACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBAC7D,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBAC7D,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;wBACvD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;wBACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;wBACvD,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBACjD,WAAW,EAAE,IAAI,0DAAW,CAAC,SAAS,CAAC;qBACxC,CAAC;iBACH,CAAC;aACH;SACF;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,yBAAyB;IAEzB,YAAY,CAAC,SAAgB;QAC3B,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;YAC1C,WAAW,EAAE;gBACb,aAAa,EAAE,iBAAiB;gBAChC,YAAY,EAAE,gBAAgB;aAC7B;YACD,cAAc,EAAE,KAAK;SACtB,CAAC;QACF,wBAAwB,CAAC,IAAI,CAAC;YAC5B,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,uBAAuB;YAC7B,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;oBACvE,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;oBACD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC;aACD;iBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;gBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,mBAAmB,EACnB,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,gDAAgD;IAGhD,6BAA6B;IAC7B,aAAa,CAAC,SAAS;QACrB,IAAI;YACF,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACzD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;iBACjC;YACH,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,+BAA+B;IAC/B,0BAA0B;QACxB,IAAI;YACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACpC,kBAAkB,EAAE,IAAI,wDAAS,CAAC;oBAChC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC/B,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAClC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;wBACjD,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC;qBACvC,CAAC,CAAC;oBACD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC3B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAChC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;wBACpD,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,OAAO,CAAC,yDAAyD,CAAC;qBAC9E,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAiBD,6BAA6B;IAC7B,OAAO;QACL,IAAI;YACF,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACzC,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;iBACrC;YACH,CAAC,CAAC;SACH;QACD,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,6BAA6B;IAC7B,cAAc,CAAC,SAAiB;QAC9B,IAAI;YACF,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACvD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;iBAC/B;YACH,CAAC,CAAC;SACH;QACD,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,uDAAuD;IACvD,QAAQ,CAAC,SAAS;QAChB,IAAI;YACF,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAC/B;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,0DAA0D;IAC1D,OAAO,CAAC,QAAQ;QACd,IAAI;YACF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;SACtC;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,MAAM,CAAC,OAAO;QACZ,OAAO,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB;IACrB,qBAAqB,CAAC,QAAgB;QACpC,IAAI;YACF,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACtD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;iBACvC;YACH,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAwCD,sDAAsD;IACtD,YAAY;QACV,IAAI;YACF,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC1C,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC1B;YACH,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,iBAAiB,CAAC,CAAC;QACjB,IAAI,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,OAAO,GAAG,SAAS,CAAC;QACxB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YAC7B,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACnC,OAAO;SACR;QACD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,mBAAmB,CAAC,CAAC;QACnB,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,MAAM;QACJ,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACpC,CAAC;IAED,OAAO,CAAC,CAAS;QACf,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IACD,oDAAoD;IAGpD,+BAA+B;IAC/B,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;gBACnD,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,aAAa,CAAC;aACvC;QACH,CAAC,CAAC;IACJ,CAAC;IACD,+BAA+B;IAE/B,kBAAkB;IAClB,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,oCAAoC;IACpC,mBAAmB;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,MAAM,EAAE,IAAI,wDAAS,CAAC;gBACpB,OAAO,EAAE,IAAI,wDAAS,CAAC;oBACrB,QAAQ,EAAE,IAAI,0DAAW,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACxD,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACzB,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC,CAAC,CAAC;oBAC7G,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC/B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC9B,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;iBAC5B,CAAC;aACH,CAAC;YACF,UAAU,EAAE,IAAI,0DAAW,CAAC,OAAO,CAAC;SACrC,CAAC;IACJ,CAAC;IASD,gBAAgB,CAAC,QAAe;QAC9B,IAAI;YACF,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtD,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;oBAC9C,OAAO,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAE/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBACnC,MAAM,EAAE,IAAI,wDAAS,CAAC;4BACpB,OAAO,EAAE,IAAI,wDAAS,CAAC;gCACrB,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;gCAClF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gCACrD,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC,CAAC,CAAC;gCACxI,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gCACjE,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gCAC/D,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;6BAC1D,CAAC;yBACH,CAAC;wBACF,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC;qBACjD,CAAC;iBACH;aACF;SACJ;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IAEH,CAAC;IACD,iBAAiB;IAEjB,gEAAgE;IAChE,iBAAiB;QACf,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAEnC,CAAC;IAED,2CAA2C;IAC3C,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,4CAA4C;IAC5C,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B,IAAI;YACJ,IAAI,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC1E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAC9B,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,KAAK,EAAE,EAAE;gBAC5C,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACrF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;4BACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;wBACR,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;qBAC9B;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE;wBAC3B,CAAC,EAAC,IAAI,CAAC,CAAC;qBACT;gBACH,CAAC,CAAC;aACD;iBACG;gBACF,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;oBAC5B,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;wBAC3H,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;4BACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC/B,UAAU,CAAC,GAAG,EAAE;gCACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;gCACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC5B,CAAC,EAAC,IAAI,CAAC;yBACR;6BAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC3B,UAAU,CAAC,GAAE,EAAE;gCACb,IAAI,CAAC,kBAAkB,EAAE;4BAC3B,CAAC,EAAC,IAAI,CAAC,CAAC;yBACT;oBACH,CAAC,CAAC;iBACH;aACF;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,oBAAoB;IACpB,gBAAgB;QACd,IAAI;YACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC9D,IAAI,QAAQ,CAAC,MAAM,KAAK,SAAS,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC5D,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;wBACrD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;qBAChD;yBAAM,IAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAC;wBACjD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;qBAC1B;iBACF;qBACI,IAAG,QAAQ,CAAC,MAAM,KAAK,OAAO,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;iBAC/D;YACH,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,kCAAkC;IAClC,mBAAmB,CAAC,QAAgB;QAClC,IAAI;YACF,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;gBAC1C,WAAW,EAAE;oBACX,aAAa,EAAE,iBAAiB;oBAChC,YAAY,EAAE,gBAAgB;iBAC/B;gBACD,cAAc,EAAE,KAAK;aACtB,CAAC;YACF,wBAAwB,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,uBAAuB;gBAC7B,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,iBAAiB,EAAE,KAAK;gBACxB,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;wBAC5E,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACpD,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;4BACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;yBAEzB;oBACH,CAAC,CAAC;iBACH;qBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;oBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,mBAAmB,EACnB,OAAO,CACR;iBACF;YACH,CAAC,CAAC;SACH;QACD,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAGD,8BAA8B;IAC9B,oBAAoB;QAClB,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC5B,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;oBACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAE,KAAK,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACtB;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IAGD,oBAAoB,CAAC,UAAiB;QACpC,IAAG,UAAU,GAAE,CAAC,IAAI,UAAU,IAAI,GAAG,EAAE;YACnC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACvB;aAAM,IAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,IAAI,CAAC,EAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC;YAC7C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACvB;aAAM,IAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,eAAe,GAAG,4BAA4B,CAAC;YACpD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACvB;aAAM;YACH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;SAC/C;IACH,CAAC;IAED,aAAa,CAAC,EAAE;QACd,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC;QACnB,sDAAsD;QACtD,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,iBAAiB,EAAC;gBACzD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACpC,kBAAkB,EAAE,IAAI,wDAAS,CAAC;wBAChC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;wBAC7D,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;wBACnE,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAC,yDAAU,CAAC,OAAO,CAAC;4BAChF,yDAAU,CAAC,QAAQ;4BACnB,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC;yBACvC,CAAC,CAAC;wBACD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;wBACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBAC/D,uEAAuE;wBACvE,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,yDAAU,CAAC,OAAO,CAAC;4BACrF,yDAAU,CAAC,QAAQ;4BACnB,yDAAU,CAAC,OAAO,CAAC,yDAAyD,CAAC;yBAChF,CAAC,CAAC;qBACF,CAAC;iBACH,CAAC;aACH;SACA;IACD,CAAC;IAED,eAAe,CAAC,EAAS;QACvB,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;YAC1C,WAAW,EAAE;gBACb,aAAa,EAAE,iBAAiB;gBAChC,YAAY,EAAE,gBAAgB;aAC7B;YACD,cAAc,EAAE,KAAK;SACtB,CAAC;QACF,wBAAwB,CAAC,IAAI,CAAC;YAC5B,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,uBAAuB;YAC7B,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;oBAClE,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;oBACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC9B,CAAC,CAAC;aACD;iBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;gBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,qBAAqB,EACrB,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,YAAY,GAAE,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACrC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;IAE/B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;IAC/B,CAAC;IAED,aAAa;QACX,IAAI;YACF,IAAI,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAClF,IAAG,IAAI,CAAC,iBAAiB,IAAI,GAAG,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAC;gBAC1G,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAClG,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;4BAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC,CAAC;qBAET;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC,CAAC;qBACT;gBACH,CAAC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,wBAAwB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAClH,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;4BAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC,CAAC;qBAET;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC,CAAC;qBACT;gBACH,CAAC,CAAC;gBACF,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAE;aAC9B;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,8BAA8B;IAG9B,2BAA2B;IAC3B,YAAY;QACV,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1D,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC5B,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;oBACvB,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;oBACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC;oBACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC;iBACtB;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,EAAE;QACd,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAChD,IAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,EAAC;gBACpD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACtC,eAAe,EAAE,IAAI,wDAAS,CAAC;wBAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBACnE,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBACnE,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,eAAe,EAAC,yDAAU,CAAC,OAAO,CAAC;4BAC5F,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC;4BAC9E,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC;yBACnB,CAAC,CAAC;wBACH,cAAc,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;wBACzE,cAAc,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;wBACzE,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;wBACjE,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBAC5D,CAAC;iBACH,CAAC;aACH;SACF;IACH,CAAC;IAED,eAAe,CAAC,EAAE;QAChB,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;YAC1C,WAAW,EAAE;gBACb,aAAa,EAAE,iBAAiB;gBAChC,YAAY,EAAE,gBAAgB;aAC7B;YACD,cAAc,EAAE,KAAK;SACtB,CAAC;QACF,wBAAwB,CAAC,IAAI,CAAC;YAC5B,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,uBAAuB;YAC7B,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;oBAClE,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;oBACD,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,CAAC;aACD;iBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;gBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,qBAAqB,EACrB,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;IACtB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;QACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,4BAA4B;IAC5B,UAAU;QACR,IAAI;YACF,IAAI,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACnF,IAAG,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAC;gBACpD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACrF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,YAAY,EAAE,CAAC;4BACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE;wBAC3B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC7G,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,YAAY,EAAE,CAAC;4BACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE;wBAC3B,CAAC,EAAC,IAAI,CAAC;qBACR;gBAEH,CAAC,CAAC;aACH;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAUD,oBAAoB;QAClB,IAAI;YACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtC,eAAe,EAAE,IAAI,wDAAS,CAAC;oBAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAChC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAChC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;wBACrD,yDAAU,CAAC,OAAO,CAAC,0DAA0D,CAAC;wBAC9E,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC;qBACnB,CAAC,CAAC;oBACH,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACnC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACnC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC/B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;iBAC7B,CAAC;aACH,CAAC;SACH;QACD,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IACD,6BAA6B;IAC7B,4BAA4B;IAI5B,gCAAgC;IAChC,WAAW;QACT,IAAG;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;gBAC3D,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAC;oBAChD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;oBAC3D,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;oBAC9D,IAAG,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EAAC;wBACnD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;qBAC9B;yBAAI;wBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,QAAQ,GAAE,KAAK,CAAC;qBACtB;iBACF;YACH,CAAC,CAAC;SACH;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC;QAClB,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,WAAW,EAAE,IAAI,wDAAS,CAAC;oBACvB,QAAQ,EAAE,IAAI,wDAAS,CAAC;wBACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACzD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;4BAC/G,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACnC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;wBACzE,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC;wBACvE,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;wBACzE,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC;wBAC3E,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAChE,CAAC;oBACF,QAAQ,EAAE,IAAI,wDAAS,CAAC;wBACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACzD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;4BAC/G,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACnC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;wBACzE,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC;wBACvE,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;wBACzE,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC;wBAC3E,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAClE,CAAC;iBACH,CAAC;aACH,CAAC;SACH;IACH,CAAC;IAED,mDAAmD;IAEnD,qBAAqB,CAAC,MAAM;QAC1B,IAAG,MAAM,KAAK,KAAK,EAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aAAM,IAAG,MAAM,KAAK,IAAI,EAAC;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QACD,IAAG,IAAI,CAAC,SAAS,KAAK,IAAI,EAAC;YACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC3E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC9F,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YAC1G,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YAC9G,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;YAC5G,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;SAErG;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAC;YAClC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC3E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC1E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACvE;IACH,CAAC;IAED,cAAc;QACZ,IAAI;YACF,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACtE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC9E,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC/B,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,EAAC,IAAI,CAAC;iBACR;qBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC3B,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,EAAC,IAAI,CAAC;iBACR;YACH,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,kBAAkB;QAChB,IAAI;YACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,WAAW,EAAE,IAAI,wDAAS,CAAC;oBACvB,QAAQ,EAAE,IAAI,wDAAS,CAAC;wBACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnE,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;4BAC/F,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACjC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBACjC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBAChC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBACjC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBAClC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;qBAC7B,CAAC;oBACF,QAAQ,EAAE,IAAI,wDAAS,CAAC;wBACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnE,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;4BAC7F,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACnC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBACjC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBAChC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBACjC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;wBAClC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;qBAC/B,CAAC;iBACH,CAAC;aACH,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAaD,gDAAgD;IAChD,gCAAgC;IAGhC,4CAA4C;IAC5C,iBAAiB;QACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,OAAO,EAAC,IAAI,wDAAS,CAAC;gBACpB,GAAG,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;gBAChH,oBAAoB,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBAC5D,kBAAkB,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBAC1D,gBAAgB,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;gBACxG,kBAAkB,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;gBACtC,SAAS,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBACjD,QAAQ,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;gBACrH,IAAI,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC;aAE9B,CAAC;SACH,CAAC;IACJ,CAAC;IAyBD,UAAU;QACR,IAAG;YACD,IAAG,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAC;gBACjC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC3F,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,eAAe,EAAE,CAAC;4BACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;iBAAM,IAAG,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAC;gBACxC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC/F,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,eAAe,EAAE,CAAC;4BACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;SACF;QAAA,OAAM,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,eAAe;QACb,IAAG;YACH,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC3D,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAC;oBAClD,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;oBACtD,IAAG,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAC;wBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;qBAClG;yBAAI;wBACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;wBAC9B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;qBAClG;iBACF;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC3B;YACH,CAAC,CAAC;SACD;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,kBAAkB;IAElB,aAAa;QACX,IAAG;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACxC,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC;iBACvC;YACH,CAAC,CAAC;SACH;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAE,KAAK,CAAC;QACxB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACxC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtC,OAAO,EAAC,IAAI,wDAAS,CAAC;oBACpB,GAAG,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;oBACrI,oBAAoB,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;oBAC9F,kBAAkB,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;oBAC1F,gBAAgB,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;oBAC1I,kBAAkB,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;oBAC1E,SAAS,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBACxD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;oBAChJ,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;iBAChD,CAAC;aACH,CAAC;SACH;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IAEzB,CAAC;IACD,4CAA4C;IAE5C,wDAAwD;IACxD,qBAAqB;QACnB,IAAG;YACH,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAClE,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAC;wBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;wBAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;wBAChC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;wBAC5B,IAAI,CAAC,yBAAyB,GAAG,oBAAoB,CAAC;wBACtD,qCAAqC;qBACtC;yBAAI;wBACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;wBACjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;wBAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;wBAC5B,sCAAsC;qBACvC;iBACF;YACH,CAAC,CAAC;SACD;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,qBAAqB;IAErB,eAAe;QACb,IAAG;YACD,IAAI,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YACvF,IAAG,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAC;gBAC/B,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBACxF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;wBAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;4BAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;wBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;iBAAM,IAAG,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAC;gBACtC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC/G,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;wBAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;4BAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;wBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;SACF;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,+BAA+B;IAE/B,yBAAyB,CAAC,cAAc;QACtC,IAAG;YACD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,yBAAyB,GAAG,uBAAuB,CAAC;YACzD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAClD,IAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,cAAc,EAAC;oBACjD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAC5C,SAAS,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC;wBAClG,OAAO,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC;wBAC9F,aAAa,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,aAAa,EAAC,yDAAU,CAAC,QAAQ,CAAC;wBAC1F,MAAM,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;qBACzD,CAAC;iBACH;aACF;SACF;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,iCAAiC;IACjC,gBAAgB;QACd,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5C,SAAS,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACjD,OAAO,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC/C,aAAa,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrD,MAAM,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAE;SAC5B,CAAC;IACJ,CAAC;IAED,uDAAuD;IACvD,mBAAmB;QACjB,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,yBAAyB,GAAG,oBAAoB,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,4CAA4C;IAC5C,kBAAkB;QAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;IACxC,CAAC;IAcD,4CAA4C;IAE5C,gDAAgD;IAChD,uBAAuB;QACrB,IAAG;YACH,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAErE,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;wBACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBACnC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;wBAC/B,IAAI,CAAC,qBAAqB,GAAG,8BAA8B,CAAC;wBAC5D,qCAAqC;qBACtC;yBAAI;wBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;wBAClC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;wBAC/B,sCAAsC;qBACvC;iBACF;YACH,CAAC,CAAC;SACD;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,gCAAgC;IAEhC,WAAW;QACT,IAAG;YACD,IAAI,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACrF,IAAG,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAC;gBAClC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC9F,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;wBAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,uBAAuB,EAAE,CAAC;4BAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;wBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;iBAAM,IAAG,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAC;gBACzC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBACxH,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;wBAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,uBAAuB,EAAE,CAAC;4BAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;wBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;gBACH,CAAC,CAAC;aACH;SACF;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,mCAAmC;IAEnC,4BAA4B,CAAC,QAAe;QAC1C,IAAG;YACD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,qBAAqB,GAAG,2BAA2B,CAAC;YACzD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC7C,IAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAC;oBACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBACvC,cAAc,EAAE,IAAI,wDAAS,CAAE;4BAC7B,YAAY,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,EAAC,yDAAU,CAAC,QAAQ,CAAC;4BACnF,WAAW,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAC,yDAAU,CAAC,QAAQ,CAAC;4BACjF,aAAa,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;4BACjE,UAAU,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;4BAC3D,UAAU,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC;4BAC/F,OAAO,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;yBACtD,CAAC;qBACH,CAAC;iBACH;aACF;SACF;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,sCAAsC;IACtC,oBAAoB,CAAC,OAAe;QAClC,IAAI;YACF,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;gBAC1C,WAAW,EAAE;oBACX,aAAa,EAAE,iBAAiB;oBAChC,YAAY,EAAE,gBAAgB;iBAC/B;gBACD,cAAc,EAAE,KAAK;aACtB,CAAC;YACF,wBAAwB,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,uBAAuB;gBAC7B,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,iBAAiB,EAAE,KAAK;gBACxB,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;wBAC7E,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;4BACpD,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;4BACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;yBAEhC;oBACH,CAAC,CAAC;iBACH;qBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;oBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,mBAAmB,EACnB,OAAO,CACR;iBACF;YACH,CAAC,CAAC;SACH;QACD,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,qEAAqE;IACrE,sBAAsB;QACpB,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;QACnD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IACD,oDAAoD;IACpD,sBAAsB;QACpB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;IAED,mCAAmC;IACnC,mBAAmB;QACjB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,cAAc,EAAE,IAAI,wDAAS,CAAC;gBAC5B,YAAY,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBACpD,WAAW,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBACnD,aAAa,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;gBACjC,UAAU,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;gBAC9B,UAAU,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBAClD,OAAO,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;aAC5B,CAAC;SACH,CAAC;IACJ,CAAC;IAsBD,8CAA8C;IAG9C,SAAS;QACP,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;IACpB,CAAC;IACD,wCAAwC;IAExC,kDAAkD;IAClD,iBAAiB;QACf,IAAG;YACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;gBACzD,IAAG,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAC;oBAChD,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;wBACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;wBAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;qBAC7B;yBAAI;wBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC9B,IAAI,CAAC,iBAAiB,GAAE,IAAI,CAAC;qBAC9B;iBACF;YACH,CAAC,CAAC;SACH;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACzC,IAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAC;gBAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACrC,cAAc,EAAC,IAAI,wDAAS,CAAC;wBAC3B,OAAO,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;wBACrD,MAAM,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;wBACnD,OAAO,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACtD,CAAC;iBACH,CAAC;aACH;SACF;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,gBAAgB;QACd,IAAI;YACF,IAAI,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAEnF,IAAG,IAAI,CAAC,mBAAmB,IAAI,EAAE,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,EAAC;gBACrE,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBACzF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC,CAAC;qBACT;gBACH,CAAC,CAAC;aACH;iBAAI;gBACH,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBACrH,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC;qBACR;yBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;wBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC3B,UAAU,CAAC,GAAE,EAAE;4BACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC,EAAC,IAAI,CAAC,CAAC;qBACT;gBACH,CAAC,CAAC;aACD;YACD,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;SAC/B;QAAC,OAAM,GAAG,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAGD,uBAAuB;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,cAAc,EAAC,IAAI,wDAAS,CAAC;gBAC3B,OAAO,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;gBAC3B,MAAM,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;gBAC1B,OAAO,EAAC,IAAI,0DAAW,CAAC,EAAE,CAAC;aAC5B,CAAC;SACH,CAAC;IACJ,CAAC;IAED,oBAAoB;QACpB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IAGD,gDAAgD;IAEhD,yBAAyB;IACzB,kBAAkB;QAChB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,cAAc;IACd,SAAS;QACP,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YACrC,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;gBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;aAChC;QACH,CAAC,CAAC;IACJ,CAAC;IAID,uDAAuD;IACvD,oBAAoB;QAClB,IAAG;YACD,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAChE,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC1C;YACH,CAAC,CAAC;YACF,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,oBAAoB;IACpB,eAAe;QACb,IAAG;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC9B,QAAQ,EAAE,CAAC,EAAE,CAAC;aACf,CAAC,CAAC;SACJ;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,cAAc;IACd,UAAU,CAAC,cAAc,EAAC,KAAK,EAAC,IAAI;QAClC,IAAG;YACD,IAAG,IAAI,KAAK,QAAQ,EAAC;gBACnB,IAAI,QAAQ,CAAC,cAAc,CAAC,GAAG,KAAK,EAAE,CAAqB,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAC;oBAC7E,kDAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;iBAChC;qBAAM;oBACL,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAC,cAAc,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;wBACjG,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;4BAC3B,CAAC,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;4BAC5D,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;4BACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;yBAC7B;6BAAM,IAAG,IAAI,CAAC,MAAM,KAAK,OAAO,EAAC;4BAC9B,kDAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC3B;oBACH,CAAC,CAAC;iBACH;aACF;iBAAM,IAAG,IAAI,KAAK,KAAK,EAAC;gBACvB,IAAI,QAAQ,CAAC,cAAc,CAAC,mBAAmB,KAAK,EAAE,CAAqB,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAC;oBAC7F,kDAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;iBAChC;qBAAM;oBACL,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAC,cAAc,EAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;wBACjG,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;4BAC3B,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;4BACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;4BAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;yBAC7B;6BAAM,IAAG,IAAI,CAAC,MAAM,KAAK,OAAO,EAAC;4BAC9B,kDAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC3B;oBACH,CAAC,CAAC;iBACH;aACF;SAEF;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,kCAAkC;IAClC,YAAY,CAAC,KAAK;QAClB,IAAG;YACD,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAChD;SACF;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACD,CAAC;IAED,yCAAyC;IACzC,oBAAoB;QAClB,IAAG;YACD,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;gBAClE,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,EAAC;oBAC3B,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC3C;YACH,CAAC,CAAC;SACH;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAElB;IACH,CAAC;IAED,wBAAwB;IACxB,SAAS,CAAC,QAAQ;QAChB,IAAG;YACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvB;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAED,2BAA2B;IAC3B,cAAc,CAAC,cAAc;QAC3B,IAAG;YACD,MAAM,wBAAwB,GAAG,kDAAI,CAAC,KAAK,CAAC;gBAC1C,WAAW,EAAE;oBACX,aAAa,EAAE,iBAAiB;oBAChC,YAAY,EAAE,gBAAgB;iBAC/B;gBACD,cAAc,EAAE,KAAK;aACtB,CAAC;YAEF,wBAAwB,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,uBAAuB;gBAC7B,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,iBAAiB,EAAE,KAAK;gBACxB,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,IAAI;gBACpB,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,cAAc,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;wBACnF,IAAG,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAC;4BACtD,wBAAwB,CAAC,IAAI,CAC3B,UAAU,EACV,IAAI,CAAC,OAAO,EACZ,SAAS,CACV;4BACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;4BAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;yBACzB;oBACL,CAAC,CAAC;iBACD;qBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;oBACA,wBAAwB,CAAC,IAAI,CAC3B,WAAW,EACX,uBAAuB,EACvB,OAAO,CACR;iBACF;YACH,CAAC,CAAC;SACH;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IAIK,eAAe,CAAC,cAAc;;YAClC,IAAG;gBACD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;aACtC;YAAA,OAAM,GAAG,EAAC;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;QACH,CAAC;KAAA;;gGAl/EY,wBAAwB;wGAAxB,wBAAwB;;;;;;;QClBrC,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,uEAA2G;QAAA,wEACxG;QAAA,4DAAI;QACX,4DAAK;QACL,kHACI;QAEJ,kHACI;QAEJ,kHACI;QAEJ,kHACI;QAGJ,oHACI;QAEJ,oHACI;QAEJ,oHACI;QAEJ,oHACI;QAEJ,oHACI;QAEJ,oHACI;QAEJ,oHACI;QAEJ,oHACI;QAER,4DAAK;QACL,iEACA;QAAA,iEACA;QAAA,0EACI;QACA,0EACI;QAAA,0EACI;QAAA,kHACI;QAER,4DAAM;QACN,0EACI;QAAA,mHACI;QAER,4DAAM;QACN,4EACI;QADsE,qJAAY,kBAAc,IAAC;QACjG,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAsC;QAAA,qEAAG;QAAA,gFAAoB;QAAA,4EAC9C;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACnC,8EACR;QADyG,yJAAU,iCAA6B,IAAC;QACjJ,8EAAyD;QAAA,sFAA0B;QAAA,4DAAS;QAC5F,6HAEI;QAEN,4DAAS;QACC,uHACI;QAUR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAsC;QAAA,qEAAG;QAAA,+EAAmB;QAAA,4EAC7C;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACnC,8EACR;QADyG,yJAAU,gCAA4B,IAAC;QAChJ,8EAAgD;QAAA,uFAEhD;QAAA,4DAAS;QACT,6HACI;QAEN,4DAAS;QACC,uHACI;QAUR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAsC;QAAA,qEAAG;QAAA,mFAAuB;QAAA,4EACjD;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACnC,8EACN;QAAA,8EAAgD;QAAA,2FAEhD;QAAA,4DAAS;QACX,6HACI;QAEN,4DAAS;QACC,uHACI;QAUR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAsC;QAAA,qEAAG;QAAA,mFAAuB;QAAA,4EACjD;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACnC,8EACN;QAAA,8EAAgD;QAAA,2FAEhD;QAAA,4DAAS;QACX,6HACI;QAEN,4DAAS;QACC,uHACI;QAUR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAsC;QAAA,qEAAG;QAAA,iFAAqB;QAAA,4EAC/C;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACnC,0EACI;QAAA,wEACA;QAAA,uHACI;QAQR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAsC;QAAA,qEAAG;QAAA,uEAAW;QAAA,4EAA6B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACrG,0EACI;QAAA,wEACA;QAAA,uHACI;QAQR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,sEAAI;QAAA,4EAAe;QAAA,4DAAK;QACxB,4EACI;QAAA,uEAAI;QAAA,gFAAmB;QAAA,4DAAK;QAC5B,8EAAsC;QAAA,sEAAG;QAAA,8EAAiB;QAAA,6EAA6B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QAC3G,2EACI;QAAA,yEACA;QAAA,yHACI;QAYR,4DAAM;QACN,8EAAsC;QAAA,sEAAG;QAAA,iFAAoB;QAAA,wEAAoC;QAAA,4DAAI;QAAA,4DAAQ;QAC7G,2EACI;QAAA,yEACA;QAAA,yHACI;QAYR,4DAAM;QACN,8EAAsC;QAAA,sEAAG;QAAA,0EAAa;QAAA,6EAA6B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACvG,2EACI;QAAA,yEACA;QAAA,yHACI;QAYR,4DAAM;QACN,kEACJ;QAAA,4DAAM;QAEN,8EAAoF;QAA7C,mJAAU,wCAAgC,IAAC;QAAlF,4DAAoF;QAAA,sFAAwB;QAAA,kEAAI;QAAA,kEAEhH;QAAA,uEAAI;QAAA,gFAAmB;QAAA,4DAAK;QAC5B,4EACI;QAAA,8EAAsC;QAAA,sEAAG;QAAA,8EAAiB;QAAA,wEAAoC;QAAA,4DAAI;QAAA,4DAAQ;QAC1G,2EACI;QAAA,yEACA;QAAA,yHACI;QAYR,4DAAM;QACN,8EAAsC;QAAA,sEAAG;QAAA,iFAAoB;QAAA,wEAAoC;QAAA,4DAAI;QAAA,4DAAQ;QAC7G,2EACI;QAAA,yEACA;QAAA,yHACI;QAYR,4DAAM;QACN,8EAAsC;QAAA,sEAAG;QAAA,0EAAa;QAAA,6EAA6B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAQ;QACvG,2EACI;QAAA,yEACA;QAAA,yHACI;QAYR,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,yEAAmE;QAAA,8GACvE;QAAA,4DAAM;QAEN,yHACI;QAEJ,yHACI;QAQJ,yHACI;QAWR,4DAAM;QAEN,4EACI;QAAA,4EACI;QAAA,+EACV;QAD+F,gSAAS,eAAc,IAAC;QACvH,yDACA;QAAA,4DAAS;QACH,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QAIN,+EACI;QACA,yHAEI;QA2EJ,2EACI;QAAA,oHACI;QAER,4DAAM;QACN,2EACI;QAAA,qHACI;QAER,4DAAM;QACN,8HACI;QA+QR,4DAAM;QAIN,4EACI;QAAA,4EACI;QAAA,6EACA;QACA,0HACI;QAgCV,0HACI;QAwGE,4DAAM;QACN,+HAA6G;QACjH,4DAAM;QAIN,4EACI;QACA,0HACI;QAiCJ,2HACI;QAyGJ,qHAA6G;QACjH,4DAAM;QAIN,4EACI;QAAA,4EACI;QAAA,0HACI;QA+BJ,0HACI;QAmCR,4DAAM;QACV,4DAAM;QAIN,4EACI;QACA,yHACI;QAmDJ,2EACI;QAAA,oHACI;QAER,4DAAM;QACN,2EACI;QAAA,qHACI;QAER,4DAAM;QACN,6HACI;QAkIR,4DAAM;QAIN,4EACI;QACA,0HACI;QA8BJ,2HACI;QA8EJ,qHAAwG;QAE5G,4DAAM;QAIN,uEAGM;QAIN,4EACI;QAAA,6EACA;QAAA,0HACI;QAiCJ,2HACI;QA8EJ,+HAA6H;QACjI,4DAAM;QAIN,4EACI;QACA,yHACI;QAyCJ,2EACI;QAAA,oHACI;QAER,4DAAM;QACN,2EACI;QAAA,qHACI;QAER,4DAAM;QACN,6HACI;QAgIR,4DAAM;QAIN,4EACI;QACA,0HACI;QA2BJ,0HACI;QAoCJ,+HAAyH;QAC7H,4DAAM;QAIN,4EACI;QAAA,4EACI;QAAA,6EACA;QACA,0HACI;QA+BJ,0HACI;QAmFR,4DAAM;QACN,+HAA4H;QAChI,4DAAM;QAGN,4EACI;QAAA,4EACI;QAAA,6EACA;QACA,0HACI;QAiCJ,2HACI;QAmGR,4DAAM;QACN,+HAAkI;QACtI,4DAAM;QAGV,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,2EAAwB;QAAA,4EAAe;QAAA,4DAAK;QAChD,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,2EACI;QAAA,4EACI;QAAA,8EACI;QAAA,8EACI;QAAA,uEACI;QAAA,uEAAI;QAAA,6EAAgB;QAAA,4DAAK;QACzB,uEAAI;QAAA,mEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,0EACI;QAAA,uEACI;QAAA,uEAAK;QAAA,8EAAkI;QAAlD,yJAAU,wBAAoB,IAAC;QAA/G,4DAAkI;QAAA,4DAAK;QAC5I,uEACI;QAAA,+EACpB;QADsE,kJAAS,mCAA0B,wBAAwB,EAAC,QAAQ,CAAC,IAAC;QAC5I,qEAAmC;QAAC,qEACtC;QAAA,4DAAS;QACS,4DAAK;QACT,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,+EAAmH;QAAA,kEAAK;QAAA,4DAAS;QACrI,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjjEmB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAIrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAGrB,0DAAqB;QAArB,mFAAqB;QAUJ,0DAAgB;QAAhB,8EAAgB;QAKf,0DAAsB;QAAtB,oFAAsB;QAIf,0DAA+B;QAA/B,4FAA+B;QASnC,2DAAuC;QAAvC,wFAAuC;QAKxD,0DAAsD;QAAtD,oGAAsD;QAqBrC,2DAAiC;QAAjC,mFAAiC;QAIlD,0DAAqD;QAArD,mGAAqD;QAqBpC,2DAAyC;QAAzC,uFAAyC;QAI1D,0DAAyD;QAAzD,uGAAyD;QAuBxC,2DAAyC;QAAzC,uFAAyC;QAI1D,0DAAyD;QAAzD,uGAAyD;QAmBrD,2DAAiD;QAAjD,+FAAiD;QAiBjD,2DAAgD;QAAhD,8FAAgD;QAc7C,0DAA8D;QAA9D,2HAA8D;QAKzE,2DAAkD;QAAlD,gGAAkD;QAiBlD,0DAAwD;QAAxD,sGAAwD;QAiBxD,0DAAkD;QAAlD,gGAAkD;QAoBvC,0DAA8D;QAA9D,2HAA8D;QAIzE,0DAAkD;QAAlD,gGAAkD;QAiBlD,0DAAwD;QAAxD,sGAAwD;QAiBxD,0DAAkD;QAAlD,gGAAkD;QAoBtD,0DAAgC;QAAhC,8FAAgC;QAGY,0DAAgB;QAAhB,8EAAgB;QAS5D,0DAAsD;QAAtD,oGAAsD;QAgBT,0DAAsC;QAAtC,mGAAsC;QAC9F,0DACA;QADA,2FACA;QAUgB,0DAAe;QAAf,6EAAe;QA8EC,0DAAgB;QAAhB,8EAAgB;QAKf,0DAAsB;QAAtB,oFAAsB;QAI6D,0DAAe;QAAf,6EAAe;QAsRhF,0DAAoB;QAApB,wFAAoB;QAEd,0DAAkB;QAAlB,gFAAkB;QAiC1E,0DAAiB;QAAjB,+EAAiB;QA0GkB,0DAAiB;QAAjB,+EAAiB;QAOI,0DAAgB;QAAhB,8EAAgB;QAkClE,0DAAqB;QAArB,mFAAqB;QA0GK,0DAAoB;QAApB,kFAAoB;QAOQ,0DAA0C;QAA1C,wGAA0C;QAgC1C,0DAA2C;QAA3C,yGAA2C;QA2CpF,0DAAgB;QAAhB,8EAAgB;QAqDA,0DAAgB;QAAhB,8EAAgB;QAKf,0DAAsB;QAAtB,oFAAsB;QAIwD,0DAAgB;QAAhB,8EAAgB;QAyI1E,0DAAqB;QAArB,mFAAqB;QA+BvE,0DAAsB;QAAtB,oFAAsB;QA+EE,0DAAiB;QAAjB,+EAAiB;QAcD,0DAA2B;QAA3B,+FAA2B;QACP,0DAAe;QAAf,6EAAe;QAkC3E,0DAAgB;QAAhB,8EAAgB;QA+EC,0DAA2B;QAA3B,yFAA2B;QAO/B,0DAAmB;QAAnB,iFAAmB;QA2CH,0DAAgB;QAAhB,8EAAgB;QAKf,0DAAsB;QAAtB,oFAAsB;QAI4C,0DAAmB;QAAnB,iFAAmB;QAuIjE,0DAAyB;QAAzB,uFAAyB;QA4B3E,0DAAyB;QAAzB,uFAAyB;QAqCW,0DAAsB;QAAtB,oFAAsB;QAOV,0DAAoB;QAApB,wFAAoB;QAEd,0DAAyB;QAAzB,uFAAyB;QAgC3E,0DAAyB;QAAzB,uFAAyB;QAqFM,0DAA0B;QAA1B,wFAA0B;QAMb,0DAAoB;QAApB,wFAAoB;QAEd,0DAAoB;QAApB,kFAAoB;QAkCtE,0DAAoB;QAApB,kFAAoB;QAqGc,0DAA6B;QAA7B,2FAA6B;;6FDv/D3E,wBAAwB;cANpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;0yBAO2C,QAAQ;kBAAjD,uDAAS;mBAAC,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;;;;;;;;;;;;;AEvB1C;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCPpC,2EAA+B;;6FDOlB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD","file":"employee-wizard-employee-wizard-module-es2015.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\nimport { state } from '@angular/animations';\nimport { ApiService } from 'src/app/services/api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employeeList = new Array();\n  filterEmployeeDataMsg = '';\n  setPasswordForm: any;\n  passwordFlag: Boolean;\n  errMessage: String;\n  successFlag: Boolean;\n  successMsg: String;\n  employeeId: String;\n  minPasswordLength: number = 8;\n  maxPasswordLength: number = 14;\n  companyTlList: any;\n  companyEmployeeTlList: any;\n  assignTlForm: any;\n  status = \"Active\";\n  employeeLabelName = 'Active Employees';\n  activeStatus = 'Inactive';\n  url: any;\n  userAvatar: any;\n  filterEmployeeList = [];\n  statusStatus = false;\n  permissionInfo: any;\n\n  constructor(public fb: FormBuilder,\n    private api: EmployeeService,\n    public ngZone: NgZone,\n    private router: Router,\n    private route: ActivatedRoute,\n    private uploadAvatarAPI: ApiService,\n    private util: UtilitiesService\n    ) { }\n\n  ngOnInit() {\n    this.assignTLForm();\n    this.getEmployeeListData();\n    this.passwordFormValidation();\n    this.getTlList();\n    this.userProfileForm();\n    this.permissionInfo = this.util.permissionRoleInfo;\n\n  }\n\n  updateFunction(){\n    try {\n      if(this.permissionInfo.search('Create Employees') === -1){\n        (document.getElementById('updateEmployeePermission')as HTMLAnchorElement).classList.add('disabled');\n      } else {\n        (document.getElementById('updateEmployeePermission')as HTMLAnchorElement).classList.remove('disabled');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getEmployeeListData() {\n    try {\n      this.api.getEmployeeList(this.status).subscribe(data => {\n          if (data.status === \"success\") {\n            if(data.data.length === 0){\n              if(this.status === 'Active'){\n                (document.getElementById('employeeStatus')as HTMLInputElement).value = \"Inactive\";\n                (document.getElementById('filterClick')as HTMLElement).click();\n              } else if(this.status === 'Inactive'){\n                this.api.employeeCount().subscribe((data)=>{\n                  if(data.status === 'success'){\n                    if(data.data === 0){\n                      this.router.navigateByUrl(\"/pages/employee-wizard/employee-profile\");\n                    } else {\n                      this.filterEmployeeDataMsg = 'No Data Found';\n                      this.employeeList = [];\n                      this.filterEmployeeList = [];\n                    }\n                  }\n                })\n              }\n            } else {\n              this.employeeList = data.data;\n              this.filterEmployeeList = data.data;\n              this.filterEmployeeDataMsg = '';\n            }\n        }\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  passwordFormValidation() {\n    try {\n      this.setPasswordForm = this.fb.group({\n        password: new FormControl(null, Validators.compose([\n          Validators.minLength(8),\n          Validators.maxLength(14),\n          Validators.required,\n          Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8}$') //this is for the letters both uppercase & lowercase and numbers.\n        ])),\n        passwordConfirmation: new FormControl(null, Validators.compose([\n          Validators.required,\n          RxwebValidators.compare({ fieldName: 'password' })\n        ]))\n      });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSelect(value: String, type) {\n    try {\n      this.employeeId = value;\n      if(type === 'Assign'){\n        this.resetModal('Assign');\n        if(this.companyTlList.length === 0){\n          setTimeout(()=>{\n          (document.getElementById('dismissTLModal')as HTMLElement).click();\n          },0)\n          Swal.fire('Add TL/Manager First');\n        }\n      } else if(type === 'setPassword'){\n        this.resetModal('setPassword');\n      } else if(type === 'UnAssign'){\n        this.employeeTlList();\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n  }\n\n  setPasswordFormData() {\n    try {\n      if (this.setPasswordForm.valid) {\n        this.api.setPassword(this.setPasswordForm.value, this.employeeId).subscribe(data => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successFlag = true;\n            this.successMsg = data.message;\n            this.passwordFlag = false;\n            setTimeout(() => {\n              this.ngZone.run(() => this.router.navigateByUrl('/pages/employee-wizard/employee-list'));\n              this.handleErrroMessage();\n              (document.getElementById('dismissSetPassword')as HTMLElement).click();\n            }, 2000)\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.passwordFlag = true;\n            this.successFlag = false;\n            this.errMessage = data.message;\n            setTimeout(()=>{\n              this.handleErrroMessage();\n              (document.getElementById('dismissSetPassword')as HTMLElement).click();\n            },3000)\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //For resetFunctionality of employee fields\n  resetFunctionality(){\n    (document.getElementById('listEmployee') as HTMLInputElement).value = \"\";\n    (document.getElementById('employeeStatus') as HTMLInputElement).value = \"Active\";\n    this.status = 'Active';\n    this.activeStatus = 'Inactive';\n    this.filterEmployeeDataMsg = '';\n    this.statusStatus = false;\n    this.getEmployeeListData();\n  }\n\n  // filterFunctionality of employee fields list\n  filterFunctionality(){\n    try{\n\n      let employeeId = (document.getElementById('listEmployee') as HTMLInputElement).value;\n      let status = (document.getElementById('employeeStatus') as HTMLInputElement).value;\n\n      if(employeeId.length != 0){\n        status = '';\n        this.filterEmployeeDetails(employeeId);\n      }\n      if(status === \"Active\"){\n        this.status = 'Active';\n        this.activeStatus = 'Inactive';\n        this.employeeLabelName = 'Active Employees';\n        this.getEmployeeListData();\n      } else if(status === 'Inactive'){\n        this.status = 'Inactive';\n        this.activeStatus = 'Active';\n        this.employeeLabelName = 'Inactive Employees';\n        this.getEmployeeListData();\n      }\n\n    }catch(err){\n      console.log(err);\n    }\n\n  }\n\n  //For print Validation and error message.\n  validationErrorMessage = {\n    'password': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minlength', message: `Password must be at least ${this.minPasswordLength} characters long` },\n      { type: 'maxlength', message: `Password should not be greater than ${this.maxPasswordLength} characters` },\n      { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, one digit and one special characters' }\n    ],\n    'passwordConfirmation': [\n      { type: 'required', message: 'Confirm Password is required' },\n      { type: 'compare', message: 'Passwords do not match' },\n    ],\n  }\n\n  // Company Tl List\n  getTlList(){\n    try{\n      this.api.getTlList().subscribe((data)=>{\n        if(data.status === 'success'){\n          this.companyTlList = data.data;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n// Assign Tl list form\nassignTLForm(){\n  try{\n    this.assignTlForm = this.fb.group({\n      parentIdsData: new FormGroup({\n        userId: new FormControl(''),\n        parentUserId: new FormControl('',Validators.required)\n      })\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\nassignTLValidation = {\n  'parentUserId': [\n    { type: 'required', message: 'TL/Manager Name is Required' }\n  ]\n}\n\n// Assign And Unassign TL ID\nactionOnTl(tlId,type){\ntry{\n  if(type === 'Assign'){\n    this.assignTlForm.get('parentIdsData.userId').setValue(this.employeeId);\n    this.assignTlForm.get('parentIdsData.parentUserId').setValue(tlId);\n  }\n} catch(err){\n  console.log(err);\n}\n}\n\n// Submit Assign TL Form\nassignTl(){\n  try{\n      this.api.assignTl(this.assignTlForm.value,this.employeeId).subscribe((data)=>{\n        if(data.status === \"success\"){\n          this.successFlag = true;\n          this.successMsg = data.message;\n          this.passwordFlag = false;\n          setTimeout(() => {\n            this.ngZone.run(() => this.router.navigateByUrl('/pages/employee-wizard/employee-list'));\n            (document.getElementById('dismissTLModal')as HTMLElement).click();\n            this.handleErrroMessage();\n          }, 2000)\n        } else if(data.status === 'error'){\n          this.passwordFlag = true;\n          this.successFlag = false;\n          this.errMessage = data.message;\n          setTimeout(()=>{\n            (document.getElementById('dismissTLModal')as HTMLElement).click();\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Error Handling Message\nhandleErrroMessage(){\n  this.successFlag = false;\n  this.passwordFlag = false;\n  this.successMsg = '';\n  this.errMessage = '';\n}\n\nresetModal(type){\n  try{\n    if(type === 'Assign'){\n      this.assignTlForm.reset();\n    } else if(type === 'setPassword'){\n      this.setPasswordForm.reset();\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Unassign TL\nunassignTL(tlId){\n  try{\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to UnAssign TL/Manager\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.value) {\n        this.api.unassignTl(this.employeeId,tlId).subscribe((data)=>{\n          if(data.status === \"success\"){\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          data.message,\n          'success'\n        )\n        setTimeout(()=>{\n          (document.getElementById('dismissUnAssignTLModal') as HTMLElement).click();\n        },0)\n          }\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          \"Didn't UnAssign TL/Manager\",\n          'error'\n        )\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n//Employee TL List\nemployeeTlList(){\n  try{\n    this.api.employeeTlList(this.employeeId).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.parentUsersIds.length === 0){\n          setTimeout(()=>{\n            (document.getElementById('dismissUnAssignTLModal') as HTMLElement).click();\n          },0)\n          Swal.fire('Nothing to UnAssign');\n        } else {\n          this.companyEmployeeTlList = data.data.parentUsersIds;\n        }\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Change Status\nchangeStatus(){\n  try{\n    (document.getElementById('listEmployee') as HTMLInputElement).value = \"\";\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Get Employee Details\nfilterEmployeeDetails(employeeId){\n  try{\n    this.api.filterEmployeeList(employeeId).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeList = [];\n        this.employeeList.push(data.data);\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\nstatusConfirmationMessage(value: String){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: 'btn btn-success',\n      cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: `You want to ${this.activeStatus} the employee status`,\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true,\n    allowOutsideClick: false,\n  }).then((result) => {\n    if (result.value) {\n      this.api.updateEmployeeStatus(value,this.activeStatus).subscribe((data)=>{\n        if(data.status === \"success\"){\n      swalWithBootstrapButtons.fire(\n        'Employee Status!',\n        data.message,\n        'success'\n      )\n      this.filterFunctionality();\n        }\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        \"Employee Status didn't changed\",\n        'error'\n      )\n    }\n  })\n}\n\nonSelectFile(event,employeeId) {\n  if (event.target.files && event.target.files[0]) {\n    var reader = new FileReader();\n\n    reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n    reader.onload = (event: any) => { // called once readAsDataURL is completed\n      for(var i=0; i<this.employeeList.length; i++){\n        if(this.employeeList[i]._id == employeeId){\n          this.url = this.employeeList[i].avatar;\n          this.employeeList[i].avatar = event.target.result;\n          break;\n        }\n      }\n    }\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.userAvatar.get('avatar').setValue(file);\n      // Open Modal\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to change your profile picture\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true,\n        allowOutsideClick: false,\n      }).then((result) => {\n        if (result.value) {\n        this.uploadAvatarAPI.uploadProfileImage(this.userAvatar,'Employee',employeeId).subscribe((data)=>{\n          if(data.status === 'success'){\n            swalWithBootstrapButtons.fire(\n              'Uploaded!',\n              data.message,\n              'success'\n            )\n          }\n        })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your profile not changed',\n            'error'\n          )\n          for(var i = 0; i<this.employeeList.length;i++){\n            if(this.employeeList[i]._id == employeeId){\n              this.employeeList[i].avatar = this.url;\n              break;\n            }\n          }\n        }\n      })\n\n    }\n  }\n}\n\n// Profile Image Form\nuserProfileForm(){\n  try {\n    this.userAvatar = this.fb.group({\n      avatar: ['']\n    })\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Update the filter functionality\nemployeeFilter(){\n  try {\n    if((document.getElementById('listEmployee')as HTMLInputElement).value.length !==0){\n      this.statusStatus = true;\n    } else {\n      this.statusStatus = false;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n}\n\n\n\n","<div class=\"card\">\n  <div class=\"card-header\">\n    <h2 class=\"text-center\">Employee List</h2>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"form-row\">\n      <div class=\"col-lg-3 col-md-3 col-sm-4\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>{{ employeeLabelName }}</b></label>\n          <select class=\"dropdown dropdown-toggle form-control\" id=\"listEmployee\" (change)=\"employeeFilter()\">\n            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee</option>\n            <option class=\"dropdown-item\" *ngFor=\"let employee of filterEmployeeList\" value=\"{{employee._id}}\">\n              {{employee.name}}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-4\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>Status:</b></label>\n          <select class=\"dropdown dropdown-toggle form-control\" id=\"employeeStatus\" (change)=\"changeStatus()\"\n            [disabled]=\"statusStatus\">\n            <option class=\"dropdown-item\" ng-selected=\"true\" value=\"Active\" selected>Active</option>\n            <option class=\"dropdown-item\" ng-selected=\"true\" value=\"Inactive\">Inactive</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"col-lg-3 col-md-3 col-sm-4\">\n        <div class=\"form-group right-buttongroup\">\n        <button class=\"btn btn-primary\" id=\"filterClick\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp; Filter</button>\n        <button class=\"btn btn-danger\"  (click)=\"resetFunctionality()\"><i class=\"fas fa-trash-restore\"></i>&nbsp; Reset</button>\n      </div>\n    </div>\n\n\n    <div class=\"col-lg-3 col-md-3 col-sm-3\">\n      <div class=\"form-group right-buttongroup\" >\n          <a [class.disabled]=\"permissionInfo.search('Create Employees') === -1\" class=\"btn btn-primary\" routerLink=\"../employee-profile\" style=\"float: right;\" ><i class=\"fa fa-plus-square\"></i>&nbsp; Add Employee</a>\n      </div>\n    </div>\n    </div>\n\n\n  \n\n   \n\n  </div>\n\n  <div class=\"panel-body\">\n    <ul class=\"list-group\">\n        <table class=\"table\" style=\"text-align: center;\">\n          <thead class=\" text-primary\">\n            <tr>\n              <th> Profile </th>\n              <th>Employee Name</th>\n              <th>Department</th>\n              <th>Job Profile</th>\n              <th>Contact Info</th>\n              <th>Age</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody *ngFor=\"let list of employeeList\">\n            <tr>\n              <!-- <td><img style=\"height: 50px; width: 50px;\"\n                  src=\"{{ list.avatar }}\">\n\n              </td> -->\n              <td>\n                <div class=\"image-container\">\n                  <img [src]='list.avatar' id=\"imgProfile\" style=\"width: 60px; height: 50px\" class=\"rounded-circle\" />\n                  <div class=\"middle\">\n                    <input type=\"file\" style=\"display: none;\" accept=\"image/*\" id=\"profilePicture\" #file\n                      (change)=\"onSelectFile($event,list._id)\" />\n                    <input type=\"button\" id=\"btnChangePicture\" value=\"Change\" (click)=\"file.click()\" />\n                  </div>\n                </div>\n              </td>\n              <td> {{ list.name }} </td>\n              <td> {{list.departmentName}}</td>\n              <td> {{ list.jobProfile }}</td>\n              <td> {{ list.email}} </td>\n              <td> {{ list.age }}</td>\n              <td>\n                <div class=\"dropdown\">\n                  <a class=\"text-secondary\" href=\"javascript:void(0);\" (click)=\"updateFunction() \"\n                    id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i\n                      class=\"fa fa-ellipsis-h\"></i> </a>\n                  <div class=\"dropdown-menu dropdown-menu-right\" style=\"background-color: rgb(190, 230, 231)\"\n                    aria-labelledby=\"dropdownMenuButton\">\n                    <a class=\"dropdown-item\" id=\"updateEmployeePermission\"\n                      routerLink=\"../employee-profile/{{ list._id }}\"><i\n                        class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</a>\n\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\" data-toggle=\"modal\" data-target=\"#myModal\"\n                      data-backdrop=\"static\" (click)=\"onSelect(list._id,'setPassword')\"><i\n                        class=\"fa fa-key\"></i>&nbsp;Set Password</a>\n\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\" data-toggle=\"modal\" data-target=\"#assignTL\"\n                      data-backdrop=\"static\" (click)=\"onSelect(list._id,'Assign')\"><i\n                        class=\"fas fa-user-plus\"></i>&nbsp;Assign TL/Manager</a>\n\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\" data-toggle=\"modal\" data-target=\"#unAssignTL\"\n                      data-backdrop=\"static\" (click)=\"onSelect(list._id,'UnAssign')\"><i\n                        class=\"fas fa-user-slash\"></i>&nbsp;UnAssign TL/Manager</a>\n\n                    <a *ngIf=\"activeStatus === 'Inactive' \" href=\"javascript:void(0);\" class=\"dropdown-item\"\n                      (click)=\"statusConfirmationMessage(list._id)\">\n                      <i class=\"fas fa-battery-half\"></i>&nbsp;{{ activeStatus }}</a>\n                    <a *ngIf=\"activeStatus === 'Active' \" href=\"javascript:void(0);\" class=\"dropdown-item\"\n                      (click)=\"statusConfirmationMessage(list._id)\">\n                      <i class=\"fas fa-battery-full\"></i>&nbsp;{{ activeStatus }}</a>\n                  </div>\n                </div>\n              </td>\n            </tr>\n        </table>\n\n    </ul>\n  </div>\n  <div *ngIf=\"filterEmployeeDataMsg.length != 0\">\n    <h3 style=\"text-align: center;\">{{ filterEmployeeDataMsg }}</h3>\n  </div>\n</div>\n\n<!-- The Modal -->\n<div class=\"modal\" id=\"myModal\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Set Password</h4>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\n      </div>\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"passwordFlag\">\n          <strong>{{ errMessage }}</strong>\n        </p>\n      </div>\n\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n          <strong>{{ successMsg }}</strong>\n        </p>\n      </div>\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <form role=\"form\" [formGroup]=\"setPasswordForm\" (ngSubmit)=\"setPasswordFormData()\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Password:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n\n            <input type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" class=\"form-control\" />\n            <div *ngFor=\"let validation of validationErrorMessage.password\">\n              <div\n                *ngIf=\"setPasswordForm.get('password').hasError(validation.type) && (setPasswordForm.get('password').dirty || setPasswordForm.get('password').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-sm-8 control-label\"><b>Confirm Password:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n            <input type=\"password\" formControlName=\"passwordConfirmation\" placeholder=\"Confirm Password\"\n              class=\"form-control\" />\n            <div *ngFor=\"let validation of validationErrorMessage.passwordConfirmation\">\n              <div\n                *ngIf=\"setPasswordForm.get('passwordConfirmation').hasError(validation.type) && (setPasswordForm.get('passwordConfirmation').dirty || setPasswordForm.get('passwordConfirmation').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <!-- <div class=\"col-sm-10\"> -->\n            <button type=\"submit\" class=\"btn btn-success\" style=\"float:right;\"\n              [disabled]=!setPasswordForm.valid>Submit</button>\n            <button type=\"button\" id=\"dismissSetPassword\" class=\"btn btn-danger\" style=\"float:right;\"\n              data-dismiss=\"modal\">Close</button>\n            <!-- </div> -->\n          </div>\n        </form>\n      </div>\n\n      <!-- Modal footer -->\n      <!-- <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n      </div> -->\n\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" id=\"assignTL\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Assign TL/Manager</h4>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\n      </div>\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"passwordFlag\">\n          <strong>{{ errMessage }}</strong>\n        </p>\n      </div>\n\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n          <strong>{{ successMsg }}</strong>\n        </p>\n      </div>\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <form role=\"form\" [formGroup]=\"assignTlForm.get('parentIdsData')\" (ngSubmit)=\"assignTl()\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>TL/Manager Name:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n            <select class=\"dropdown dropdown-toggle form-control\" Name=\"AssignTL\" formControlName=\"parentUserId\"\n              (change)=\"actionOnTl($event.target.value,'Assign')\">\n              <option class=\"dropdown-item\" value=\"null\" selected disabled>-----Select TL/Manager-----</option>\n              <option class=\"dropdown-item\" *ngFor=\"let companyTL of companyTlList\" selected=\"{{ companyTL.name }}\"\n                value=\"{{ companyTL._id }}\">\n                {{ companyTL.name }}\n              </option>\n            </select>\n            <div *ngFor=\"let validation of assignTLValidation.parentUserId\">\n              <div\n                *ngIf=\"assignTlForm.get('parentIdsData.parentUserId').hasError(validation.type) && (assignTlForm.get('parentIdsData.parentUserId').dirty || assignTlForm.get('parentIdsData.parentUserId').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <!-- <div class=\"col-sm-10\"> -->\n            <button type=\"submit\" class=\"btn btn-success\" style=\"float:right;\"\n              [disabled]=!assignTlForm.valid>Submit</button>\n            <button type=\"button\" id=\"dismissTLModal\" class=\"btn btn-danger\" style=\"float:right;\"\n              data-dismiss=\"modal\">Close</button>\n            <!-- </div> -->\n          </div>\n        </form>\n      </div>\n      <!-- Modal footer -->\n      <!-- <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n      </div> -->\n\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" id=\"unAssignTL\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">UnAssign TL/Manager</h4>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\n      </div>\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"passwordFlag\">\n          <strong>{{ errMessage }}</strong>\n        </p>\n      </div>\n\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n          <strong>{{ successMsg }}</strong>\n        </p>\n      </div>\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <div class=\"card-body\">\n          <!-- for show earned leave list  -->\n          <div class=\"card\" style=\"background-color:whitesmoke;\">\n            <div class=\"panel-body\">\n              <ul class=\"list-group\">\n                <div class=\"card-body\">\n                  <table class=\"table\" style=\"text-align: center;\">\n                    <thead class=\" text-primary\">\n                      <tr>\n                        <th>Employee Name </th>\n                        <th> Action </th>\n                      </tr>\n                    </thead>\n                    <tbody *ngFor=\"let employeeTL of companyEmployeeTlList\">\n                      <tr>\n                        <td> {{employeeTL.displayName}} </td>\n                        <td>\n                          <button title=\"UnAssign\" class=\"btn btn-danger\" (click)=\"unassignTL(employeeTL._id)\"\n                            style=\"color: white;\"><i class=\"fa fa-trash\"></i>\n                          </button>\n                        </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                </div>\n              </ul>\n            </div>\n          </div>\n          <!-- show earned leave list end -->\n        </div>\n        <button type=\"button\" id=\"dismissUnAssignTLModal\" class=\"btn btn-danger\" style=\"float:right;\"\n          data-dismiss=\"modal\">Close</button>\n      </div>\n      <!-- Modal footer -->\n      <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n        </div> -->\n\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { EmployeeWizardComponent } from './employee-wizard.component';\nimport { EmployeeProfileComponent } from './employee-profile/employee-profile.component';\nimport { EmployeeWizardRouitngModule } from './employee-wizard-routing.module';\nimport { EmployeeService } from './services/employee.service';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\n\n\n@NgModule({\n    declarations: [EmployeeWizardComponent, EmployeeProfileComponent, EmployeeListComponent],\n    imports: [\n      CommonModule,\n      RouterModule,\n      EmployeeWizardRouitngModule,\n      ReactiveFormsModule,\n      FormsModule,\n      HttpClientModule\n    ],\n    providers:[EmployeeService,AuthGuard],\n  })\n  \n  export class EmployeeWizardModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { EmployeeWizardComponent } from './employee-wizard.component';\nimport { EmployeeProfileComponent } from './employee-profile/employee-profile.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\nconst route : Routes = [\n    {\n      path :'',\n      component : EmployeeWizardComponent,\n      canActivate:[AuthGuard],\n      children :[\n        {\n          path:'employee-profile',\n          component:EmployeeProfileComponent,\n        },\n        {\n          path:'employee-profile/:employeeId',\n          component:EmployeeProfileComponent,\n        },\n        {\n          path:'employee-list',\n          component:EmployeeListComponent,\n        },\n        {\n          path:'',\n          redirectTo:'employee-list',\n          pathMatch:'full',\n        },\n      ],\n    }\n  ];\n\n@NgModule({\n    declarations: [],\n    imports: [\n      CommonModule,\n      RouterModule.forChild(route),\n    ]\n  })\n\n  export class EmployeeWizardRouitngModule{}","import { DocumentServices } from '../../document-types/document-services/document.services';\nimport { Component, OnInit, NgZone, ViewChild,ElementRef, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { skillCategoryApiService } from '../../skill-category/skillCategory-service/skillCategory-api.service';\nimport Swal from 'sweetalert2';\nimport { HttpClient } from '@angular/common/http';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-profile',\n  templateUrl: './employee-profile.component.html',\n  styleUrls: ['./employee-profile.component.scss']\n})\n\nexport class EmployeeProfileComponent implements OnInit,OnDestroy{\n  ngOnDestroy(): void {\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).removeAttribute('disabled');\n  }\n\n  @ViewChild('familyId', { static: false }) familyId: ElementRef;\n  // @ViewChild('proofsId', { static: false }) proofsId: ElementRef;\n\n  employeeBasicForm: any;\n  employeeAddressForm: any;\n  empEducationForm: any;\n  employeeBioForm: any;\n  companyTlList: any;\n  updateRelationForm:any;\n  companyListData = new Array();\n  branchList = new Array();\n  departmentList = new Array();\n  jobProfileList = new Array();\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  branchName: String;\n  companyId: String;\n  address = ['Current', 'Permanent', 'Others'];\n  branch: Object;\n  hidden:String;\n  familyType = ['Joint', 'Nuclear Family'];\n  familyDetailsList = new Array();\n  familyTypeList: String;\n  divShow: boolean = false;\n  formShow:boolean = false;\n  title:String;\n  familyIdValue:String;\n  showAddFamilyButton:boolean = true;\n  educationBtn: Boolean = true;\n  addressId;\n  workExperienceForm: any; // Work Experience form group\n  bankDetailsForm: any; // Bank details form group name\n  imageSrc: string = '';   // upload Document variable\n  imagePath;  // upload Document variable\n  docData: any; // upload Document Variable for show all document name\n  experValue: Object; // post data from experience api\n  actionBox = false;\n  existingPersonalDetails :any;\n  relivingIs = ['Formal', 'InFormal']; // Work Experience Reliving type\n  existingBankDetails : any;\n  employeeBioButton: string;\n  basicDetail = 'Submit';\n  checkbox = false;\n\n\n  addRelationForm: any; // family form group name\n  public familyValue: any[]; // after call api value store in this variable\n  relation =[\"Mother\",\"Father\",\"Brother\",\"Sister\",\"Uncle\",\"Aunt\",\"Spouse\",\"Son\",\"Daughter\"]; // Family relation array\n  public skillValue: []; // skill category data in this array\n  public showForm; // show details form of family\n  items = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];  // this one is use for testing only\n  public openval = 0;\n  snapShotParam: String;\n  shown: Boolean = false;\n  show: Boolean = false;\n  addressList : any; // list of old address\n  addAddess: boolean = true; // add address div show and hide\n  previousValue: any [];\n  titleName; // title name for form on update and add address\n  buttonName = 'Submit';\n  button:Boolean = true;\n  addressMsg:Boolean = true;\n  educationData: any[]; // education details\n  EducationForm: Boolean = true;  // show and hidde EducationForm\n  educationCurentId; // education id\n  eduBtn;\n  addessBtn: Boolean=true;\n  education;\n  listMesg: Boolean= true;\n  listEducationalDetails: any[]; //education details\n  exprienceListData: any []; //exprience data\n  workExperience: Boolean = true;\n  listExprience: Boolean = true; // exprience list flag\n  exprienceTitle; // expience form title\n  expCurentId; // exprience current id on click edit button and delete button\n  addExpbtn: Boolean = true;\n  bankListData: any []; // bank list all data in this array\n  showCard = {}; // use in bank list show\n  bankList: Boolean = true; // value in bank list or not in bank list flag\n  bankForm: Boolean = true; // bank form show and hidde\n  lenthoffical; // length of offical data\n  lenthperosnal; // length of personal data\n  payrollDetailsForm: any; //payroll form name\n  payrollData: any []; //list data of payoll\n  payrollList: Boolean = true; // flag of payroll list\n  payrollForm: Boolean = true; // flag of payroll form\n  payollDataLength; // checke length of payoll Data\n  paymentType = ['Cash', 'Cheque', 'Tansfer to Bank Account'];\n  biodata:any[]; // bio data api data\n  bioForm:Boolean = true; //bio form flag\n  bioList: Boolean =true; // bio list glag\n  errorMsgg: String;\n  languageSkillList: Boolean = false; // language skill list flag\n  lsnguageSkillForm: Boolean = false; // language skill form flag\n  addLanguageBtn: Boolean = true; // btn flag for add language\n  languageSkillForm: any; // language skill form name\n  LanguageData: any [];\n  languageSkillTitle;\n  percentErrorMsg = 'Percent is Required';\n  payrollGradeRuleList: any;\n  payrollGradeRuleName: any;\n  basicDetailsData = [];\n  educationalStatus = ['Completed','Pursuing'];\n  employeeLeaveData: any; //list data of leave\n  employeeLeaveList: Boolean = true; // flag of leave list\n  employeeLeaveForm: Boolean = true; // flag of leave form\n  employeeLeaveDetailsForm: FormGroup; //employee Leave settings form\n  employeeLeaveDataLength; // checke length of payoll Data\n  leaveSettingHeadingButton: String;\n  leaveSettingButton = true;\n  leaveSettingId: any;\n  existingDocumentLength: any;\n  uploadForm: any;\n  idProofsData: any; //list data of Employee Id's\n  idProofsList: Boolean = true; // flag of Id's list\n  idProofsForm: Boolean = true; // flag of Id's form\n  idProofsDetailsForm: any; //employee Id's Details form\n  idProofsDataLength; // checke length of Id's Data\n  idProofsHeadingButton: String;\n  idProofsSettingButton = true;\n  idProofsSettingId: any;\n\n  bannBtn = 'Submit';\n  experienceBtn = 'Submit';\n  educationBtnadd = 'Submit';\n  addfamilyBtn = 'Submit';\n  skillLanguageBtn = 'Submit';\n  payrollButton = 'Submit';\n  languageSkillEditId;\n  leaveButton = 'Submit';\n  idProofsButton = 'Submit';\n\nconstructor(public fb: FormBuilder,\n  private docApi: DocumentServices,\n  private api: EmployeeService,\n  public ngZone: NgZone,\n  private router: Router,\n  private route:ActivatedRoute,\n  private skillApi:skillCategoryApiService,\n  private http: HttpClient,\n  private util:UtilitiesService  ) { }\n\n\n\n\nngOnInit() {\n  this.snapShotParam = this.route.snapshot.paramMap.get(\"employeeId\");\n  (this.snapShotParam === null)? this.basicDetail = 'Submit': this.basicDetail = 'Update';\n  this.getTlList();\n  this.existingBasicDetails();\n  this.formDataValidation();\n  this.listDocument();\n  this.getList();\n  this.addressValidation();\n  this.educationDetailsValidation();\n  this.empBioValidation();\n  this.bankDataValidation();  // this function use in upload bank details for validation check\n  this.experienceValidation(); // this function use in data validation for work Expeience\n  this.skillCate(); // this function use in skill categray\n  this.addMemberValidation(); // this function use for check validation of add member relation\n  this.payrollValidation(); // this.payollvalidation function to fill value\n  this.languageSkillValidation(); // check validation\n  this.leaveSettingForm();\n  this.uploadImageForm();\n  this.idProofsSettingForm();\n  (document.getElementById('headerCompanyDropDown')as HTMLInputElement).setAttribute('disabled','disabled');\n}\n\n/**\n * Basic Form Functionality Start From Here\n * Basic Form Validation While Adding an Employee\n */\n\nformDataValidation() {\n  this.employeeBasicForm = this.fb.group({\n    departmentId: new FormControl('', Validators.required),\n    branchId: new FormControl('', Validators.required),\n    companyId: new FormControl('', Validators.required),\n    jobProfileId: new FormControl('', Validators.required),\n    name: new FormControl('', Validators.required),\n    dob: new FormControl('', Validators.required),\n    contactDetails: new FormGroup({\n      personal: new FormGroup({\n        phone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        landLineNum: new FormControl('', Validators.compose([\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n        ])),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n      }),\n      official: new FormGroup({\n        phone: new FormControl('', Validators.compose([\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        landLineNum: new FormControl('', Validators.compose([\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n        ])),\n        email: new FormControl(\"\", Validators.compose([Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n      })\n    }),\n    officialEmailAsLoginEmail: new FormControl(false),\n    isTL: new FormControl(false),\n    tlId: new FormControl('')\n\n  })\n}\n\n/**\n * Functionality While Updating Employee Basic Details\n * Validation While Updating Employee Basic Details\n */\n\nexistingBasicDetails(){\n  this.api.employeeList(this.snapShotParam).subscribe(data=>{\n    if(data.status === 'success'){\n      this.basicDetailsData.push(data.data);\n      for (var i = 0; i < this.basicDetailsData.length; i++) {\n        if(this.snapShotParam != null){\n          this.onSelect(this.basicDetailsData[i].companyId);\n          this.getDepartmentListData(this.basicDetailsData[i].branchId);\n        }\n        this.employeeBasicForm = this.fb.group({\n          departmentId: new FormControl(this.basicDetailsData[i].departmentId),\n          branchId: new FormControl(this.basicDetailsData[i].branchId),\n          jobProfileId: new FormControl(this.basicDetailsData[i].jobProfileId),\n          companyId: new FormControl(this.basicDetailsData[i].companyId),\n          name: new FormControl(this.basicDetailsData[i].employeeName),\n          dob: new FormControl(this.basicDetailsData[i].dob),\n          contactDetails: new FormGroup({\n            personal: new FormGroup({\n              phone: new FormControl(this.basicDetailsData[i].personalContactNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n              ])),\n              landLineNum: new FormControl(this.basicDetailsData[i].personalPhoneNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n              ])),\n              email: new FormControl(this.basicDetailsData[i].personalEmail,Validators.compose([\n                Validators.required,\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n              ])),\n            }),\n            official: new FormGroup({\n              phone: new FormControl(this.basicDetailsData[i].officialContactNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n              ])),\n              landLineNum: new FormControl(this.basicDetailsData[i].officialPhoneNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n              ])),\n              email: new FormControl(this.basicDetailsData[i].officialEmail,Validators.compose([\n                Validators.required,\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n              ])),\n            })\n          }),\n          officialEmailAsLoginEmail: new FormControl(false),\n          isTL: new FormControl(false),\n          tlId: new FormControl('')\n        })\n      }\n    }\n  })\n}\n\n/**\n * Calling for API for Submit Data and Update Date\n * Clean Reactive Form Validation was Added here\n */\n\nemployeeForm() {\n  try {\n    // Clean Form\n    let cleanBasicDetailForm = this.util.cleanFormLevelTwo(this.employeeBasicForm);\n    if(this.snapShotParam === null){\n      if (this.employeeBasicForm.valid) {\n        this.api.submitData(cleanBasicDetailForm.value).subscribe((data) => {\n          if (data.status == \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            this.hidden = data.data.employeeDetails._id;\n            setTimeout(() => {\n              this.ngZone.run(() => this.router.navigateByUrl(`/pages/employee-wizard/employee-profile/${this.hidden}`));\n              this.handleErrroMessage();\n            }, 1500);\n          }\n          else if (data.status == \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrroMessage();\n            }, 1500);\n          }\n        })\n      }\n    } else {\n      if (this.employeeBasicForm.valid) {\n        this.api.updateEmployeeBasicDetails(cleanBasicDetailForm.value,this.snapShotParam).subscribe((data) => {\n          if (data.status == \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrroMessage();\n            }, 1500);\n          }\n          else if (data.status == \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrroMessage();\n            }, 1500);\n          }\n        })\n      }\n    }\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// checkbox for officail details as personal details\n\nsameAsPersonalDetails(action){\n  if(action === false){\n    this.actionBox = true;\n  } else if(action === true){\n    this.actionBox = false;\n  }\n\n  if(this.actionBox === true){\n    this.existingPersonalDetails = this.employeeBasicForm.value.contactDetails.personal;\n    this.employeeBasicForm.get('contactDetails.official.phone').setValue(this.existingPersonalDetails.phone);\n    this.employeeBasicForm.get('contactDetails.official.landLineNum').setValue(this.existingPersonalDetails.landLineNum);\n    this.employeeBasicForm.get('contactDetails.official.email').setValue(this.existingPersonalDetails.email);\n  } else if (this.actionBox === false){\n    this.employeeBasicForm.get('contactDetails.official.phone').setValue('');\n    this.employeeBasicForm.get('contactDetails.official.landLineNum').setValue('');\n    this.employeeBasicForm.get('contactDetails.official.email').setValue('');\n  }\n}\n\n// Whole Functionality Ends Here For Basic Details!!\n\n\n/**\n * Employee Bio Details Form Functionality Start from here\n * Validation While Updating Employee Bio Details\n */\n\nempBioValidation() {\n  try {\n    this.employeeBioForm = this.fb.group({\n      bio: new FormGroup({\n        height: new FormControl('',Validators.compose([Validators.pattern(/^[1-9]'((\\s?)(-?)(\\s?)([0-9]|(1[0-1]))\\\")?$/)])),\n        weight: new FormControl('',Validators.compose([Validators.pattern(/^\\d{2,3} ?kg$/)])),\n        color: new FormControl(''),\n        moleIdentification: new FormControl(''),\n        bloodGroup: new FormControl('',Validators.compose([Validators.pattern(/^(A|B|AB|O)[+-]$/)])),\n        eyePower: new FormControl(''),\n        handicapped: new FormControl(false),\n        handicappedPercent: new FormControl('',Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        multipleHandicapped: new FormControl(false),\n        multipleHandicappedPercent: new FormControl('',Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        illness: new FormGroup({\n          physical: new FormGroup({\n            physicalIllnessName: new FormControl(''),\n            treatmentName: new FormControl(''),\n            hospitalName: new FormControl(''),\n            treatmentDuration: new FormControl(''),\n            illnessStatus: new FormControl(''),\n          }),\n          mental: new FormGroup({\n            mentalIllnessName: new FormControl(''),\n            treatmentName: new FormControl(''),\n            hospitalName: new FormControl(''),\n            treatmentDuration: new FormControl(''),\n            illnessStatus: new FormControl(''),\n          })\n        })\n      })\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n/**\n * Functionality while updating Employee Bio Details\n * Employee Bio Details Form Validation\n */\n\nbioEdit(){\n  this.bioList = false;\n  this.bioForm = true;\n  this.shown = this.biodata[0].multipleHandicapped;\n  this.show = this.biodata[0].handicapped;\n  for(var i=0;i<this.biodata.length;i++){\n    this.employeeBioForm = this.fb.group({\n      bio: new FormGroup({\n        height: new FormControl(this.biodata[i].height,Validators.compose([Validators.pattern(/^[1-9]'((\\s?)(-?)(\\s?)([0-9]|(1[0-1]))\\\")?$/)])),\n        weight: new FormControl(this.biodata[i].weight,Validators.compose([Validators.pattern(/^\\d{2,3} ?kg$/)])),\n        color: new FormControl(this.biodata[i].color),\n        moleIdentification: new FormControl(this.biodata[i].moleIdentification),\n        bloodGroup: new FormControl(this.biodata[i].bloodGroup,Validators.compose([Validators.pattern(/^(A|B|AB|O)[+-]$/)])),\n        eyePower: new FormControl(this.biodata[i].eyePower),\n        handicapped: new FormControl(this.biodata[i].handicapped),\n        handicappedPercent: new FormControl(this.biodata[i].handicappedPercent,Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        multipleHandicapped: new FormControl(this.biodata[i].multipleHandicapped),\n        multipleHandicappedPercent: new FormControl(this.biodata[i].multipleHandicappedPercent,Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        illness: new FormGroup({\n          physical: new FormGroup({\n            physicalIllnessName: new FormControl(this.biodata[i].illness.physical.physicalIllnessName),\n            treatmentName: new FormControl(this.biodata[i].illness.physical.treatmentName),\n            hospitalName: new FormControl(this.biodata[i].illness.physical.hospitalName),\n            treatmentDuration: new FormControl(this.biodata[i].illness.physical.treatmentDuration),\n            illnessStatus: new FormControl(this.biodata[i].illness.physical.illnessStatus),\n          }),\n          mental: new FormGroup({\n            mentalIllnessName: new FormControl(this.biodata[i].illness.mental.mentalIllnessName),\n            treatmentName: new FormControl(this.biodata[i].illness.mental.treatmentName),\n            hospitalName: new FormControl(this.biodata[i].illness.mental.hospitalName),\n            treatmentDuration: new FormControl(this.biodata[i].illness.mental.treatmentDuration),\n            illnessStatus: new FormControl(this.biodata[i].illness.mental.illnessStatus),\n          })\n        })\n      })\n    })\n  }\n}\n\n/**bio list data function configuration */\nbioListData(){\n  this.api.bioDataList(this.snapShotParam).subscribe(data=>{\n    if(data.status === 200 || data.status === 'success'){\n      if(Object.keys(data.data).length === 3){\n        this.bioList= false;\n        this.bioForm= true;\n        this.employeeBioButton = 'Submit';\n      }else{\n        this.employeeBioButton = 'Update';\n        this.bioList= true;\n        this.bioForm= false;\n        this.biodata = data.data;\n        this.biodata = Array.of(this.biodata);\n      }\n    }\n  })\n}\nemployeeBioFormData() {\n  try{\n    let cleanBioData = this.util.cleanFormLevelThree(this.employeeBioForm);\n    if(this.employeeBioButton === 'Submit'){\n      this.api.submitBioData(cleanBioData.value, this.snapShotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.bioListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    } else if(this.employeeBioButton === 'Update'){\n      this.api.updateBio(cleanBioData.value, this.snapShotParam).subscribe(data =>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.bioListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    }\n\n  } catch(err){\n    console.log(err);\n  }\n\n}\n\n/**\n *\n * @Function setValidators(),updateValueAndValidity(),clearValidators()\n * Predefined Function Of Reactive Form\n */\n\ncheck(value: String) {\nlet dynamicValidation = {'dynamic':[Validators.required, Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)]};\n  if (value === \"true\") {\n    if(this.employeeBioButton === 'Update'){\n      this.employeeBioForm.get('bio.handicappedPercent').setValue('');\n      this.employeeBioForm.get('bio.handicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.handicappedPercent').updateValueAndValidity();\n    } else {\n      this.show = true;\n      this.employeeBioForm.get('bio.handicapped').setValue(true);\n      this.employeeBioForm.get('bio.handicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.handicappedPercent').updateValueAndValidity();\n    }\n  } else {\n    this.show = false;\n    this.employeeBioForm.get('bio.handicapped').setValue(false);\n    this.employeeBioForm.get('bio.handicappedPercent').clearValidators();\n    this.employeeBioForm.get('bio.handicappedPercent').updateValueAndValidity();\n  }\n}\n\n/**\n *\n * @Function setValidators(),updateValueAndValidity(),clearValidators()\n * Predefined Function Of Reactive Form\n */\n\nchecked(value: String) {\n  let dynamicValidation = {'dynamic':[Validators.required, Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)]}\n  if (value === \"true\") {\n    if(this.employeeBioButton === 'Update'){\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').setValue('');\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').updateValueAndValidity();\n    } else {\n      this.shown = true;\n      this.employeeBioForm.get('bio.multipleHandicapped').setValue(true);\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').updateValueAndValidity();\n    }\n  } else {\n    this.shown = false;\n    this.employeeBioForm.get('bio.multipleHandicapped').setValue(false);\n    this.employeeBioForm.get('bio.multipleHandicappedPercent').clearValidators();\n    this.employeeBioForm.get('bio.multipleHandicappedPercent').updateValueAndValidity();\n  }\n}\n// Validations For Employee Bio\nbioValidationMessage = {\n  'height': [\n    { type: 'pattern', message: 'Height value is not acceptable.'},\n  ],\n  'weight': [\n    { type: 'pattern', message: 'Weight value is not acceptable.'},\n  ],\n  'bloodGroup': [\n    { type: 'pattern', message: 'Blood Group value is not acceptable.'},\n  ],\n  'handicappedPercent': [\n    { type: 'pattern', message: 'Percentage is not acceptable.'},\n    { type: 'required', message: 'Percentage is Required.'},\n\n  ],\n  'multipleHandicappedPercent': [\n    { type: 'pattern', message: 'Percentage value is not acceptable.'},\n    { type: 'required', message: 'Percentage is Required.'},\n\n  ]\n}\n/**Update address and show address*/\n\n/**\n * Address Form Functionality Start Fom Here\n * Address Form Validation Functionality\n */\naddressValidation() {\n  try {\n    this.employeeAddressForm = this.fb.group({\n      address: new FormGroup({\n        doorNum: new FormControl(''),\n        streetName1: new FormControl(''),\n        streetName2: new FormControl(''),\n        landmark: new FormControl(''),\n        // zipcode: new FormControl(''),\n        zipcode: new FormControl('', Validators.compose([Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(10),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        district: new FormControl(''),\n        state: new FormControl(''),\n        addressType: new FormControl('Current'),\n      })\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Address Validation Message\n\nvalidationMessageZip = {\n  'zipcode': [\n    { type: 'required', message: 'Zipcode is Required' },\n    { type: 'pattern', message: 'Invalid Zipcode' },\n    { type: 'minlength', message: 'Not a Zipcode ' },\n    { type: 'maxlength', message: 'Zipcode is too large' },\n  ],\n}\n\n// Address List Functionality\n\nshowAddress(){\n  this.api.oldAddress(this.snapShotParam).subscribe((data) =>{\n    if (data.status === 'success' || data.status === 200 ) {\n      if( data.data.length == 0 || data.status == 'error' || data.state == 400 ){\n        this.titleName = \"Add Address\";\n        this.addessBtn = false;\n        this.addAddess = true;\n        this.addressMsg = false;\n      } else {\n        this.addAddess = false;\n        this.addessBtn = true;\n        this.addressList = data.data;\n        this.addressMsg = true;\n      }\n    }\n  })\n}\n\n// Address driver function\n\naddNewAddress(){\n  this.employeeAddressForm.reset();\n  this.addessBtn = false;\n  this.titleName = \"Add Address\";\n  this.buttonName = \"Submit\";\n  this.addAddess = true;\n  this.addressId = ' ';\n\n}\n\n// Calling API for Add And Update Employee Address\n\naddressForm() {\n  try{\n    let cleanAddressForm = this.util.cleanFormLevelOne(this.employeeAddressForm);\n    if(this.addressId == \" \" || this.addressId ===null || this.addressId === undefined ){\n      this.api.submitAddress(cleanAddressForm.value, this.snapShotParam).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showAddress();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          })\n        }\n      })\n    }else{\n      this.api.updateAddess(cleanAddressForm.value, this.snapShotParam,this.addressId).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.previousValue = data.data;\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showAddress();\n            this.handleErrroMessage();\n          },1000)\n\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          })\n        }\n      })\n      this.addressId = \"\";\n    }\n  }catch(err){\n    console.log(err);\n  }\n\n}\n\n/**\n * Employee Address Update Functionality\n * Employee Address Fom Validation\n */\n\naddressEdit(id:String){\n  this.titleName = \"Update Address\";\n  this.buttonName = \"Update\";\n  this.addressId = id;\n  this.addAddess = true;\n  this.addessBtn = true;\n  this.addressList ;\n  for(var i =0;i<this.addressList.length; i++) {\n    if (this.addressList[i]._id === this.addressId){\n      this.employeeAddressForm = this.fb.group({\n        address: new FormGroup({\n          doorNum: new FormControl(this.addressList[i].doorNum),\n          streetName1: new FormControl(this.addressList[i].streetName1),\n          streetName2: new FormControl(this.addressList[i].streetName2),\n          landmark: new FormControl(this.addressList[i].landmark),\n          zipcode: new FormControl(this.addressList[i].zipcode),\n          district: new FormControl(this.addressList[i].district),\n          state: new FormControl(this.addressList[i].state),\n          addressType: new FormControl('Current'),\n        })\n      })\n    }\n  }\n}\n\ncancleAddForm(){\n  this.addressId = \" \";\n  this.addAddess = false;\n  this.addessBtn = true;\n}\n\n//Delete Employee Address\n\nremoveAddess(addressId:String){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n    confirmButton: 'btn btn-success',\n    cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n      this.api.deleteAddress(this.snapShotParam,addressId).subscribe((data)=>{\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.showAddress();\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your data is safe',\n        'error'\n      )\n    }\n  })\n}\n\n// Employee Address Whole Functinality Ends Here\n\n\n//Method for job profile list\ngetJobProfile(companyId) {\n  try {\n    this.api.getJobProfileListData(companyId).subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.jobProfileList = data.data;\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//For Form value and validation\neducationDetailsValidation() {\n  try {\n    this.empEducationForm = this.fb.group({\n      educationalDetails: new FormGroup({\n        courseName: new FormControl(''),\n        instituteName: new FormControl(''),\n        passOutYear: new FormControl('',Validators.compose([\n          Validators.required,\n          Validators.pattern(/^(19|20)\\d{2}$/)\n      ])),\n        status: new FormControl(''),\n        description: new FormControl(''),\n        scoredPercent: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/)\n        ])),\n      })\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nvalidationMessageEducation = {\n  'passOutYear': [\n    { type: 'required', message: 'Pass Out Year is Required' },\n    { type: 'pattern', message: 'Invalid Year' },\n  ],\n  'scoredPercent': [\n    { type: 'required', message: 'Percentage is Required' },\n    { type: 'pattern', message: 'Invalid Percentage' },\n  ],\n}\n\n\n\n\n\n//Method for get company list\ngetList() {\n  try {\n    this.api.getCompanyData().subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.companyListData = data.company;\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Method for Show branch list\nshowBranchList(companyId: String) {\n  try {\n    this.api.getBranchListData(companyId).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.branch = data.branch.length;\n        this.branchList = data.branch;\n      }\n    })\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n//Method for set selected value according to companyId.\nonSelect(companyId) {\n  try {\n    this.showBranchList(companyId);\n    this.getJobProfile(companyId);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/* Method for set selected value according to branchId. */\nonClick(branchId) {\n  try {\n    this.getDepartmentListData(branchId);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nscroll(element) {\n  element.scrollIntoView();\n}\n\n// Get DepartmentList\ngetDepartmentListData(branchId: string) {\n  try {\n    this.api.getDepartmentData(branchId).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.departmentList = data.department;\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Method for show validation message\nvalidationMessage = {\n  'name': [\n    { type: 'required', message: 'Name is required' },\n  ],\n  'departmentId': [\n    { type: 'required', message: 'Department Name is required' },\n  ],\n  'branchId': [\n    { type: 'required', message: 'Branch Name is required' },\n  ],\n  'companyId': [\n    { type: 'required', message: 'Company Name is required' },\n  ],\n  'jobProfileId': [\n    { type: 'required', message: 'Job Profile Name is required' },\n  ],\n  'dob': [\n    { type: 'required', message: 'Birthday Date is required' },\n  ],\n  'email': [\n    { type: 'required', message: 'Email is required' },\n    { type: 'pattern', message: 'Enter a valid email' },\n  ],\n  'phone': [\n    { type: 'required', message: 'Phone number is required' },\n    { type: 'pattern', message: 'Invalid Phone Number' },\n    { type: 'minlength', message: 'Not a phone number ' },\n    { type: 'maxlength', message: 'Phone no. is too large' },\n  ],\n  'landLineNum': [\n    { type: 'pattern', message: 'Invalid Landline Number' },\n    { type: 'minlength', message: 'Not a Landline number ' },\n    { type: 'maxlength', message: 'Landline no. is too large' },\n  ],\n\n}\n\n/** Upload Document ts file configration start here */\nlistDocument() {\n  try {\n    this.docApi.documentData().subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.docData = data.data;\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nhandleInputChange(e) {\n  var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n  var pattern = /image-*/;\n  var reader = new FileReader();\n  if (!file.type.match(pattern)) {\n    alert('Image Format is not valid');\n    return;\n  }\n  reader.onload = this._handleReaderLoaded.bind(this);\n  reader.readAsDataURL(file);\n}\n\n_handleReaderLoaded(e) {\n  let reader = e.target;\n  this.imageSrc = reader.result;\n  this.imagePath = this.imageSrc;\n}\n\nremove() {\n  alert(\"Remove button is working\");\n}\n\ncounter(i: number) {\n  return new Array(i);\n}\n/** Upload Document ts file configration End here */\n\n\n/** skill category functions */\nskillCate() {\n  this.skillApi.skillCategoryData().subscribe(data => {\n    if(data.status === 'success' || data.status === 200) {\n      this.skillValue  = data.skillCategory;\n    }\n  })\n}\n/** skill category functions */\n\n/** add Family  */\nonSelectRelation(value) {\n  this.showForm = value;\n}\n\n//add family details form validation\naddMemberValidation() {\n  this.addRelationForm = this.fb.group({\n    family: new FormGroup({\n      members: new FormGroup({\n        relation: new FormControl(\"Father\", Validators.required),\n        name: new FormControl(''),\n        age: new FormControl('',Validators.compose([Validators.pattern(/^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$/)])),\n        occupation: new FormControl(''),\n        education: new FormControl(''),\n        income: new FormControl(''),\n      })\n    }),\n    familyType: new FormControl('Joint'),\n  })\n}\n\n\nvalidationMessageFamily = {\n  'age': [\n    { type: 'pattern', message: 'Invalid Age' },\n  ],\n}\n\nupdateValidation(familyId:String) {\n  try {\n    this.addfamilyBtn = 'Update';\n    this.showAddFamilyButton = false;\n      this.familyIdValue = familyId;\n      this.formShow = true;\n      this.title = \"Update\";\n      for (var i = 0; i < this.familyDetailsList.length; i++) {\n        if (this.familyDetailsList[i]._id === familyId) {\n          console.log(\"n\",this.familyDetailsList[i]._id);\n          console.log(\"v\",this.familyId);\n\n          this.addRelationForm = this.fb.group({\n            family: new FormGroup({\n              members: new FormGroup({\n                relation: new FormControl(this.familyDetailsList[i].relation, Validators.required),\n                name: new FormControl(this.familyDetailsList[i].name),\n                age: new FormControl(this.familyDetailsList[i].age,Validators.compose([Validators.pattern(/^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$/)])),\n                occupation: new FormControl(this.familyDetailsList[i].occupation),\n                education: new FormControl(this.familyDetailsList[i].education),\n                income: new FormControl(this.familyDetailsList[i].income),\n              })\n            }),\n            familyType: new FormControl(this.familyTypeList),\n          })\n        }\n      }\n  } catch (err) {\n    console.log(err.message);\n  }\n\n}\n/** add family */\n\n//Method for onclick on button show form and hide current button\nshowAddFamilyForm(){\n  this.familyIdValue = \"\";\n  this.addfamilyBtn = 'Submit';\n  this.formShow = true;\n  this.addRelationForm.reset();\n  this.title = \"Add\";\n  this.showAddFamilyButton = false;\n\n}\n\n//Function for onclick button for hide form\ncancelValue(){\n  this.formShow = false;\n  this.showAddFamilyButton = true;\n}\n\n//Method for add and update employee details\naddFamilyDetails() {\n  this.addfamilyBtn = 'submit';\n  try {\n  let cleanFamilyForm = this.util.cleanFormLevelThree(this.addRelationForm);\n  this.showAddFamilyButton = true;\n    if( this.familyId.nativeElement.value === \"\" ){\n      this.api.addFamilyMember(cleanFamilyForm.value, this.snapShotParam).subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        setTimeout(() => {\n          this.getFamilyDetails();\n          this.handleErrroMessage();\n        }, 500);\n        this.addRelationForm.reset();\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrroMessage()\n        },2000);\n      }\n    })\n    }\n    else{\n      if(this.addRelationForm.valid){\n        this.api.updateFamilyDetails(cleanFamilyForm.value, this.snapShotParam, this.familyId.nativeElement.value).subscribe((data)=>{\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() =>{\n              this.getFamilyDetails();\n              this.handleErrroMessage();\n            },1000)\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(()=>{\n              this.handleErrroMessage()\n            },2000);\n          }\n        })\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n//Get family details\ngetFamilyDetails() {\n  try {\n    this.formShow = false;\n    this.api.getFamilyData(this.snapShotParam).subscribe(response => {\n      if (response.status === \"success\" || response.status === 200) {\n        if (response.data.familyDetails.length > 0) {\n          this.divShow = true;\n          this.familyDetailsList = response.data.familyDetails;\n          this.familyTypeList = response.data.familyType;\n        } else if(response.data.familyDetails.length === 0){\n          this.divShow = false;\n          this.showAddFamilyForm();\n        }\n      }\n      else if(response.status === \"error\" || response.status === 404) {\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Method for remove company branch\ndeleteFamilyDetails(familyId: String) {\n  try {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeFamilyDetails(this.snapShotParam, familyId).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.getFamilyDetails();\n\n          }\n        })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your data is safe',\n          'error'\n        )\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n\n/**Update Education details */\nshowEducationDetails(){\n  this.api.educationDetails(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success') {\n      if(data.data.length == 0){\n        this.education = \"Education-Details\";\n        this.EducationForm = true;\n        this.listMesg = false;\n        this.educationBtn= false;\n      } else {\n        this.EducationForm = false;\n        this.educationBtn = true;\n        this.educationData = data.data;\n        this.listMesg = true;\n      }\n    } else {\n      this.errorMsg = true;\n    }\n  })\n}\n\n\nswitchTypeValidation(inputValue:Number){\n  if(inputValue >0 && inputValue <= 100 ){\n      this.percentErrorMsg = '';\n      this.errorMsgg = '';\n  } else if((inputValue).toString().length == 0){\n      this.percentErrorMsg = 'Percent is Required';\n      this.errorMsgg = '';\n  } else if((inputValue).toString().length > 6) {\n      this.percentErrorMsg = 'Percent Value is too Large';\n      this.errorMsgg = '';\n  } else {\n      this.percentErrorMsg = '';\n      this.errorMsgg = 'Enter value is not valid';\n  }\n}\n\neducationEdit(id){\n  this.eduBtn = \"Update\";\n  this.educationBtnadd = 'Update';\n  this.education = \"Update Education-Details\";\n  this.educationCurentId = id;\n  this.EducationForm = true;\n  this.educationData;\n  // const len = Object.keys(this.educationData).length;\n  for(var i =0;i<this.educationData.length; i++) {\n  if (this.educationData[i]._id === this.educationCurentId){\n  this.empEducationForm = this.fb.group({\n    educationalDetails: new FormGroup({\n      courseName: new FormControl(this.educationData[i].courseName),\n      instituteName: new FormControl(this.educationData[i].instituteName),\n      passOutYear: new FormControl(this.educationData[i].passOutYear,Validators.compose([\n        Validators.required,\n        Validators.pattern(/^(19|20)\\d{2}$/)\n    ])),\n      status: new FormControl(this.educationData[i].status),\n      description: new FormControl(this.educationData[i].description),\n      // scoredPercent: new FormControl(this.educationData[i].scoredPercent),\n      scoredPercent: new FormControl(this.educationData[i].scoredPercent, Validators.compose([\n        Validators.required,\n        Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/)\n    ])),\n    })\n  })\n}\n}\n}\n\nremoveEducation(id:String){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n    confirmButton: 'btn btn-success',\n    cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n      this.api.removeEducation(this.snapShotParam,id).subscribe((data)=>{\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.showEducationDetails();\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your list data safe',\n        'error'\n      )\n    }\n  })\n}\n\naddNewEducation() {\n  this.eduBtn = \"Submit\";\n  this.educationBtn= false;\n  this.education = \"Education-Details\";\n  this.empEducationForm.reset();\n  this.EducationForm = true;\n  this.educationCurentId = \" \";\n\n}\n\ncancleEducation(){\n  this.EducationForm = false;\n  this.educationBtn = true;\n  this.educationCurentId = \" \";\n}\n\neducationForm() {\n  try {\n    let cleanEducationalFormData = this.util.cleanFormLevelOne(this.empEducationForm);\n    if(this.educationCurentId == \" \" || this.educationCurentId === null || this.educationCurentId === undefined){\n      this.api.submitEducationalData(cleanEducationalFormData.value, this.snapShotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.previousValue = data.data;\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showEducationDetails();\n            this.handleErrroMessage();\n          },1000);\n\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000);\n        }\n      })\n    } else {\n      this.api.updateEducation(cleanEducationalFormData.value,this.snapShotParam,this.educationCurentId).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.previousValue = data.data;\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showEducationDetails();\n            this.handleErrroMessage();\n          },1000);\n\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000);\n        }\n      })\n      this.educationCurentId = \"\" ;\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n/**Update Education details */\n\n\n/**Update work exprience */\nshowWorkList(){\n  this.api.workExprience(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success') {\n      if(data.data.length == 0){\n        this.exprienceTitle = \"Work Experience\";\n        this.addExpbtn = false;\n        this.workExperience = true;\n        this.listExprience = false;\n      } else {\n        this.workExperience = false;\n        this.exprienceListData = data.data;\n        this.listExprience = true;\n        this.addExpbtn= true;\n      }\n    } else {\n      this.errorMsg = true;\n    }\n  })\n}\n\nexpriceneEdit(id){\n  this.exprienceTitle = \"Update Experience\";\n  this.experienceBtn = 'Update';\n  this.workExperience = true;\n  this.addExpbtn = true;\n  this.expCurentId = id;\n  for(var i =0;i<this.exprienceListData.length; i++){\n    if(this.exprienceListData[i]._id === this.expCurentId){\n      this.workExperienceForm = this.fb.group({\n        workExperiences: new FormGroup({\n          companyName: new FormControl(this.exprienceListData[i].companyName),\n          designation: new FormControl(this.exprienceListData[i].designation),\n          experienceYears: new FormControl(this.exprienceListData[i].experienceYears,Validators.compose([\n            Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i),\n            Validators.max(40),\n          ])),\n          jobDescription: new FormControl(this.exprienceListData[i].jobDescription),\n          relivingReason: new FormControl(this.exprienceListData[i].relivingReason),\n          relivingIs: new FormControl(this.exprienceListData[i].relivingIs),\n          remarks: new FormControl(this.exprienceListData[i].remarks),\n        })\n      })\n    }\n  }\n}\n\nremoveExpeience(id){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n    confirmButton: 'btn btn-success',\n    cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n      this.api.removeExprience(this.snapShotParam,id).subscribe((data)=>{\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.showWorkList();\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your list data safe',\n        'error'\n      )\n    }\n  })\n}\n\ncancleExperience(){\n  this.workExperience = false;\n  this.addExpbtn=true;\n}\n\naddExperience(){\n  this.workExperienceForm.reset();\n  this.experienceBtn = 'Submit';\n  this.exprienceTitle = \"Add Experience\";\n  this.workExperience = true;\n  this.addExpbtn = false;\n  this.expCurentId = '';\n}\n\n/**upload work Experience */\naddWorkExp() {\n  try {\n    let cleanWorkExperienceForm = this.util.cleanFormLevelOne(this.workExperienceForm);\n    if(this.expCurentId == '' || this.expCurentId == null){\n      this.api.experiAdd(cleanWorkExperienceForm.value, this.snapShotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showWorkList();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage()\n          },2000)\n        }\n      })\n    } else {\n      this.api.updateWokExprience(cleanWorkExperienceForm.value,this.snapShotParam,this.expCurentId).subscribe(data=>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showWorkList();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage()\n          },2000)\n        }\n\n      })\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nvalidationMessageExper = {\n  'experienceYears': [\n    { type: 'pattern', message: 'Invalid Experience Years' },\n    { type: 'max', message: 'Experience Years should be less than 40'}\n  ],\n}\n\n\nexperienceValidation() {\n  try {\n    this.workExperienceForm = this.fb.group({\n      workExperiences: new FormGroup({\n        companyName: new FormControl(''),\n        designation: new FormControl(''),\n        experienceYears: new FormControl('',Validators.compose([\n          Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i),\n          Validators.max(40),\n        ])),\n        jobDescription: new FormControl(''),\n        relivingReason: new FormControl(''),\n        relivingIs: new FormControl(''),\n        remarks: new FormControl(''),\n      })\n    })\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n/** upload work experience */\n/** Update work exprience */\n\n\n\n/**Bank details update delete */\nbankDetails(){\n  try{\n    this.actionBox = false;\n    this.api.bankDetailsList(this.snapShotParam).subscribe(data=>{\n      if(data.status === 'success' || data.status === 200){\n          this.lenthoffical = Object.keys(data.data.official).length;\n          this.lenthperosnal = Object.keys(data.data.personal).length;\n        if(this.lenthoffical == 0 || this.lenthperosnal == 0){\n          this.bankList = false;\n          this.bankForm = true;\n          this.bankDetailsForm.reset();\n        }else{\n          this.bankListData = data.data;\n          this.bankListData = Array.of(this.bankListData);\n          this.bankList = true;\n          this.bankForm= false;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err.message);\n  }\n}\n\neditBankDetails(){\n  this.bankForm = true;\n  this.bankList = false;\n  this.bannBtn = 'Update';\n  this.bankListData;\n  for(var i =0;i<this.bankListData.length;i++){\n    this.bankDetailsForm = this.fb.group({\n      bankDetails: new FormGroup({\n          official: new FormGroup({\n            name: new FormControl(this.bankListData[i].official.name),\n            accountNum: new FormControl(this.bankListData[i].official.accountNum,Validators.compose([Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(this.bankListData[i].official.accountPlace),\n            accountType: new FormControl(this.bankListData[i].official.accountType),\n            debitCardNum: new FormControl(this.bankListData[i].official.debitCardNum),\n            debitCardType: new FormControl(this.bankListData[i].official.debitCardType),\n            remarks: new FormControl(this.bankListData[i].official.remarks),\n          }),\n          personal: new FormGroup({\n            name: new FormControl(this.bankListData[i].personal.name),\n            accountNum: new FormControl(this.bankListData[i].personal.accountNum,Validators.compose([Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(this.bankListData[i].personal.accountPlace),\n            accountType: new FormControl(this.bankListData[i].personal.accountType),\n            debitCardNum: new FormControl(this.bankListData[i].personal.debitCardNum),\n            debitCardType: new FormControl(this.bankListData[i].personal.debitCardType),\n            remarks: new FormControl(this.bankListData[i].personal.remarks),\n        })\n      })\n    })\n  }\n}\n\n/** Upload Banke details file configration start */\n\nsameAsOfficialDetails(action){\n  if(action === false){\n    this.actionBox = true;\n  } else if(action === true){\n    this.actionBox = false;\n  }\n  if(this.actionBox === true){\n    this.existingBankDetails = this.bankDetailsForm.value.bankDetails.official;\n    this.bankDetailsForm.get('bankDetails.personal.name').setValue(this.existingBankDetails.name);\n    this.bankDetailsForm.get('bankDetails.personal.accountNum').setValue(this.existingBankDetails.accountNum);\n    this.bankDetailsForm.get('bankDetails.personal.accountPlace').setValue(this.existingBankDetails.accountPlace);\n    this.bankDetailsForm.get('bankDetails.personal.accountType').setValue(this.existingBankDetails.accountType);\n    this.bankDetailsForm.get('bankDetails.personal.remarks').setValue(this.existingBankDetails.remarks);\n\n  } else if (this.actionBox === false){\n    this.bankDetailsForm.get('bankDetails.personal.name').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.accountNum').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.accountPlace').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.accountType').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.remarks').setValue('');\n  }\n}\n\nbankDetailsAdd() {\n  try {\n    let cleanBankForm = this.util.cleanFormLevelTwo(this.bankDetailsForm);\n    this.api.employBank(cleanBankForm.value, this.snapShotParam).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        setTimeout(() =>{\n          this.bankDetails();\n          this.handleErrroMessage();\n        },1500)\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(() =>{\n          this.bankDetails();\n          this.handleErrroMessage();\n        },2000)\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nbankDetailsCancel(){\n  this.bankDetails();\n}\n\nbankDataValidation() {\n  try {\n    this.bankDetailsForm = this.fb.group({\n      bankDetails: new FormGroup({\n          official: new FormGroup({\n            name: new FormControl('',Validators.compose([Validators.required])),\n            accountNum: new FormControl('',Validators.compose([Validators.required,Validators.maxLength(16),\n            Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(''),\n            accountType: new FormControl(''),\n            debitCardNum: new FormControl(''),\n            debitCardType: new FormControl(''),\n            remarks: new FormControl(''),\n          }),\n          personal: new FormGroup({\n            name: new FormControl('',Validators.compose([Validators.required])),\n            accountNum: new FormControl('',Validators.compose([Validators.required,Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(''),\n            accountType: new FormControl(''),\n            debitCardNum: new FormControl(''),\n            debitCardType: new FormControl(''),\n            remarks: new FormControl(''),\n        })\n      })\n    })\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nvalidationMessageBank = {\n  'name': [\n    { type: 'required', message: 'Bank Name is Required' },\n  ],\n  'accountNum': [\n    { type: 'required', message: 'Account Number is Required' },\n    { type: 'maxlength', message: 'Account Number is maximum of 16 digits' },\n    { type: 'pattern', message: 'Account Number is not Acceptable' }\n  ],\n}\n\n/** upload bank details file configration end */\n/**Bank details update delete */\n\n\n/** payroll add details configratin  start*/\npayrollValidation(){\n  this.payrollDetailsForm = this.fb.group({\n    payroll:new FormGroup({\n      ctc:new FormControl('',Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n      ctcEffectiveFromDate:new FormControl('',Validators.required),\n      ctcEffectiveToDate:new FormControl('',Validators.required),\n      paidLeaveBalance:new FormControl('',Validators.compose([Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)])),\n      earnedLeaveBalance:new FormControl(''),\n      gradeRule:new FormControl('',Validators.required),\n      basicPay:new FormControl('',Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n      mode: new FormControl('Cash'),\n\n    })\n  })\n}\n\npayrollValidations = {\n  'ctc': [\n    { type: 'required', message: 'CTC Value is Required' },\n    { type: 'pattern', message: 'CTC Value is not Acceptable' },\n  ],\n  'ctcEffectiveFromDate': [\n    { type: 'required', message: 'Selcted Field is Required' },\n  ],\n  'ctcEffectiveToDate': [\n    { type: 'required', message: 'Selcted Field is Required' },\n  ],\n  'paidLeaveBalance': [\n    { type: 'pattern', message: 'Paid Leave Balance is not Acceptable' },\n  ],\n  'gradeRule': [\n    { type: 'gradeRule', message: 'Selcted Field is Required' },\n  ],\n  'basicPay': [\n    { type: 'required', message: 'Basic Pay Value is Required' },\n    { type: 'pattern', message: 'Basic Pay Value is not Acceptable' },\n  ],\n}\n\npayrollAdd(){\n  try{\n    if(this.payrollButton === 'Submit'){\n      this.api.payrollDataSubmit(this.payrollDetailsForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.payrollListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    } else if(this.payrollButton === 'Update'){\n      this.api.updatePayrollSettings(this.payrollDetailsForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.payrollListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    }\n  }catch(err) {\n    console.log(err);\n  }\n}\n\npayrollListData(){\n  try{\n  this.api.payollDataList(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success' || data.status === 200){\n      this.gradeRuleList();\n      this.payollDataLength = Object.keys(data.data).length;\n      if(this.payollDataLength === 2){\n        this.payrollList = false;\n        this.payrollForm = true;\n        this.payrollDetailsForm.get('payroll.earnedLeaveBalance').setValue(data.data.earnedLeaveBalance);\n      }else{\n        this.payrollData = data.data;\n        this.payrollData = Array.of(this.payrollData);\n        this.payrollList = true;\n        this.payrollForm = false;\n        this.payrollButton = 'Update';\n        this.payrollDetailsForm.get('payroll.earnedLeaveBalance').setValue(data.data.earnedLeaveBalance);\n      }\n    } else {\n      console.log(data.message);\n    }\n  })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Grade Rule List\n\ngradeRuleList(){\n  try{\n    this.api.gradeRuleList().subscribe(data => {\n      if(data.status === 'success'){\n        this.payrollGradeRuleList = data.data;\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\npayrollSettingEdit(){\n  this.payrollForm = true;\n  this.payrollList= false;\n  for(var i=0;i<this.payrollData.length;i++){\n    this.payrollDetailsForm = this.fb.group({\n      payroll:new FormGroup({\n        ctc:new FormControl(this.payrollData[i].ctc,Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n        ctcEffectiveFromDate:new FormControl(this.payrollData[i].ctcEffectiveFromDate.substring(0,10)),\n        ctcEffectiveToDate:new FormControl(this.payrollData[i].ctcEffectiveToDate.substring(0,10)),\n        paidLeaveBalance:new FormControl(this.payrollData[i].paidLeaveBalance,Validators.compose([Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)])),\n        earnedLeaveBalance:new FormControl(this.payrollData[i].earnedLeaveBalance),\n        gradeRule:new FormControl(this.payrollData[i].gradeRule),\n        basicPay: new FormControl(this.payrollData[i].basicPay,Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n        mode: new FormControl(this.payrollData[i].mode),\n      })\n    })\n  }\n}\n\nbackPayrollBtn(){\n  this.payrollForm = false;\n  this.payrollList = true;\n  this.payrollListData();\n\n}\n/** payroll add details configration end  */\n\n/** employee Leave Settings details configratin  start*/\nemployeeLeaveDataList(){\n  try{\n  this.api.leaveEmployeeDataList(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success'){\n      if(data.data.leaveSettings.length == 0){\n        this.employeeLeaveList = false;\n        this.employeeLeaveForm = true;\n        this.leaveSettingButton = false;\n        this.leaveButton = 'Submit';\n        this.leaveSettingHeadingButton = \"Add Leave Settings\";\n        // this.addLeaveSettingButton = true;\n      }else{\n        this.employeeLeaveData = data.data.leaveSettings;\n        this.employeeLeaveList = true;\n        this.employeeLeaveForm = false;\n        this.leaveSettingButton = true;\n        this.leaveButton = 'Update';\n        // this.addLeaveSettingButton = false;\n      }\n    }\n  })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Add Leave Settings\n\naddLeaveSetting(){\n  try{\n    let cleanLeaveSettingForm = this.util.cleanFormLevelOne(this.employeeLeaveDetailsForm);\n    if(this.leaveButton === 'Submit'){\n      this.api.addLeaveSettings(cleanLeaveSettingForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.employeeLeaveDataList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    } else if(this.leaveButton === 'Update'){\n      this.api.updateLeaveSettings(cleanLeaveSettingForm.value,this.snapShotParam,this.leaveSettingId).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.employeeLeaveDataList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Leave Setting Update Details\n\nleaveSettingUpdateDetails(leaveSettingId){\n  try{\n    this.leaveSettingId = leaveSettingId;\n    this.leaveSettingHeadingButton = \"Update Leave Settings\";\n    this.leaveButton = \"Update\";\n    this.employeeLeaveForm = true;\n    this.leaveSettingButton = true;\n    for(var i = 0; i<this.employeeLeaveData.length; i++){\n      if(this.employeeLeaveData[i]._id == leaveSettingId){\n        this.employeeLeaveDetailsForm = this.fb.group({\n          startDate:new FormControl(this.employeeLeaveData[i].startDate.substring(0,10),Validators.required),\n          endDate:new FormControl(this.employeeLeaveData[i].endDate.substring(0,10),Validators.required),\n          leavePerMonth:new FormControl(this.employeeLeaveData[i].leavePerMonth,Validators.required),\n          reason:new FormControl(this.employeeLeaveData[i].reason)\n        })\n      }\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n/** Leave Settings add details */\nleaveSettingForm(){\n  this.employeeLeaveDetailsForm = this.fb.group({\n    startDate:new FormControl('',Validators.required),\n    endDate:new FormControl('',Validators.required),\n    leavePerMonth:new FormControl('',Validators.required),\n    reason:new FormControl('',)\n  })\n}\n\n// Leave Setting ADD Leave Setting Button Functionality\naddNewLeaveSettings(){\n  this.employeeLeaveDetailsForm.reset();\n  this.leaveSettingButton = false;\n  this.leaveSettingHeadingButton = \"Add Leave Settings\";\n  this.leaveButton = \"Submit\";\n  this.employeeLeaveForm = true;\n}\n\n// Leave Setting Cancel Button Functionality\nleaveSettingCancel(){\n  this.employeeLeaveDataList();\n  this.employeeLeaveDetailsForm.reset();\n}\n\nvalidationMessageLeaveSettings = {\n  'startDate': [\n    { type: 'required', message: 'Start Date is Required' },\n  ],\n  'endDate': [\n    { type: 'required', message: 'End Date is Required' },\n  ],\n  'leavePerMonth': [\n    { type: 'required', message: 'Leave Per Month is Required' },\n  ],\n}\n\n/** employee Leave details configratin End*/\n\n/** employee Identity Proofs configratin Start*/\ngetEmployeeIdProofsList(){\n  try{\n  this.api.employeeIdProofsDataList(this.snapShotParam).subscribe(data => {\n\n    if(data.status === 'success'){\n      if(data.data.length == 0){\n        this.idProofsList = false;\n        this.idProofsForm = true;\n        this.idProofsSettingButton = false;\n        this.idProofsButton = 'Submit';\n        this.idProofsHeadingButton = \"Add Identity Proofs Settings\";\n        // this.addLeaveSettingButton = true;\n      }else{\n        this.idProofsData = data.data;\n        this.idProofsList = true;\n        this.idProofsForm = false;\n        this.idProofsSettingButton = true;\n        this.idProofsButton = 'Update';\n        // this.addLeaveSettingButton = false;\n      }\n    }\n  })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Add Employee Id Poofs Details\n\naddIdProofs(){\n  try{\n    let cleanIdProofsSettingForm = this.util.cleanFormLevelTwo(this.idProofsDetailsForm);\n    if(this.idProofsButton === 'Submit'){\n      this.api.addEmployeeIdProofs(cleanIdProofsSettingForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.getEmployeeIdProofsList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    } else if(this.idProofsButton === 'Update'){\n      this.api.updateIdProofsSettings(cleanIdProofsSettingForm.value,this.snapShotParam,this.idProofsSettingId).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.getEmployeeIdProofsList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Id Proofs Setting Update Details\n\nidProofsSettingUpdateDetails(proofsId:String){\n  try{\n    this.idProofsSettingId = proofsId;\n    this.idProofsHeadingButton = \"Update Id Proofs Settings\";\n    this.idProofsButton = 'Update';\n    this.idProofsForm = true;\n    this.idProofsSettingButton = false;\n    for(var i = 0; i<this.idProofsData.length; i++){\n      if(this.idProofsData[i]._id === proofsId){\n        this.idProofsDetailsForm = this.fb.group({\n          identityProofs: new FormGroup ({\n            identityName:new FormControl(this.idProofsData[i].identityName,Validators.required),\n            identityNum:new FormControl(this.idProofsData[i].identityNum,Validators.required),\n            authorityName:new FormControl(this.idProofsData[i].authorityName),\n            issuePlace:new FormControl(this.idProofsData[i].issuePlace),\n            expiryDate:new FormControl(this.idProofsData[i].expiryDate.substring(0,10),Validators.required),\n            remarks:new FormControl(this.idProofsData[i].remarks)\n          })\n        })\n      }\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n//Method for remove Employee Id Proofs\ndeleteIdentityProofs(proofId: String) {\n  try {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeIdProofsDetails(this.snapShotParam, proofId).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.getEmployeeIdProofsList();\n\n          }\n        })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your data is safe',\n          'error'\n        )\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Add New Id Proofs Setting Add Identity Proofs Button Functionality\naddNewIdProofsSettings(){\n  this.idProofsDetailsForm.reset();\n  this.idProofsSettingButton = false;\n  this.idProofsHeadingButton = \"Add Identity Proofs\";\n  this.idProofsButton = 'Submit';\n  this.idProofsForm = true;\n}\n// New Id Proofs Setting Cancel Button Functionality\nidProofsSettingsCancel(){\n  this.getEmployeeIdProofsList();\n  this.idProofsDetailsForm.reset();\n}\n\n//Employee ID's Form add details //\nidProofsSettingForm(){\n  this.idProofsDetailsForm = this.fb.group({\n    identityProofs: new FormGroup({\n      identityName:new FormControl('',Validators.required),\n      identityNum:new FormControl('',Validators.required),\n      authorityName:new FormControl(''),\n      issuePlace:new FormControl(''),\n      expiryDate:new FormControl('',Validators.required),\n      remarks:new FormControl('')\n    })\n  })\n}\n\nvalidationMessageIdProofsSettings = {\n  'identityName': [\n    { type: 'required', message: 'Identity Name is Required' },\n  ],\n  'identityNum': [\n    { type: 'required', message: 'Identity Number is Required' },\n  ],\n  'authorityName': [\n    { type: 'required', message: 'Authority Name is Required' },\n  ],\n  'issuePlace': [\n    { type: 'required', message: 'Issue Place is Required' },\n  ],\n  'expiryDate': [\n    { type: 'required', message: 'Expiry Date is Required' },\n  ],\n  'remarks': [\n    { type: 'required', message: 'Remarks is Required' },\n  ],\n}\n/** employee Identity Proofs configratin End*/\n\n\nbioCancel(){\n  this.bioForm=false;\n  this.bioList=true;\n}\n/** bio complete function configratin */\n\n/** langulage skills function configation  start*/\nlistSkillLanguage(){\n  try{\n    this.lsnguageSkillForm = false;\n    this.api.LanguageSkill(this.snapShotParam).subscribe(data=>{\n      if(data.status == 'success' || data.status == 200){\n        if(data.data.length === 0){\n          this.languageSkillList = false;\n          this.addLanguageSkillList();\n        }else{\n          this.LanguageData = data.data;\n          this.languageSkillList= true;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\nlanguageSkillEdit(id){\n  this.languageSkillEditId = id;\n  this.skillLanguageBtn = 'Update';\n  this.languageSkillTitle = \"Update Language\";\n  this.lsnguageSkillForm = true;\n  this.addLanguageBtn = false;\n  for(var i=0;i<this.LanguageData.length;i++){\n    if(this.LanguageData[i]._id == id){\n      this.languageSkillForm = this.fb.group({\n        languageSkills:new FormGroup({\n          toSpeak:new FormControl(this.LanguageData[i].toSpeak),\n          toRead:new FormControl(this.LanguageData[i].toRead),\n          toWrite:new FormControl(this.LanguageData[i].toWrite),\n        })\n      })\n    }\n  }\n}\n\ncancelLanguageSkill(){\n  this.lsnguageSkillForm = false;\n  this.addLanguageBtn = true;\n}\n\naddLanguageSkill(){\n  try {\n    let cleanLaungugeSkillForm = this.util.cleanFormLevelOne(this.languageSkillForm);\n\n  if(this.languageSkillEditId == \"\" || this.languageSkillEditId === null){\n    this.api.addLanguageSkill(cleanLaungugeSkillForm.value,this.snapShotParam).subscribe(data=>{\n      if (data.status === \"success\" || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        this.addLanguageBtn = true;\n        setTimeout(() =>{\n          this.listSkillLanguage();\n          this.handleErrroMessage();\n        },1000)\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrroMessage();\n        },2000);\n      }\n    })\n  }else{\n    this.api.updateLanguageSkill(cleanLaungugeSkillForm.value,this.snapShotParam,this.languageSkillEditId).subscribe(data=>{\n      if (data.status === \"success\" || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        this.addLanguageBtn = true;\n        setTimeout(() =>{\n          this.listSkillLanguage();\n          this.handleErrroMessage();\n        },1000)\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrroMessage();\n        },2000);\n      }\n    })\n    }\n    this.languageSkillEditId = \"\";\n  } catch(err){\n    console.log(err);\n  }\n}\n\n\nlanguageSkillValidation(){\n  this.languageSkillForm = this.fb.group({\n    languageSkills:new FormGroup({\n      toSpeak:new FormControl(''),\n      toRead:new FormControl(''),\n      toWrite:new FormControl(''),\n    })\n  })\n}\n\naddLanguageSkillList(){\nthis.languageSkillEditId = \"\";\nthis.languageSkillTitle = \"Add\";\nthis.skillLanguageBtn = 'Submit';\nthis.lsnguageSkillForm = true;\nthis.addLanguageBtn = false;\nthis.languageSkillForm.reset();\n}\n\n\n/**langualge skills function configration end */\n\n// Error Handling Message\nhandleErrroMessage(){\n  this.successMessage = false;\n  this.errorMsg = false;\n  this.successMsg = '';\n  this.errMsg = '';\n}\noncheck(){\n  this.checkbox = !this.checkbox;\n  this.employeeBasicForm.get('isTL').setValue(this.checkbox);\n}\n\n// Get Tl List\ngetTlList(){\n  this.api.getTlList().subscribe((data)=>{\n    if(data.status === 'success'){\n      this.companyTlList = data.data;\n    }\n  })\n}\n\nuploadedDocumentDetails = [];\nemployeeDocumentsDetails = [];\n// get documnet list uploaded which are no uploaded yet\nuploadedDocumentList(){\n  try{\n    this.api.uploadedDocuments(this.snapShotParam).subscribe((data) =>{\n      if(data.status === 'success'){\n        this.uploadedDocumentDetails = data.data;\n      }\n    })\n    this.employeeDocumentList();\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Image Upload Form\nuploadImageForm(){\n  try{\n    this.uploadForm = this.fb.group({\n      document: ['']\n    });\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Upload Docs\nuploadDocs(documentTypeId,index,type){\n  try{\n    if(type === 'Update'){\n      if((document.getElementById(`${index}`)as HTMLInputElement).value.length === 0){\n        Swal.fire('No Image Selected');\n      } else {\n        this.api.uploadDocuments(this.uploadForm,documentTypeId,this.snapShotParam,type).subscribe((data)=>{\n          if(data.status === 'success'){\n            (document.getElementById('dismissUpdateDocuments').click());\n            Swal.fire(\n              'Status',\n              data.message,\n              'success'\n            )\n            this.employeeDocumentList();\n          } else if(data.status === 'error'){\n              Swal.fire(data.message);\n          }\n        })\n      }\n    } else if(type === 'Add'){\n      if((document.getElementById(`documnetDocImage${index}`)as HTMLInputElement).value.length === 0){\n        Swal.fire('No Image Selected');\n      } else {\n        this.api.uploadDocuments(this.uploadForm,documentTypeId,this.snapShotParam,type).subscribe((data)=>{\n          if(data.status === 'success'){\n            Swal.fire(\n              'Status',\n              data.message,\n              'success'\n            )\n            this.uploadedDocumentList();\n            this.employeeDocumentList();\n          } else if(data.status === 'error'){\n              Swal.fire(data.message);\n          }\n        })\n      }\n    }\n\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// When User select document image\nonFileSelect(event){\ntry{\n  if (event.target.files.length > 0) {\n    const file = event.target.files[0];\n    this.uploadForm.get('document').setValue(file);\n  }\n}catch(err){\n  console.log(err);\n}\n}\n\n// Get Uploaded Documnets By the employee\nemployeeDocumentList(){\n  try{\n    this.api.employeeDocumentList(this.snapShotParam).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeDocumentsDetails = data.data;\n      }\n    })\n  }catch(err){\n    console.log(err);\n\n  }\n}\n\n// Show Image On new tab\nopenImage(imageUrl){\n  try{\n    window.open(imageUrl);\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Delete Employee Document\ndeleteDocument(documentTypeId){\n  try{\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.value) {\n        this.api.deleteEmployeeDocument(documentTypeId,this.snapShotParam).subscribe((data)=>{\n          if(data.status === \"success\" || data.status === 200){\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          data.message,\n          'success'\n        )\n        this.employeeDocumentList();\n        this.uploadedDocumentList();\n          }\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Document Still Exists',\n          'error'\n        )\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Update the employee docs\ndocumentTypeId: any;\nasync updateDocuments(documentTypeId){\n  try{\n    this.documentTypeId = documentTypeId;\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}\n\n\n\n","<div class=\"card card-body\">\n    <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" #target>\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#basicDetails\" role=\"tab\" aria-controls=\"basic details\">Basic\n        Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#bio\" role=\"tab\" (click)=\"bioListData()\" aria-controls=\"bio\">Employee Bio</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link addesstab\" data-toggle=\"tab\" (click)=\"showAddress()\" href=\"#address\" role=\"tab\" aria-controls=\"address\">Address</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"showEducationDetails()\" href=\"#educationDetails\" role=\"tab\" aria-controls=\"educationDetails\">Education Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"uploadedDocumentList()\" href=\"#uploadDocument\" role=\"tab\" aria-controls=\"uploadDocument\">Upload\n        Document</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"bankDetails()\" href=\"#bankDetails\" role=\"tab\" aria-controls=\"bankDetails\">Bank Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#workExperience\" (click)=\"showWorkList()\" role=\"tab\" aria-controls=\"workExperience\">Work Experience</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#skillCat\" role=\"tab\" aria-controls=\"skillCat\">Skill Category</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#addFamily\" role=\"tab\" (click)=\"getFamilyDetails()\" aria-controls=\"addFamily\">Family Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#profilePayroll\" role=\"tab\" (click)=\"payrollListData()\" aria-controls=\"profilePayroll\">Payroll Settings</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#languageSkill\" role=\"tab\" (click)=\"listSkillLanguage()\" aria-controls=\"languageSkill\">Language Skills</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#leaveSetting\" role=\"tab\" (click)=\"employeeLeaveDataList()\" aria-controls=\"leaveSetting\">Leave Settings</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#identityproofs\" role=\"tab\" (click)=\"getEmployeeIdProofsList()\" aria-controls=\"identityproofs\">Identity Proofs</a>\n        </li>\n    </ul>\n    <br />\n    <br />\n    <div class=\"tab-content\">\n        <!-- basicDetails are start here -->\n        <div class=\"tab-pane active\" id=\"basicDetails\" role=\"tabpanel\">\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                </p>\n            </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeBasicForm\" (ngSubmit)=\"employeeForm()\" novalidate>\n                <h4>Basic Details</h4>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Company Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"Company\" formControlName=\"companyId\" (change)=\"onSelect($event.target.value)\">\n                    <option class=\"dropdown-item\" value=\"\" selected disabled>-----Select a Company-----</option>\n                    <option class=\"dropdown-item\" *ngFor=\"let company of companyListData\" selected=\"{{ company.name }}\"\n                        value=\"{{ company._id }}\">\n                        {{ company.name }}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.companyId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('companyId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('companyId').dirty ||\n                        employeeBasicForm.get('companyId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Branch Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"branchId\" formControlName=\"branchId\" (change)=\"onClick($event.target.value)\">\n                    <option class=\"dropdown-item\" value='' disabled>-----\n                        Select A Branch-----\n                    </option>\n                    <option class=\"dropdown-item\" *ngFor=\"let branch of branchList\" value=\"{{ branch._id }}\">\n                        {{ branch.name }}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.branchId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('branchId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('branchId').dirty ||\n                        employeeBasicForm.get('branchId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Department Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"departmentId\" formControlName=\"departmentId\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select A Department-----\n                      </option>\n                    <option class=\"dropdown-item\" *ngFor=\"let department of departmentList\" value=\"{{ department._id }}\">\n                        {{ department.title }}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.departmentId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('departmentId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('departmentId').dirty ||\n                        employeeBasicForm.get('departmentId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>JobProfile Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"jobProfileId\" formControlName=\"jobProfileId\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select A JobProfile-----\n                      </option>\n                    <option class=\"dropdown-item\" *ngFor=\"let jobProfile of jobProfileList\" value=\"{{ jobProfile._id }}\">\n                        {{ jobProfile.positionName }} - {{jobProfile.payBasis}}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.jobProfileId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('jobProfileId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('jobProfileId').dirty ||\n                        employeeBasicForm.get('jobProfileId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Employee Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Employee Name\" formControlName=\"name\" />\n                                <div *ngFor=\"let validation of validationMessage.name\">\n                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBasicForm.get('name').hasError(validation.type) &&\n                          (employeeBasicForm.get('name').dirty ||\n                          employeeBasicForm.get('name').touched)\n                          \" style=\"color: red;margin-left: 14px;\">\n                                        {{ validation.message }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>DOB :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"date\" placeholder=\"Enter Employee DOB\" formControlName=\"dob\" />\n                                <div *ngFor=\"let validation of validationMessage.dob\">\n                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBasicForm.get('dob').hasError(validation.type) &&\n                          (employeeBasicForm.get('dob').dirty ||\n                          employeeBasicForm.get('dob').touched)\n                          \" style=\"color: red;margin-left: 14px;\">\n                                        {{ validation.message }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h4>Contact Details</h4>\n                <div class=\"form-group\" [formGroup]=\"employeeBasicForm.get('contactDetails.personal')\">\n                    <h6>Personal Details :-</h6>\n                    <label class=\"col-sm-6 control-label\"><b>Phone No. :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Phone No.\" formControlName=\"phone\" />\n                        <div *ngFor=\"let validation of validationMessage.phone\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                  employeeBasicForm\n                  .get('contactDetails.personal.phone')\n                  .hasError(validation.type) &&\n                  (employeeBasicForm.get('contactDetails.personal.phone')\n                  .dirty ||\n                  employeeBasicForm.get('contactDetails.personal.phone')\n                  .touched)\n                  \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Landline No. :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Landline No.\" formControlName=\"landLineNum\" />\n                        <div *ngFor=\"let validation of validationMessage.landLineNum\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                  employeeBasicForm\n                  .get('contactDetails.personal.landLineNum')\n                  .hasError(validation.type) &&\n                  (employeeBasicForm.get('contactDetails.personal.landLineNum')\n                  .dirty ||\n                  employeeBasicForm.get('contactDetails.personal.landLineNum')\n                  .touched)\n                  \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Email :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Email Id\" formControlName=\"email\" />\n                        <div *ngFor=\"let validation of validationMessage.email\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                  employeeBasicForm\n                  .get('contactDetails.personal.email')\n                  .hasError(validation.type) &&\n                  (employeeBasicForm.get('contactDetails.personal.email')\n                  .dirty ||\n                  employeeBasicForm.get('contactDetails.personal.email')\n                  .touched)\n                  \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <br />\n                </div>\n\n                <input type=\"checkbox\" name=\"vehicle2\" (change)=\"sameAsPersonalDetails(actionBox)\"> Same as Personal Details<br><br>\n\n                <h6>Official Details :-</h6>\n                <div class=\"form-group\" [formGroup]=\"employeeBasicForm.get('contactDetails.official')\">\n                    <label class=\"col-sm-6 control-label\"><b>Phone No. :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Phone No.\" formControlName=\"phone\" />\n                        <div *ngFor=\"let validation of validationMessage.phone\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                    employeeBasicForm\n                    .get('contactDetails.official.phone')\n                    .hasError(validation.type) &&\n                    (employeeBasicForm.get('contactDetails.official.phone')\n                    .dirty ||\n                    employeeBasicForm.get('contactDetails.official.phone')\n                    .touched)\n                    \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Landline No. :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Landline No.\" formControlName=\"landLineNum\" />\n                        <div *ngFor=\"let validation of validationMessage.landLineNum\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                    employeeBasicForm\n                    .get('contactDetails.official.landLineNum')\n                    .hasError(validation.type) &&\n                    (employeeBasicForm.get('contactDetails.official.landLineNum')\n                    .dirty ||\n                    employeeBasicForm.get('contactDetails.official.landLineNum')\n                    .touched)\n                    \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Email :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Email Id\" formControlName=\"email\" />\n                        <div *ngFor=\"let validation of validationMessage.email\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                    employeeBasicForm\n                    .get('contactDetails.official.email')\n                    .hasError(validation.type) &&\n                    (employeeBasicForm.get('contactDetails.official.email')\n                    .dirty ||\n                    employeeBasicForm.get('contactDetails.official.email')\n                    .touched)\n                    \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"height:30px\">\n                    <div class=\"form-group col-sm-offset-2 col-md-5\">\n                        <input type=\"checkbox\" formControlName=\"officialEmailAsLoginEmail\">&nbsp; Do You Want Official Email as Login Email\n                    </div>\n                    <!-- <div class=\"form-group col-sm-offset-2 col-md-5\"> -->\n                    <div *ngIf=\"basicDetail === 'Submit'\">\n                        <input type=\"checkbox\" (click)=\"oncheck()\" style=\"margin-top:5px\">&nbsp; Assign TL/Manager\n                    </div>\n                    <div class=\"form-group col-sm-offset-2 col-md-2\" *ngIf=\"checkbox\">\n                        <select class=\"dropdown dropdown-toggle form-control\" Name=\"Company\" formControlName=\"tlId\" (change)=\"onSelect($event.target.value)\">\n            <option class=\"dropdown-item\" ng-selected=\"true\" value=\"\" selected disabled>Select TL/Manager</option>\n            <option class=\"dropdown-item\" *ngFor=\"let tl of companyTlList\" selected=\"{{ tl.name }}\"\n                value=\"{{ tl._id }}\">\n                {{ tl.name }}\n            </option>\n          </select>\n                    </div>\n                    <div *ngFor=\"let validation of validationMessage.companyId\">\n                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                employeeBasicForm\n                .get('companyId')\n                .hasError(validation.type) &&\n                (employeeBasicForm.get('companyId').dirty ||\n                employeeBasicForm.get('companyId').touched)\n                \" style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                    <!-- </div> -->\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"col-sm-offset-2 col-sm-10\">\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"employeeBasicForm.invalid\" (click)=\"scroll(target)\">\n              {{ basicDetail }}\n              </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <!-- basicDetails end here -->\n\n        <!-- Bio details start  -->\n        <div class=\"tab-pane \" id=\"bio\" role=\"tabpanel\" #target>\n            <!-- list bio details -->\n            <div class=\"card\" *ngIf=\"bioList\">\n\n                <div class=\"panel-body\">\n                    <ul class=\"list-group\">\n                        <li class=\"list-group-item\" *ngFor=\"let list of biodata\">\n                            <div class=\"card\" style=\"background-color:ghostwhite\">\n                                <h5 style=\"text-align: center;\">Employee Bio Details </h5>\n                                <table class=\"table\" style=\"margin: auto\">\n                                    <tr>\n                                        <th>Height:</th>\n                                        <td>{{ list.height }}</td>\n                                        <th>Weight:</th>\n                                        <td>{{ list.weight}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Color:</th>\n                                        <td>{{ list.color}}</td>\n                                        <th>Mole Identification:</th>\n                                        <td>{{ list.moleIdentification}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Multiple Handicapped:</th>\n                                        <td>{{ list.multipleHandicapped}}</td>\n                                        <th>Multiple Handicapped Percent:</th>\n                                        <td>{{ list.multipleHandicappedPercent}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Eye Power:</th>\n                                        <td>{{ list.eyePower}}</td>\n                                        <th>Blood Group:</th>\n                                        <td>{{ list.bloodGroup}}</td>\n\n                                    </tr>\n                                </table>\n                                <h5 style=\"text-align: center;\">Physical Description Details</h5>\n                                <table class=\"table\" style=\"margin: auto\">\n                                    <tr>\n                                        <th>Hospital Name:</th>\n                                        <td>{{ list.illness.mental.hospitalName }}</td>\n                                        <th>Mental Illness Name:</th>\n                                        <td>{{ list.illness.mental.mentalIllnessName}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Treatment Duration:</th>\n                                        <td>{{ list.illness.mental.treatmentDuration}}</td>\n                                        <th>Treatment Name:</th>\n                                        <td>{{ list.illness.mental.treatmentName}}</td>\n                                    </tr>\n                                </table>\n                                <h5 style=\"text-align: center;\">Mental Description Details</h5>\n                                <table class=\"table\" style=\"margin: auto\">\n                                    <tr>\n                                        <th>Hospital Name:</th>\n                                        <td>{{ list.illness.physical.hospitalName }}</td>\n                                        <th>Account Number:</th>\n                                        <td>{{ list.illness.physical.illnessStatus}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Physical Illness Name:</th>\n                                        <td>{{ list.illness.physical.physicalIllnessName}}</td>\n                                        <th>Treatment Duration:</th>\n                                        <td>{{ list.illness.physical.treatmentDuration}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Treatment Name:</th>\n                                        <td>{{ list.illness.physical.treatmentName}}</td>\n                                    </tr>\n                                </table>\n                                <div>\n                                    <button style=\"float: right\" (click)=\"bioEdit()\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- list bio details -->\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                </p>\n            </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeBioForm\" (ngSubmit)=\"employeeBioFormData()\" novalidate *ngIf=\"bioForm\">\n                <h3>Employee Bio</h3>\n                <br />\n                <div [formGroup]=\"employeeBioForm.get('bio')\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>HEIGHT:&nbsp;(In Feet and Inches)&nbsp;(for eg: 3'11\")</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Height\" formControlName=\"height\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.height\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.height').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.height').dirty ||\n                            employeeBioForm.get('bio.height').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>WEIGHT:&nbsp;(In Kgs only)&nbsp;(for eg: 30kg)</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Weight\" formControlName=\"weight\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.weight\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.weight').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.weight').dirty ||\n                            employeeBioForm.get('bio.weight').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"form-group col-md-4\">\n                <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>SKIN COMPLEXION:&nbsp;</b></label>\n                  <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Skin Complexion\"\n                        formControlName=\"color\" />\n                  </div>\n                </div>\n            </div> -->\n                        <div class=\"form-group col-md-4\">\n\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>SKIN COMPLEXION:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"color\">\n                        <option class=\"dropdown-item\" value='' disabled>-----\n                            Select Skin Complexion-----\n                        </option>\n                      <optgroup label=\"Pale White\">\n                          <option class=\"dropdown-item\" value=\"Light\">Light</option>\n                      </optgroup>\n                      <optgroup label=\"Fair\">\n                          <option class=\"dropdown-item\" value=\"White\">White</option>\n                      </optgroup>\n                      <optgroup label=\"White to Light Brown\">\n                          <option class=\"dropdown-item\" value=\"Medium\">Medium</option>\n                      </optgroup>\n                      <optgroup label=\"Moderate Brown\">\n                          <option class=\"dropdown-item\" value=\"Olive\">Olive</option>\n                      </optgroup>\n                      <optgroup label=\"Dark Brown\">\n                          <option class=\"dropdown-item\" value=\"Brown\">Brown</option>\n                      </optgroup>\n                      <optgroup label=\"Brown to Black\">\n                          <option class=\"dropdown-item\" value=\"Very Dark\">Very Dark</option>\n                      </optgroup>\n                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-6\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>MOLE IDENTIFICATION OR OTHER MARKS:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Mole Identification\" formControlName=\"moleIdentification\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>BLOOD GROUP:&nbsp;(for eg: AB-)</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Blood Group\" formControlName=\"bloodGroup\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.bloodGroup\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                            employeeBioForm.get('bio.bloodGroup').hasError(validation.type) &&\n                              (employeeBioForm.get('bio.bloodGroup').dirty ||\n                              employeeBioForm.get('bio.bloodGroup').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>EYE POWER:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Eye Power\" formControlName=\"eyePower\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>HANDICAPPED:&nbsp;</b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" (change)=\"check($event.target.value)\" formControlName=\"handicapped\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select Option-----\n                      </option>\n                      <option class=\"dropdown-item\" value=\"false\">No</option>\n                      <option class=\"dropdown-item\" value=\"true\">Yes</option>\n                  </select>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4\" *ngIf=\"show\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>HANDICAPPED PERCENTAGE:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Percenatge\" formControlName=\"handicappedPercent\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.handicappedPercent\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.handicappedPercent').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.handicappedPercent').dirty ||\n                            employeeBioForm.get('bio.handicappedPercent').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-6\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>MULTIPLE HANDICAPPED:&nbsp;</b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"multipleHandicapped\" (change)=\"checked($event.target.value)\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select Option-----\n                      </option>\n                      <option class=\"dropdown-item\" value=\"false\">No</option>\n                      <option class=\"dropdown-item\" value=\"true\">Yes</option>\n                  </select>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\" *ngIf=\"shown\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>MULTIPLE HANDICAPPED PERCENTAGE:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Percenatge\" formControlName=\"multipleHandicappedPercent\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.multipleHandicappedPercent\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.multipleHandicappedPercent').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.multipleHandicappedPercent').dirty ||\n                            employeeBioForm.get('bio.multipleHandicappedPercent').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h6>Physical Description</h6>\n                <div class=\"form-row\" [formGroup]=\"employeeBioForm.get('bio.illness.physical')\">\n                    <div class=\"form-group col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-10 control-label\"><b>PHYSICHAL ILLNESS IF ANY PROLONG MORE THAN A WEEK :&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Physical Illness\" formControlName=\"physicalIllnessName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>NAME OF THE TREATMENT TAKEN:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment\" formControlName=\"treatmentName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>HOSPITAL NAME:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Hospital Name\" formControlName=\"hospitalName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>DURATION OF TREATMENT:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment Duration\" formControlName=\"treatmentDuration\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>CURRENT STATUS OF ILLNESS:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Illness Status\" formControlName=\"illnessStatus\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h6>Mental Description</h6>\n                <div class=\"form-row\" [formGroup]=\"employeeBioForm.get('bio.illness.mental')\">\n                    <div class=\"form-group col-md-8\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>MENTAL ILLNESS IF ANY PROLONG MORE THAN A WEEK :&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Mental Illness\" formControlName=\"mentalIllnessName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>NAME OF THE TREATMENT TAKEN:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment Name\" formControlName=\"treatmentName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>HOSPITAL NAME:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Hospital name\" formControlName=\"hospitalName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>DURATION OF TREATMENT:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment Duration\" formControlName=\"treatmentDuration\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>CURRENT STATUS OF ILLNESS:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Illness Status\" formControlName=\"illnessStatus\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-offset-2 col-sm-10\">\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]='employeeBioForm.invalid' (click)=\"scroll(target)\">\n            {{ employeeBioButton }}\n            </button>\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"bioCancel()\">Cancel</button>\n\n                    </div>\n                </div>\n            </form>\n        </div>\n        <!-- Bio details end  -->\n\n        <!-- address section ui start -->\n        <div class=\"tab-pane\" id=\"address\" role=\"tabpanel\">\n            <div class=\"card-body\">\n                <input type=\"hidden\" id=\"employeeId\" #employeeId value=\"{{ hidden }}\" />\n                <!-- for show address list  -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"addressMsg\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Door Number </th>\n                                            <th>Zip code </th>\n                                            <th>Street Name 1 </th>\n                                            <th>Address Type</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of addressList\">\n                                        <tr>\n                                            <td> {{list.doorNum}} </td>\n                                            <td> {{list.zipcode}} </td>\n                                            <td> {{list.streetName1}}</td>\n                                            <td> {{list.addressType}}</td>\n                                            <td>\n                                                <button (click)=\"addressEdit(list._id)\" class=\"btn btn-primary\" style=\"color: white;\"><i class=\"fa fa-pencil-square-o\"></i>\n                                  </button>&nbsp;\n                                                <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeAddess(list._id)\"><i class=\"fa fa-trash\"></i>\n                                  </button >\n                              </td>\n                            </tr>\n                        </tbody>\n                      </table>\n                  </div>\n                </ul>\n            </div>\n          </div>\n          <!-- show address list end -->\n          <div *ngIf=\"addAddess\">\n              <div class=\"col-sm-offset-2\">\n                  <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                  </p>\n              </div>\n              <div class=\"col-sm-offset-2\">\n                  <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                  </p>\n              </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeAddressForm\" (ngSubmit)=\"addressForm()\"\n            novalidate>\n            <h3>{{titleName}}</h3>\n            <div class=\"form-group\" [formGroup]=\"employeeAddressForm.get('address')\">\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>DOOR NO :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Door No.\" value=\"\"\n                            formControlName=\"doorNum\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>LANDMARK :&nbsp;<span\n                        style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Landmark\" formControlName=\"landmark\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>ADDRESS TYPE :</b></label>\n                      <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"addressType\">\n                        <option class=\"dropdown-item\" value='null' disabled>-----\n                            Choose Address Type-----\n                        </option>\n                        <option [ngValue]=\"addressType\" value=\"\" *ngFor=\"let addressType of address\">\n                        {{ addressType }}\n                        </option>\n                      </select>\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-6\">\n                      <label class=\"col-sm-6 control-label\"><b>STREET NAME 1 :&nbsp;<span\n                        style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Street Name 1\"\n                            formControlName=\"streetName1\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                      <label class=\"col-sm-6 control-label\"><b>STREET NAME 2 :&nbsp;<span\n                        style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Street Name 2\"\n                            formControlName=\"streetName2\" />\n                      </div>\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>ZIPCODE :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Zipcode\" formControlName=\"zipcode\" />\n\n                        <div *ngFor=\"let validation of validationMessageZip.zipcode\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              employeeAddressForm\n                              .get('address.zipcode')\n                              .hasError(validation.type) &&\n                              (employeeAddressForm.get('address.zipcode')\n                              .dirty ||\n                              employeeAddressForm.get('address.zipcode')\n                              .touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                              {{ validation.message }}\n                            </div>\n                        </div>\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>CITY :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter City\" formControlName=\"district\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>STATE :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter State\" formControlName=\"state\" />\n                      </div>\n                  </div>\n                </div>\n            </div>\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"employeeAddressForm.invalid\" >\n                {{buttonName}}\n                </button>\n                                                <button type=\"submit\" (click)=\"cancleAddForm()\" class=\"btn btn-danger\">\n                  Cancel\n                </button>\n                            </div>\n                            </form>\n                    </div>\n                </div>\n                <button (click)=\"addNewAddress()\" *ngIf=\"addessBtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Address</button>\n            </div>\n            <!-- address seccion ui end -->\n\n            <!-- education ui stat -->\n            <div class=\"tab-pane\" id=\"educationDetails\" role=\"tabpanel\">\n                <!-- education list start -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"listMesg\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Course Name </th>\n                                            <th>Institute Name </th>\n                                            <th>Pass Out Year </th>\n                                            <th>Scored Percentage </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of educationData\">\n                                        <tr>\n                                            <td> {{list?.courseName}} </td>\n                                            <td> {{list?.instituteName}} </td>\n                                            <td> {{list?.passOutYear}}</td>\n                                            <td> {{list?.scoredPercent}}</td>\n                                            <td>\n                                                <!-- <a (click)=\"educationEdit(list._id)\" style=\"float: right;color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp; -->\n                                                <button (click)=\"educationEdit(list._id)\" style=\"color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>\n                              </button>&nbsp;\n                                                <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeEducation(list._id)\"><i class=\"fa fa-trash\"></i>\n                              </button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <!-- education list end -->\n                <div *ngIf=\"EducationForm\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"empEducationForm\" (ngSubmit)=\"educationForm()\" novalidate>\n                        <h3>{{education}}</h3>\n                        <div class=\"form-group\" [formGroup]=\"empEducationForm.get('educationalDetails')\">\n                            <div class=\"form-row\">\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>COURSE NAME:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Course name\" formControlName=\"courseName\" />\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>INSTITUTE NAME:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Name of the INSTITUTE\" formControlName=\"instituteName\" />\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>PASS OUT YEAR:&nbsp;<span\n                      style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Year\" formControlName=\"passOutYear\" />\n                                        <div *ngFor=\"let validation of validationMessageEducation.passOutYear\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          empEducationForm\n                          .get('educationalDetails.passOutYear')\n                          .hasError(validation.type) &&\n                          (empEducationForm.get('educationalDetails.passOutYear')\n                          .dirty ||\n                          empEducationForm.get('educationalDetails.passOutYear')\n                          .touched)\n                          \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>STATUS:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"status\">\n                            <option class=\"dropdown-item\" value='null' disabled>-----\n                                Select Course Status-----\n                            </option>\n                            <option *ngFor=\"let courseStatus of educationalStatus\" [ngValue]=\"courseStatus\" >\n                            {{ courseStatus }}\n                            </option>\n                          </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>DESCRIPTION OF COURSE:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Description\" formControlName=\"description\" />\n                                    </div>\n                                </div>\n\n\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>SCORED PERCENTAGE:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Percenatge\" formControlName=\"scoredPercent\" />\n\n                                        <div *ngFor=\"let validation of validationMessageEducation.scoredPercent\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                            empEducationForm\n                            .get('educationalDetails.scoredPercent')\n                            .hasError(validation.type) &&\n                            (empEducationForm.get('educationalDetails.scoredPercent')\n                            .dirty ||\n                            empEducationForm.get('educationalDetails.scoredPercent')\n                            .touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"col-sm-offset-2 col-sm-10\">\n                                        <button type=\"submit\" class=\"btn btn-success\" [disabled]='empEducationForm.invalid'>\n                      {{educationBtnadd}}\n                      </button>\n                                        <button type=\"submit\" class=\"btn btn-danger\" (click)=\"cancleEducation()\" style=\"margin-top:-45%;margin-left:72%;\">\n                        Cancel\n                      </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <a (click)=\"addNewEducation()\" *ngIf=\"educationBtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Education</a>\n            </div>\n            <!-- education ui end -->\n\n            <!-- upload Document html code start here  -->\n            <div class=\"tab-pane\" id=\"uploadDocument\" role=\"tabpanel\">\n                <div class=\"card-body\">\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"uploadedDocumentDetails.length > 0\">\n                        <h4 style=\"text-align: center;\"><strong>Upload Employee Enlisted Documents</strong></h4>\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Document Name </th>\n                                                <th>Required </th>\n                                                <th>Upload Doc Image</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\"let uploadedDocuments of uploadedDocumentDetails; index as i\">\n                                            <tr>\n                                                <td> {{uploadedDocuments.title}} </td>\n                                                <td *ngIf=\"uploadedDocuments.isRequired\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                                                <td *ngIf=\"!uploadedDocuments.isRequired\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n                                                <td> <input type=\"file\" class=\"form-control-file border\" id=\"documnetDocImage{{i+1}}\" (change)=\"onFileSelect($event)\" accept=\"image/*\"> </td>\n                                                <td>\n                                                    <button class=\"btn btn-outline-primary btn-round\" (click)=\"uploadDocs(uploadedDocuments._id,i+1,'Add')\">\n                                <i class=\"fas fa-camera-retro\"></i> Submit\n                              </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"employeeDocumentsDetails.length > 0\">\n                        <h4 style=\"text-align: center;\"><strong>Uploaded Documents Enlisted</strong></h4>\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Document Name </th>\n                                                <th>Required </th>\n                                                <th>File Size</th>\n                                                <th>Uploaded At</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\"let existingDocuments of employeeDocumentsDetails; index as i\">\n                                            <tr>\n                                                <td> {{existingDocuments.documentTypeName}} </td>\n                                                <td *ngIf=\"existingDocuments.isRequired\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                                                <td *ngIf=\"!existingDocuments.isRequired\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n                                                <td> {{existingDocuments.fileSize}} </td>\n                                                <td>{{ existingDocuments.metaData.createdAt | date:'fullDate' }} {{ existingDocuments.metaData.createdAt | date:'shortTime' }}</td>\n                                                <td>\n                                                    <button title=\"Update\" class=\"btn btn-primary\" style=\"color: white;\" data-toggle=\"modal\" data-target=\"#updateDocument\" data-backdrop=\"static\" (click)=\"updateDocuments(existingDocuments.documentTypeId)\"><i class=\"fa fa-pencil-square-o\"></i>\n                                  </button>&nbsp;\n                                                    <button title=\"Info\" class=\"btn btn-info\" style=\"color: white;\" (click)=\"openImage(existingDocuments.file)\"><i class=\"fas fa-file-alt\"></i>\n                                  </button>&nbsp;\n                                                    <button title=\"Delete\" class=\"btn btn-danger\" (click)=\"deleteDocument(existingDocuments.documentTypeId)\"><i class=\"fa fa-trash\"></i></button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- upload document html code end here -->\n\n            <!-- upload bank details html ui start -->\n            <div class=\"tab-pane\" id=\"bankDetails\" role=\"tabpanel\">\n                <!-- list bank details -->\n                <div class=\"card\" *ngIf=\"bankList\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <li class=\"list-group-item\" *ngFor=\"let list of bankListData\">\n                                <div class=\"card\" style=\"background-color:ghostwhite\">\n                                    <h5 style=\"text-align: center;\">Offical Bank Details </h5>\n                                    <table class=\"table\" style=\"margin: auto\">\n                                        <tr>\n                                            <th>Bank Name:</th>\n                                            <td>{{ list.official.name }}</td>\n                                            <th>Account Number:</th>\n                                            <td>{{ list.official.accountNum}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Account Place:</th>\n                                            <td>{{ list.official.accountPlace}}</td>\n                                            <th>Account Type:</th>\n                                            <td>{{ list.official.accountType}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Remarks:</th>\n                                            <td>{{ list.official.remarks}}</td>\n                                        </tr>\n                                    </table>\n                                    <h5 style=\"text-align: center;\">Personal Bank Details</h5>\n                                    <table class=\"table\" style=\"margin: auto\">\n                                        <tr>\n                                            <th>Bank Name:</th>\n                                            <td>{{ list.personal.name }}</td>\n                                            <th>Account Number:</th>\n                                            <td>{{ list.personal.accountNum}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Account Place:</th>\n                                            <td>{{ list.personal.accountPlace}}</td>\n                                            <th>Account Type:</th>\n                                            <td>{{ list.personal.accountType}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Remarks:</th>\n                                            <td>{{ list.personal.remarks}}</td>\n                                        </tr>\n                                    </table>\n                                    <div>\n                                        <button style=\"float: right\" (click)=\"editBankDetails()\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</button>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list banki details -->\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                        <strong>{{ errMsg }}</strong>\n                    </p>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                        <strong>{{ successMsg }}</strong>\n                    </p>\n                </div>\n                <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"bankDetailsForm\" (ngSubmit)=\"bankDetailsAdd()\" novalidate *ngIf=\"bankForm\">\n                    <h5 class=\"text-center\"><b>Official Details</b></h5>\n                    <div [formGroup]=\"bankDetailsForm.get('bankDetails.official')\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Bank Name\" formControlName=\"name\">\n                                        <div *ngFor=\"let validation of validationMessageBank.name\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                bankDetailsForm.get('bankDetails.official.name').hasError(validation.type) &&\n                                (bankDetailsForm.get('bankDetails.official.name').dirty ||\n                                bankDetailsForm.get('bankDetails.official.name').touched)\n                                \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"acountnumber\" placeholder=\"Enter Account Number\" formControlName=\"accountNum\">\n                                        <div *ngFor=\"let validation of validationMessageBank.accountNum\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                bankDetailsForm.get('bankDetails.official.accountNum').hasError(validation.type) &&\n                                (bankDetailsForm.get('bankDetails.official.accountNum').dirty ||\n                                bankDetailsForm.get('bankDetails.official.accountNum').touched)\n                                \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Origin:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"acountplace\" placeholder=\"Enter Account Origin\" formControlName=\"accountPlace\">\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Remarks:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"remark\" placeholder=\"Enter Remarks\" formControlName=\"remarks\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"acountType\" placeholder=\"Enter Account Type\" formControlName=\"accountType\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr>\n\n\n                    <input type=\"checkbox\" name=\"vehicle2\" (change)=\"sameAsOfficialDetails(actionBox)\" [checked]='actionBox'> Same as Official Details <br><br>\n\n\n\n                    <div [formGroup]=\"bankDetailsForm.get('bankDetails.personal')\">\n                        <h5 class=\"text-center\"><b>Personal Details</b></h5>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pinputName\" placeholder=\"Enter Bank Name\" formControlName=\"name\">\n                                        <div *ngFor=\"let validation of validationMessageBank.name\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              bankDetailsForm.get('bankDetails.personal.name').hasError(validation.type) &&\n                              (bankDetailsForm.get('bankDetails.personal.name').dirty ||\n                              bankDetailsForm.get('bankDetails.personal.name').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pacountnumber\" placeholder=\"Enter Account Number\" formControlName=\"accountNum\">\n                                        <div *ngFor=\"let validation of validationMessageBank.accountNum\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              bankDetailsForm.get('bankDetails.personal.accountNum').hasError(validation.type) &&\n                              (bankDetailsForm.get('bankDetails.personal.accountNum').dirty ||\n                              bankDetailsForm.get('bankDetails.personal.accountNum').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Origin:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pacountplace\" placeholder=\"Enter Account Origin\" formControlName=\"accountPlace\">\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Remarks:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"premark\" placeholder=\"Enter Remarks\" formControlName=\"remarks\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pacountType\" placeholder=\"Enter Account Type\" formControlName=\"accountType\">\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"bankDetailsForm.invalid\" (click)=\"scroll(target)\">{{bannBtn}}</button>\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"bankDetailsCancel()\">Cancel</button>\n\n                    </div>\n\n                </form>\n            </div>\n            <!-- upload bank details html ui end-->\n\n            <!-- upload Work Experience ui start-->\n            <div class=\"tab-pane\" id=\"workExperience\" role=\"tabpanel\">\n                <!-- list of experience -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"listExprience\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Company Name </th>\n                                            <th>Experience Years </th>\n                                            <th>Designation </th>\n                                            <th>Remarks </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of exprienceListData\">\n                                        <tr>\n                                            <td> {{list?.companyName}} </td>\n                                            <td> {{list?.experienceYears}} </td>\n                                            <td> {{list?.designation}}</td>\n                                            <td> {{list?.remarks}}</td>\n                                            <td>\n                                                <button (click)=\"expriceneEdit(list._id)\" style=\"color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i> </button>&nbsp;\n                                                <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeExpeience(list._id)\"><i class=\"fa fa-trash\"></i></button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list of experience -->\n                <div *ngIf=\"workExperience\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"workExperienceForm\" (ngSubmit)=\"addWorkExp()\" novalidate>\n                        <h3>{{exprienceTitle}}</h3>\n                        <div class=\"row\" [formGroup]=\"workExperienceForm.get('workExperiences')\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Company Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Enter Company Name\" formControlName=\"companyName\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Designation:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"designation\" placeholder=\"Enter Designation\" formControlName=\"designation\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Experience Years:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"experience\" placeholder=\"Enter Experience Years\" formControlName=\"experienceYears\">\n\n                                        <div *ngFor=\"let validation of validationMessageExper.experienceYears\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                            workExperienceForm.get('workExperiences.experienceYears').hasError(validation.type) &&\n                              (workExperienceForm.get('workExperiences.experienceYears').dirty ||\n                              workExperienceForm.get('workExperiences.experienceYears').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Job Description:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Enter Job Description\" formControlName=\"jobDescription\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Reliving Reason:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"relivingre\" placeholder=\"Enter Reliving Reason\" formControlName=\"relivingReason\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Reliving Is:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"relivingIs\">\n                      <option [ngValue]=\"null\" disabled>-----Choose Reliving Status-----</option>\n                      <option *ngFor= 'let reliving of relivingIs' [ngValue]=\"reliving\" > {{ reliving }} </option>\n                    </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Remarks:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"remark\" placeholder=\"Enter Remarks\" formControlName=\"remarks\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"workExperienceForm.invalid\" (click)=\"scroll(target)\">{{experienceBtn}}</button>\n                        <button class=\"btn btn-danger\" (click)=\"cancleExperience()\">Cancel</button>\n                    </form>\n                </div>\n                <a (click)=\"addExperience()\" *ngIf=\"addExpbtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Experience</a>\n\n            </div>\n            <!-- upload work Experience ui end-->\n\n            <!-- upload skill category  -->\n            <div class=\"tab-pane\" id=\"skillCat\" role=\"tabpanel\">\n                <!-- <tag-input [(ngModel)]='items'></tag-input> -->\n                <!-- <tag-input [ngModel]=\"itemsAsObjects\"></tag-input> -->\n            </div>\n            <!-- upload skill category -->\n\n            <!-- Employee Family add  -->\n            <div class=\"tab-pane\" id=\"addFamily\" role=\"tabpanel\">\n                <input type=\"hidden\" id=\"familyId\" #familyId value=\"{{ familyIdValue }}\">\n                <div class=\"card\" style=\"background-color:whitesmoke;\" id=\"hide\" *ngIf=\"divShow\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Relation </th>\n                                            <th>Name</th>\n                                            <th>Education</th>\n                                            <th>Occupation</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of familyDetailsList\">\n                                        <tr>\n                                            <td> {{list.relation}} </td>\n                                            <td> {{list.name}} </td>\n                                            <td> {{list.education}}</td>\n                                            <td> {{list.occupation}}</td>\n                                            <td>\n                                                <button class=\"btn btn-primary\" (click)=\"updateValidation(list._id)\"><i\n                                  class=\"fa fa-pencil-square-o\"></i>\n                              </button>&nbsp;\n                                                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteFamilyDetails(list._id)\"><i\n                                  class=\"fa fa-trash\"></i></button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <div *ngIf=\"formShow\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <h3 style=\"text-align: center\">{{ title }} Family Details</h3>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addRelationForm\" (ngSubmit)=\"addFamilyDetails()\" novalidate>\n                        <div [formGroup]=\"addRelationForm.get('family')\">\n                            <div [formGroup]=\"addRelationForm.get('family.members')\">\n                                <label class=\"col-sm-6 control-label\"><b>Select Relation:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"relation\">\n                    <option class=\"dropdown-item\" value='null' disabled>-----Choose Relation Type-----</option>\n                  <option class=\"dropdown-item\" *ngFor=\"let relationMember of relation\" value=\"{{relationMember}}\">\n                      {{ relationMember}}\n                  </option>\n                </select>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Name:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Enter Name\" formControlName=\"name\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Age:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"age\" placeholder=\"Enter Age\" formControlName=\"age\">\n                                                <div *ngFor=\"let validation of validationMessageFamily.age\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                  addRelationForm.get('family.members.age').hasError(validation.type) &&\n                                    (addRelationForm.get('family.members.age').dirty ||\n                                    addRelationForm.get('family.members.age').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Occupation:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"occupation\" placeholder=\"Enter Occupation\" formControlName=\"occupation\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Education:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"education\" placeholder=\"Enter education\" formControlName=\"education\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Annually Income:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"income\" placeholder=\"Enter Income\" formControlName=\"income\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <label class=\"col-sm-6 control-label\"><b>Family Type:</b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" name=\"familyType\" formControlName=\"familyType\">\n          <option class=\"dropdown-item\" value='null' disabled>-----Choose Family Type-----</option>\n          <option [ngValue]=\"list\" *ngFor=\"let list of familyType\" selected>{{ list }}</option>\n          </select>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addRelationForm.invalid\" (click)=\"scroll(target)\">{{addfamilyBtn}}</button>\n                        <button class=\"btn btn-danger\" (click)=\"cancelValue()\">Cancel</button>\n                    </form>\n                </div>\n                <button type=\"button\" *ngIf=\"showAddFamilyButton\" style=\"float: right\" class=\"btn btn-primary\" (click)=\"showAddFamilyForm()\"><i class=\"fa fa-plus-square\"></i>&nbsp;Add Family</button>\n            </div>\n            <!-- Employee Family add  -->\n\n            <!--Profile payroll setting start-->\n            <div class=\"tab-pane\" id=\"profilePayroll\" role=\"tabpanel\">\n                <!-- list payroll setting  -->\n                <div class=\"card\" *ngIf=\"payrollList\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <li class=\"list-group-item\" *ngFor=\"let list of payrollData\">\n                                <div class=\"card\" style=\"background-color:ghostwhite\">\n                                    <h5 style=\"text-align: center;\">Payroll Details </h5>\n                                    <table class=\"table\" style=\"margin: auto\">\n                                        <tr>\n                                            <th>CTC:</th>\n                                            <td>{{ list.ctc }}</td>\n                                            <th>CTC Effective From Date:</th>\n                                            <td>{{ list.ctcEffectiveFromDate | date}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>CTC Effective To Date:</th>\n                                            <td>{{ list.ctcEffectiveToDate | date}}</td>\n                                            <th>Earned Leave Balance:</th>\n                                            <td>{{ list.earnedLeaveBalance}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Grade Rule:</th>\n                                            <td>{{ list.gradeRuleName}}</td>\n                                            <th>Paid Leave Balance:</th>\n                                            <td>{{ list.paidLeaveBalance}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Basic Pay</th>\n                                            <td>{{ list.basicPay}}</td>\n                                            <th>Payment Mode</th>\n                                            <td>{{ list.mode}}</td>\n                                        </tr>\n                                    </table>\n\n                                    <div>\n                                        <button style=\"float: right\" (click)=\"payrollSettingEdit()\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</button>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list payroll setting -->\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                        <strong>{{ errMsg }}</strong>\n                    </p>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                        <strong>{{ successMsg }}</strong>\n                    </p>\n                </div>\n                <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"payrollDetailsForm\" (ngSubmit)=\"payrollAdd()\" *ngIf=\"payrollForm\" novalidate>\n                    <div [formGroup]=\"payrollDetailsForm.get('payroll')\">\n                        <h5 class=\"text-center\"><b>Payroll Details</b></h5>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>CTC:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"ctc\" placeholder=\"Enter CTC\" formControlName=\"ctc\">\n                                        <div *ngFor=\"let validation of payrollValidations.ctc\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.ctc').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.ctc').dirty ||\n                            payrollDetailsForm.get('payroll.ctc').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>CTC Effective From Date:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"date\" id=\"ctcEffectiveFromDate\" placeholder=\"Enter CTC Effective From Date\" formControlName=\"ctcEffectiveFromDate\">\n                                        <div *ngFor=\"let validation of payrollValidations.ctcEffectiveFromDate\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.ctcEffectiveFromDate').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.ctcEffectiveFromDate').dirty ||\n                            payrollDetailsForm.get('payroll.ctcEffectiveFromDate').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>CTC Effective To Date:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"date\" id=\"ctcEffectiveToDate\" placeholder=\"Enter CTC Effective To Date\" formControlName=\"ctcEffectiveToDate\">\n                                        <div *ngFor=\"let validation of payrollValidations.ctcEffectiveToDate\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.ctcEffectiveToDate').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.ctcEffectiveToDate').dirty ||\n                            payrollDetailsForm.get('payroll.ctcEffectiveToDate').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Paid Leave Balance:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"paidLeaveBalance\" placeholder=\"Enter Paid Leave Balance\" formControlName=\"paidLeaveBalance\">\n                                        <div *ngFor=\"let validation of payrollValidations.paidLeaveBalance\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.paidLeaveBalance').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.paidLeaveBalance').dirty ||\n                            payrollDetailsForm.get('payroll.paidLeaveBalance').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Earned Leave Balance:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"earnedLeaveBalance\" formControlName=\"earnedLeaveBalance\" disabled>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Grade Rule:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <select class=\"dropdown dropdown-toggle form-control\" name=\"familyType\" formControlName=\"gradeRule\">\n                      <option class=\"dropdown-item\" value='' disabled>-----Choose Grade Rule Name-----</option>\n                      <option  *ngFor=\"let gradeRule of payrollGradeRuleList\" [ngValue]=\"gradeRule._id\" selected>{{ gradeRule.title }}</option>\n                    </select>\n                                        <div *ngFor=\"let validation of payrollValidations.gradeRule\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                      payrollDetailsForm.get('payroll.gradeRule').hasError(validation.type) &&\n                        (payrollDetailsForm.get('payroll.gradeRule').dirty ||\n                        payrollDetailsForm.get('payroll.gradeRule').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Basic Pay:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"basicPay\" placeholder=\"Enter Basic Pay\" formControlName=\"basicPay\">\n                                        <div *ngFor=\"let validation of payrollValidations.paidLeaveBalance\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.basicPay').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.basicPay').dirty ||\n                            payrollDetailsForm.get('payroll.basicPay').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Payment Mode:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n                                    <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"mode\">\n                    <option class=\"dropdown-item\" value='null' disabled>-----\n                        Choose Payment Mode-----\n                    </option>\n                    <option [ngValue]=\"paymentMode\" value=\"\" *ngFor=\"let paymentMode of paymentType\">\n                    {{ paymentMode }}\n                    </option>\n                  </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"payrollDetailsForm.invalid\" (click)=\"scroll(target)\">{{ payrollButton }}</button>\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"backPayrollBtn()\">Cancel</button>\n                </form>\n            </div>\n            <!-- profile payroll setting end -->\n\n            <!-- list of langulae skills starts -->\n            <div class=\"tab-pane\" id=\"languageSkill\" role=\"tabpanel\">\n                <!-- list of language skills -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"languageSkillList\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Read </th>\n                                            <th>Speak </th>\n                                            <th>Write </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of LanguageData\">\n                                        <tr>\n                                            <td> {{list.toRead}} </td>\n                                            <td> {{list.toSpeak}} </td>\n                                            <td> {{list.toWrite}}</td>\n                                            <td>\n                                                <button (click)=\"languageSkillEdit(list._id)\" style=\"color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i> </button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list of language skills -->\n                <div *ngIf=\"lsnguageSkillForm\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"languageSkillForm\" (ngSubmit)=\"addLanguageSkill()\" novalidate>\n                        <h3>{{languageSkillTitle}} Language</h3>\n                        <div [formGroup]=\"languageSkillForm.get('languageSkills')\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Speak:</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"toSpeak\" placeholder=\"Enter Speak Language\" formControlName=\"toSpeak\">\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Read:</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"toRead\" placeholder=\"Enter Read Language\" formControlName=\"toRead\">\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Write:</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"toWrite\" placeholder=\"Enter Write Language\" formControlName=\"toWrite\">\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"languageSkillForm.invalid\" (click)=\"scroll(target)\">{{skillLanguageBtn}}</button>\n                        <button class=\"btn btn-danger\" (click)=\"cancelLanguageSkill()\">Cancel</button>\n                    </form>\n                </div>\n                <button (click)=\"addLanguageSkillList()\" *ngIf=\"addLanguageBtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Language</button>\n            </div>\n            <!-- list of langulae skills end -->\n\n            <!-- Employee leave setting start-->\n            <div class=\"tab-pane\" id=\"leaveSetting\" role=\"tabpanel\">\n                <div class=\"card-body\">\n                    <input type=\"hidden\" id=\"employeeId\" #employeeId value=\"{{ hidden }}\" />\n                    <!-- for show leave list  -->\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"employeeLeaveList\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Start Date </th>\n                                                <th>End Date </th>\n                                                <th>Leave Per Month </th>\n                                                <th>Reason</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\" let list of employeeLeaveData\">\n                                            <tr>\n                                                <td> {{list.startDate | date}} </td>\n                                                <td> {{list.endDate | date}} </td>\n                                                <td> {{list.leavePerMonth}}</td>\n                                                <td> {{list.reason}}</td>\n                                                <td>\n                                                    <button (click)=\"leaveSettingUpdateDetails(list._id)\" class=\"btn btn-primary\" style=\"color: white;\"><i class=\"fa fa-pencil-square-o\"></i>\n                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <!-- show leave list end -->\n                    <div *ngIf=\"employeeLeaveForm\">\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                                <strong>{{ errMsg }}</strong>\n                            </p>\n                        </div>\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                                <strong>{{ successMsg }}</strong>\n                            </p>\n                        </div>\n                        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeLeaveDetailsForm\" (ngSubmit)=\"addLeaveSetting()\" novalidate>\n                            <h3 style=\"text-align: center;\">{{leaveSettingHeadingButton}}</h3>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>Start Date :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"date\" placeholder=\"Enter Start Date\" value=\"\" formControlName=\"startDate\" />\n                                            <div *ngFor=\"let validation of validationMessageLeaveSettings.startDate\">\n                                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                    employeeLeaveDetailsForm.get('startDate').hasError(validation.type) &&\n                                    (employeeLeaveDetailsForm.get('startDate').dirty ||\n                                    employeeLeaveDetailsForm.get('startDate').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                    {{ validation.message }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>Leave Per Month :&nbsp;<span\n                          style=\"color: darkred\">*</span></b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Leave Per Month\" formControlName=\"leavePerMonth\" />\n                                            <div *ngFor=\"let validation of validationMessageLeaveSettings.leavePerMonth\">\n                                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                employeeLeaveDetailsForm.get('leavePerMonth').hasError(validation.type) &&\n                                (employeeLeaveDetailsForm.get('leavePerMonth').dirty ||\n                                employeeLeaveDetailsForm.get('leavePerMonth').touched)\n                                \" style=\"color: red;margin-left: 14px;\">\n                                                    {{ validation.message }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>End Date :&nbsp;<span\n                          style=\"color: darkred\">*</span></b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"date\" value=\"\" placeholder=\"Enter End Date\" formControlName=\"endDate\" />\n                                            <div *ngFor=\"let validation of validationMessageLeaveSettings.endDate\">\n                                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                    employeeLeaveDetailsForm.get('endDate').hasError(validation.type) &&\n                                    (employeeLeaveDetailsForm.get('endDate').dirty ||\n                                    employeeLeaveDetailsForm.get('endDate').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                    {{ validation.message }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>Reason :</b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Reason\" formControlName=\"reason\" />\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                            <div class=\"col-sm-offset-2 col-sm-10\">\n                                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"employeeLeaveDetailsForm.invalid\">\n                  {{leaveButton}}\n                  </button>\n                                <button type='button' (click)=\"leaveSettingCancel()\" class=\"btn btn-danger\">\n                    Cancel\n                  </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <button (click)=\"addNewLeaveSettings()\" *ngIf=\"leaveSettingButton\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Leave Settings</button>\n            </div>\n            <!-- Employee leave setting end -->\n            <!--Employee Identity Proofs Panel Start-->\n            <div class=\"tab-pane\" id=\"identityproofs\" role=\"tabpanel\">\n                <div class=\"card-body\">\n                    <input type=\"hidden\" id=\"employeeId\" #employeeId value=\"{{ hidden }}\" />\n                    <!-- for show Identity Proofs list  -->\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"idProofsList\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Identity Name </th>\n                                                <th>Identity Number</th>\n                                                <th>Expiry Date</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\" let list of idProofsData\">\n                                            <tr>\n                                                <td> {{list.identityName}} </td>\n                                                <td> {{list.identityNum}} </td>\n                                                <td> {{list.expiryDate | date}}</td>\n                                                <td>\n\n                                                    <button (click)=\"idProofsSettingUpdateDetails(list._id)\" class=\"btn btn-primary\" style=\"color: white;\"><i\n                                  class=\"fa fa-pencil-square-o\"></i>\n                                </button>&nbsp;\n                                                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteIdentityProofs(list._id)\"><i\n                                  class=\"fa fa-trash\"></i></button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <!-- show Identity Proofs list end -->\n                    <div *ngIf=\"idProofsForm\">\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                                <strong>{{ errMsg }}</strong>\n                            </p>\n                        </div>\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                                <strong>{{ successMsg }}</strong>\n                            </p>\n                        </div>\n                        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"idProofsDetailsForm\" (ngSubmit)=\"addIdProofs()\" novalidate>\n                            <div [formGroup]=\"idProofsDetailsForm.get('identityProofs')\">\n                                <h3 style=\"text-align: center;\">{{idProofsHeadingButton}}</h3>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Identity Name :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Identity Name\" value=\"\" formControlName=\"identityName\" />\n                                                <div *ngFor=\"let validation of validationMessageIdProofsSettings.identityName\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                  idProofsDetailsForm.get('identityProofs.identityName').hasError(validation.type) &&\n                                  (idProofsDetailsForm.get('identityProofs.identityName').dirty ||\n                                  idProofsDetailsForm.get('identityProofs.identityName').touched)\n                                  \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Identity Number :&nbsp;<span\n                        style=\"color: darkred\">*</span></b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Identity Number\" formControlName=\"identityNum\" />\n                                                <div *ngFor=\"let validation of validationMessageIdProofsSettings.identityNum\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              idProofsDetailsForm.get('identityProofs.identityNum').hasError(validation.type) &&\n                              (idProofsDetailsForm.get('identityProofs.identityNum').dirty ||\n                              idProofsDetailsForm.get('identityProofs.identityNum').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Authority Name :&nbsp;</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Authority Name\" formControlName=\"authorityName\" />\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Issue Place :&nbsp;</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Issue Place\" formControlName=\"issuePlace\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Expiry Date :&nbsp;<span\n                          style=\"color: darkred\">*</span></b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"date\" value=\"\" placeholder=\"Enter Expiry Date\" formControlName=\"expiryDate\" />\n                                                <div *ngFor=\"let validation of validationMessageIdProofsSettings.expiryDate\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                    idProofsDetailsForm.get('identityProofs.expiryDate').hasError(validation.type) &&\n                                    (idProofsDetailsForm.get('identityProofs.expiryDate').dirty ||\n                                    idProofsDetailsForm.get('identityProofs.expiryDate').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Remarks :&nbsp;</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Remarks\" formControlName=\"remarks\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row col-sm-offset-2 col-sm-10\">\n                                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"idProofsDetailsForm.invalid\">\n                {{idProofsButton}}\n                </button>\n                                <button type='button' (click)=\"idProofsSettingsCancel()\" class=\"btn btn-danger\">\n                  Cancel\n                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <button (click)=\"addNewIdProofsSettings()\" *ngIf=\"idProofsSettingButton\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Identity Proofs</button>\n            </div>\n            <!--Employee Identity Proofs Panel End-->\n\n        </div>\n    </div>\n\n    <div class=\"modal\" id=\"updateDocument\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Update Document</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"card\" style=\"background-color:whitesmoke;\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Update Doc Image</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td> <input type=\"file\" class=\"form-control-file border\" id=\"updateExistingDocument\" (change)=\"onFileSelect($event)\" accept=\"image/*\"> </td>\n                                                <td>\n                                                    <button class=\"btn btn-outline-primary btn-round\" (click)=\"uploadDocs(documentTypeId,'updateExistingDocument','Update')\">\n                                <i class=\"fas fa-camera-retro\"></i> Submit\n                              </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"button\" id=\"dismissUpdateDocuments\" class=\"btn btn-danger\" style=\"float:right;\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-wizard',\n  templateUrl: './employee-wizard.component.html',\n  styleUrls: ['./employee-wizard.component.scss']\n})\nexport class EmployeeWizardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n"],"sourceRoot":"webpack:///"}