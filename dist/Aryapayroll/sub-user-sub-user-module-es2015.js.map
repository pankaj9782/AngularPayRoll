{"version":3,"sources":["./src/app/pages/sub-user/update-subusers-data/update-subusers-data.component.ts","./src/app/pages/sub-user/update-subusers-data/update-subusers-data.component.html","./src/app/pages/sub-user/sub-user.module.ts","./src/app/pages/sub-user/add-subusers/add-subusers.component.ts","./src/app/pages/sub-user/add-subusers/add-subusers.component.html","./src/app/pages/sub-user/show-subusers-list/show-subusers-list.component.ts","./src/app/pages/sub-user/show-subusers-list/show-subusers-list.component.html","./src/app/pages/sub-user/sub-user.component.ts","./src/app/pages/sub-user/sub-user.component.html","./src/app/pages/sub-user/sub-user-routing.module.ts","./src/app/pages/sub-user/sub-user-service/sub-user.service.ts"],"names":[],"mappings":"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","file":"sub-user-sub-user-module-es2015.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { SubUserService } from '../sub-user-service/sub-user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-subusers-data',\n  templateUrl: './update-subusers-data.component.html',\n  styleUrls: ['./update-subusers-data.component.scss']\n})\nexport class UpdateSubusersDataComponent implements OnInit {\n\n  snapshotParam:any = String;\n  updateSubUserForm: FormGroup;\n  successMsg:any= String;\n  successMessage: Boolean = false;\n  errMsg:any= String;\n  errorMsg: Boolean = false;\n  genderList: String[]= ['Male','Female','Others','N/A']\n\n\n\n  constructor(private route: ActivatedRoute, private api: SubUserService, public fb: FormBuilder, private ngZone: NgZone,\n    private router: Router,\n    private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.snapshotParam = this.route.snapshot.paramMap.get(\"subUserId\");\n    this.subUserFormValidation();\n    this.getSubUserExistingData();\n  }\n\n\n  //method for sub user validation\n  subUserFormValidation() {\n    try {\n      this.updateSubUserForm = this.fb.group({\n        name: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z ]*$'),\n        ])),\n        phone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        birthday: new FormControl(),\n        zipCode: new FormControl('', Validators.compose([\n          Validators.pattern('^[0-9]{6}(?:-[0-9]{4})?$'),\n        ])),\n        gender: new FormControl(),\n        email:new FormControl(),\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n//Method for Update Sub-User Details\n  updateSubUserFormData() {\n    try {\n      let cleanUpdateSubUserForm = this.util.cleanFormLevelOne(this.updateSubUserForm);\n      this.api.submitUpdateSubUserData(cleanUpdateSubUserForm.value, this.snapshotParam).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.getSubUserExistingData();\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n            this.router.navigateByUrl('/pages/sub-user/show-subusers-list');\n          }, 2000);\n        }\n        else if (data.status == \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n          },3000)\n        }\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Get existing data load on the form(autofill form)\n  getSubUserExistingData() {\n    try {\n      this.api.subUserDetails(this.snapshotParam).subscribe(data => {\n        if (data.status === \"success\") {\n              this.updateSubUserForm = this.fb.group({\n                name: new FormControl(data.data.name, Validators.compose([\n                  Validators.required,\n                  Validators.pattern('^[a-zA-Z ]*$'),\n                ])),\n                phone: new FormControl(data.data.phone, Validators.compose([\n                  Validators.required,\n                  Validators.minLength(10),\n                  Validators.maxLength(15),\n                  Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n                ])),\n                birthday: new FormControl(),\n                zipCode: new FormControl('', Validators.compose([\n                  Validators.pattern('^[0-9]{6}(?:-[0-9]{4})?$'),\n                ])),\n                gender: new FormControl(),\n                email:new FormControl(data.data.email),\n              })\n        }\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Property for show error message\n  validationMessage = {\n    'name': [\n      { type: 'required', message: 'Name Is Required'},\n      { type: 'pattern', message: 'Not a valid' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone Number Is Required'},\n      { type: 'minlength', message: 'Not a phone number ' },\n      { type: 'maxlength', message: 'Phone no. is too large' },\n      { type: 'pattern', message: 'Phone Number not valid' },\n    ],\n    'zipCode': [\n      { type: 'pattern', message: 'ZIP code not valid' },\n    ],\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Update Sub-User Details</h2>\n        <!-- <a routerLink=\"/pages/sub-user/show-subusers-list\" class=\"btn btn-primary btn-circle\" style=\"float: right;\"><i class=\"fa  fa-arrow-right\"></i></a> -->\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateSubUserForm\" (ngSubmit)=\"updateSubUserFormData()\">\n            <div class=\"form-group\">\n                 <label class=\"col-sm-6 control-label\"><b>Full Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"name\"\n                        formControlName=\"name\" required>\n                    <div *ngFor=\"let validation of validationMessage.name\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateSubUserForm.get('name').hasError(validation.type) && (updateSubUserForm.get('name').dirty || updateSubUserForm.get('name').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{validation.message}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                 <label class=\"col-sm-6 control-label\"><b>Phone Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"phone\" formControlName=\"phone\">\n                    <div *ngFor=\"let validation of validationMessage.phone\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateSubUserForm.get('phone').hasError(validation.type) && (updateSubUserForm.get('phone').dirty || updateSubUserForm.get('phone').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Email:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"email\" id=\"email\"  formControlName=\"email\" disabled >\n                    </div>\n                </div>\n<!----------------- For Further Work ---------------------------->\n\n            <!-- <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>DOB</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"date\" id=\"inputEmail\" placeholder=\"DOB \"\n                        value=\"{{ list.profile.contactInfo.birthday }}\" formControlName=\"birthday\" required>\n                    <div *ngFor=\"let validation of validationMessage.birthday\">\n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"updateSubUserForm.get('birthday').hasError(validation.type) && (updateSubUserForm.get('birthday').dirty || updateSubUserForm.get('birthday').touched)\"\n                            class=\"alert alert-danger\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Zip Code</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputZipcode\" placeholder=\"Enter Zip Code\"\n                        value=\"{{ list.profile.contactInfo.zipCode }}\" formControlName=\"zipCode\">\n                    <div *ngFor=\"let validation of validationMessage.zipCode\">\n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"updateSubUserForm.get('zipCode').hasError(validation.type) && (updateSubUserForm.get('zipCode').dirty || updateSubUserForm.get('zipCode').touched)\"\n                            class=\"alert alert-danger\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label \"><b>Gender:-</b></label>\n                <select class=\"dropdown dropdown-toggle form-control\" Name=\"gender\" formControlName=\"gender\"\n                    value=\"{{ list.profile.contactInfo.gender }}\">\n                    <option class=\"dropdown-item\" value=\"blank\" selected disabled>Choose Gender</option>\n                    <option class=\"dropdown-item\" value=\"Male\">Male</option>\n                    <option class=\"dropdown-item\" value=\"Female\">Female</option>\n                    <option class=\"dropdown-item\" value=\"Others\">Others</option>\n                    <option class=\"dropdown-item\" value=\"N/A\">N/A</option>\n                </select>\n            </div> -->\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateSubUserForm.invalid\">Update</button>\n                    <button type=\"submit\" class=\"btn btn-danger\" routerLink=\"/pages/sub-user/show-subusers-list\">Cancel</button>\n                </div>\n            </div>\n        </form>\n\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SubUserRoutingModule } from './sub-user-routing.module';\nimport { SubUserComponent } from './sub-user.component';\nimport { AddSubusersComponent } from './add-subusers/add-subusers.component';\nimport { ShowSubusersListComponent } from './show-subusers-list/show-subusers-list.component';\nimport { SubUserService } from './sub-user-service/sub-user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateSubusersDataComponent } from './update-subusers-data/update-subusers-data.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n    declarations: [SubUserComponent,AddSubusersComponent, ShowSubusersListComponent, UpdateSubusersDataComponent],\n    imports: [\n        CommonModule,\n        SubUserRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        HttpClientModule,\n        NgxSpinnerModule   \n    ],\n    providers: [SubUserService,AuthGuard],\n})\nexport class SubUserModule { }","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubUserService } from '../sub-user-service/sub-user.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { RolesService } from '../../roles/roles-service/roles.service';\n\n@Component({\n  selector: 'app-add-subusers',\n  templateUrl: './add-subusers.component.html',\n  styleUrls: ['./add-subusers.component.scss']\n})\nexport class AddSubusersComponent implements OnInit {\n\n  subUserForm: FormGroup;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  genderList:String[]= ['Male','Female','Others','N/A'];\n  rolePermissionInfo: any;\n\n  constructor(public fb: FormBuilder, private api:SubUserService,private ngZone: NgZone, private router: Router,\n    private spinner: NgxSpinnerService,\n    private util: UtilitiesService,\n    private roleAPI: RolesService\n     ) { }\n\n  ngOnInit() {\n    this.subUserFormValidation();\n    this.rolePermission();\n  }\n\n  //method for sub user validation\n  subUserFormValidation(){\n    try{\n    this.subUserForm = this.fb.group({\n    name:new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('^[a-zA-Z ]*$'),\n    ])),\n      phone: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(15),\n        Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n      ])),\n      email:new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n      ])),\n      roleId: new FormControl('',Validators.required)\n    })\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n//Method for submit add new sub-users form data an\nsubUserFormData(){\n  try{\n    let cleansubUserForm = this.util.cleanFormLevelOne(this.subUserForm);\n    this.spinner.show();\n    this.api.addSubUsersData(cleansubUserForm.value).subscribe(data=>{\n      if(data.status === \"success\"|| data.status === 200){\n        this.successMessage = true ;\n        this.errorMsg = false ;\n        this.successMsg = data.message;\n        this.spinner.hide();\n        setTimeout(() => {\n          this.handleErrroMessage();\n          this.ngZone.run(()=>this.router.navigateByUrl('/pages/sub-user/show-subusers-list'));\n        }, 7000);\n      }\n      else if(data.status == \"error\"){\n        this.subUserForm.get('email').setValue('');\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        this.spinner.hide();\n        setTimeout(()=> {\n          this.handleErrroMessage();\n        },2000)\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n\n  }\n\n\n//Property for show error message\nvalidationMessage = {\n  'name': [\n    { type: 'required', message: 'Name is required' },\n    { type: 'pattern', message: 'Not a valid name' }\n  ],\n  'email': [\n    { type: 'required', message: 'Email is required' },\n    { type: 'pattern', message: 'Enter a valid email' }\n  ],\n  'phone': [\n    { type: 'required', message: 'Phone No. is required' },\n    { type: 'minlength', message: 'Not a phone number ' },\n    { type: 'maxlength', message: 'Phone no. is too large' },\n    { type: 'pattern', message: 'Phone Number not valid' },\n  ],\n  'roleId': [\n    { type: 'required', message: 'Role is required' },\n  ],\n}\n// Error Handling Message\nhandleErrroMessage(){\n  this.successMessage = false;\n  this.errorMsg = false;\n  this.successMsg = '';\n  this.errMsg = '';\n}\n\n// roles permissions\nrolePermission(){\n  try {\n    this.roleAPI.listAllRole().subscribe((data)=>{\n      if(data.status === 'success'){\n        this.rolePermissionInfo = data.data;\n      }\n    })\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}\n\n\n","\n<div class=\"card card-user\">\n        <ngx-spinner\n        bdColor=\"rgba(51,51,51,0.8)\"\n        size=\"medium\"\n        color=\"#fff\"\n        type=\"ball-scale-ripple-multiple\"\n        >\n        <p style=\"font-size: 20px; color: white\">Loading...</p>\n        </ngx-spinner>\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Sub-Users Details</h2>\n\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"subUserForm\" (ngSubmit)=\"subUserFormData()\" novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Full Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Full Name\"\n                        formControlName=\"name\" required>\n                    <div *ngFor=\"let validation of validationMessage.name\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"subUserForm.get('name').hasError(validation.type) && (subUserForm.get('name').dirty || subUserForm.get('name').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Phone Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputPhone\" placeholder=\"Enter Phone Number\"\n                        formControlName=\"phone\">\n                    <div *ngFor=\"let validation of validationMessage.phone\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"subUserForm.get('phone').hasError(validation.type) && (subUserForm.get('phone').dirty || subUserForm.get('phone').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Email:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                            <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Email \"\n                                formControlName=\"email\" required>\n                            <div *ngFor=\"let validation of validationMessage.email\">\n                                <div style=\"color: red;margin-left: 14px;\"\n                                    *ngIf=\"subUserForm.get('email').hasError(validation.type) && (subUserForm.get('email').dirty || subUserForm.get('email').touched)\"\n                                    style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Assign Role:&nbsp;<span\n                              style=\"color: darkred\">*</span></b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" Name=\"branchId\" formControlName=\"roleId\">\n                           <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Role----------</option>\n                           <option class=\"dropdown-item\" *ngFor=\"let role of rolePermissionInfo\" value=\"{{role._id}}\">\n                              {{role.title}}\n                           </option>\n                        </select>\n                        <div *ngFor=\"let validation of validationMessage.roleId\">\n                              <div style=\"color: red;margin-left: 14px;\"\n                                *ngIf=\"subUserForm.get('roleId').hasError(validation.type) && (subUserForm.get('roleId').dirty || subUserForm.get('roleId').touched)\"\n                                >\n                                {{ validation.message }}\n                              </div>\n                            </div>\n                     </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"subUserForm.invalid\">Add Subuser</button>\n                    <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../show-subusers-list\">Cancel</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubUserService } from '../sub-user-service/sub-user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-show-subusers-list',\n  templateUrl: './show-subusers-list.component.html',\n  styleUrls: ['./show-subusers-list.component.scss']\n})\nexport class ShowSubusersListComponent implements OnInit {\n\n  showCard = {};\n  // subUsersListData: any = Object;\n  subUsersListData: any = []; \n\n\n  constructor(private api: SubUserService, public fb: FormBuilder, private ngZone: NgZone, private router: Router) { }\n\n  ngOnInit() {\n    this.getSubUsersList();\n  }\n  \n  //Method for show sub-users in the list\n  getSubUsersList() {\n    try{\n    this.api.getSubUsersListData().subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.subUsersListData = data.users;\n        if(data.users.length == 0){\n          this.router.navigateByUrl(\"/pages/sub-user/add-subuser\");\n        }\n        else{\n          const len = Object.keys(this.subUsersListData).length;\n          for (var i = 0; i < len; i++) {\n            this.showCard[this.subUsersListData[i]._id] = true;\n          }\n        }\n      }\n    })\n  }\n  catch(err){\n    console.log(err);\n  }\n  }\n\n//Method For collapsed List Data\n  showData(subUsersId: String) {\n    try{\n    this.showCard[`${subUsersId}`] = !this.showCard[`${subUsersId}`];\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n\n  //Method for remove company list\n  deleteSubUserListData(subUserId: String) {\n    try{\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeSubUsersData(subUserId).subscribe((data) => {\n            if (data.status === \"success\" || data.status === 200) {\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              )\n              this.getSubUsersList();\n            }\n          })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your Data Safe',\n            'error'\n          )\n        }\n      })\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Sub-Users List</h2>\n        <a class=\"btn btn-primary\" routerLink=\"../add-subuser\" style=\"float:right;\"><i class=\"fa fa-plus\"></i>&nbsp;\n            Add User</a>\n    </div>\n\n    <div class=\"panel-body\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" *ngFor=\"let list of subUsersListData\">\n                <strong><b (click)=\"showData(list._id)\"\n                        style=\"cursor: pointer\">{{list.profile.contactInfo?.firstName + \" \" + list.profile.contactInfo?.lastName}}</b></strong>\n                <div style=\"float: right;\">\n                    <i class=\"dropdown-toggle\" (click)=\"showData(list._id)\"></i>\n                </div>\n                <div class=\"card\" style=\"background-color:ghostwhite\" [hidden]=\"showCard[list._id]\">\n                    <table class=\"table\" style=\"margin: auto\">\n                        <tr>\n                            <td><strong>Name:</strong></td>\n                            <td>{{list.profile.contactInfo?.firstName + \" \" + list.profile.contactInfo?.lastName}}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Phone No.</strong></td>\n                            <td>{{ list.profile.contactInfo.phone }}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Email:</strong></td>\n                            <td>{{ list.local.email }}</td>\n                        </tr>\n                    </table>\n                    <div>\n                        <a routerLink=\"../update-subuser-data/{{list._id}}\" style=\"float: right;\"\n                            class=\"btn btn-primary\">\n                            <i class=\"fa fa-pencil-square-o\"></i></a>\n                        <button style=\"float: right;\" class=\"btn btn-danger\" type=\"button\"\n                            (click)=\"deleteSubUserListData(list._id)\">\n                            <i class=\"fa fa-trash\"></i></button>\n\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sub-user',\n  templateUrl: './sub-user.component.html',\n  styleUrls: ['./sub-user.component.scss']\n})\nexport class SubUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SubUserComponent } from './sub-user.component';\nimport { AddSubusersComponent } from './add-subusers/add-subusers.component';\nimport { ShowSubusersListComponent } from './show-subusers-list/show-subusers-list.component';\nimport { UpdateSubusersDataComponent } from './update-subusers-data/update-subusers-data.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\n\nconst route : Routes = [\n    {\n      path :'',\n      component : SubUserComponent,\n      canActivate:[AuthGuard],\n      children :[\n        {\n         path: 'add-subuser',\n        component: AddSubusersComponent,\n        },\n        {\n          path: 'show-subusers-list',\n          component:ShowSubusersListComponent,\n        },\n        {\n          path: 'update-subuser-data/:subUserId',\n          component:UpdateSubusersDataComponent,\n        },\n        {\n          path:'',\n          redirectTo :'show-subusers-list',\n          pathMatch:'full',\n        },\n      ],\n    }\n  ];\n\n@NgModule({\n    declarations: [],\n    imports: [\n      CommonModule,\n      RouterModule.forChild(route),\n    ]\n  })\n\n  export class SubUserRoutingModule{}","import { Injectable } from '@angular/core';\nimport { HttpHeaders,HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { SubUserData } from 'src/app/auth/sub-user';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubUserService {\n\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n  constructor(private http: HttpClient) { }\n\n//Method for add new sub-users and submit sub-users form data\n\naddSubUsersData(data:SubUserData):Observable<any>{\n  try{\n    data.redirectUrl = `${environment.appBaseUrl}/users/generate-password`;\n    const parentUserId = localStorage.getItem(\"token\");\n    let apiURL = `${this.endpoint}/user/add-subuser/${parentUserId}`;\n    return this.http.post(apiURL, data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n// Method for get data from server and show company list\ngetSubUsersListData(): Observable<any> {\ntry {\n  const parentUserId = localStorage.getItem(\"token\");\n  let apiURL = `${this.endpoint}/user/list-subusers/${parentUserId}`;\n   return this.http.get(apiURL).pipe(\n     catchError(this.errorMgmt)\n   )\n}\ncatch (err) {\n  console.log(err);\n}\n}\n\n//Method for Delete data of company list\nremoveSubUsersData(subUserId:String):Observable<any>{\n  try{\n    const parentUserId = localStorage.getItem(\"token\");\n    let apiURL = `${this.endpoint}/user/delete-subuser/${parentUserId}/${subUserId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n//Method for submit updated subusres details  Data and calling API\nsubmitUpdateSubUserData(data:SubUserData,subUserId: String): Observable<any> {\n  try {\n    const parentUserId = localStorage.getItem(\"token\");\n    let apiURL = `${this.endpoint}/user/update-subuser/${parentUserId}/${subUserId}`;\n    return this.http.post(apiURL, data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n\n //Create method for manage errors when request and return response from the server\n errorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    //Handle client side error\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    //Handle server side error\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Sub User Details\nsubUserDetails(userId):Observable<any>{\n  try {\n  let apiURL = `${this.endpoint}/user/subuser-details/${userId}`;\n   return this.http.get(apiURL).pipe(\n     catchError(this.errorMgmt)\n   )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}\n"],"sourceRoot":"webpack:///"}