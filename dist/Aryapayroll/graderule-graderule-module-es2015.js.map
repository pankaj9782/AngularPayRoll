{"version":3,"sources":["./src/app/pages/graderule/graderule.component.ts","./src/app/pages/graderule/graderule.component.html","./src/app/pages/graderule/list-graderule/list-graderule.component.ts","./src/app/pages/graderule/list-graderule/list-graderule.component.html","./src/app/pages/graderule/graderule-routing.module.ts","./src/app/pages/graderule/managePaymentHeads/add-managePaymentHeads/add-managePaymentHeads.component.ts","./src/app/pages/graderule/managePaymentHeads/add-managePaymentHeads/add-managePaymentHeads.component.html","./src/app/pages/graderule/update-graderule/update-graderule.component.ts","./src/app/pages/graderule/update-graderule/update-graderule.component.html","./src/app/pages/graderule/managePaymentHeads/list-managePaymentHeads/list-managePaymentHeads.component.ts","./src/app/pages/graderule/managePaymentHeads/list-managePaymentHeads/list-managePaymentHeads.component.html","./src/app/pages/graderule/graderule.module.ts","./src/app/pages/graderule/add-graderule/add-graderule.component.ts","./src/app/pages/graderule/add-graderule/add-graderule.component.html","./src/app/pages/graderule/managePaymentHeads/update-managePaymentHeads/update-managePaymentHeads.component.ts","./src/app/pages/graderule/managePaymentHeads/update-managePaymentHeads/update-managePaymentHeads.component.html"],"names":[],"mappings":"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","file":"graderule-graderule-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-graderule',\n  templateUrl: './graderule.component.html',\n  styleUrls: ['./graderule.component.scss']\n})\n\nexport class GraderuleComponent implements OnInit {\n\n  constructor() {}\n  ngOnInit() {\n\n  }\n\n}","<router-outlet></router-outlet>","import { GraderuleApiService } from '../graderule-service/graderule-api.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n\n@Component({\n  selector: 'app-list-graderule',\n  templateUrl: './list-graderule.component.html',\n  styleUrls: ['./list-graderule.component.css']\n})\n\nexport class ListGraderuleComponent implements OnInit {\n\n  listGradRuleData: any [];\n  permissionInfo: any;\n\n  constructor(private api: GraderuleApiService, private fb: FormBuilder,public route:Router, private util:UtilitiesService) { }\n\n  ngOnInit() {\n   this.listGradRule();\n   this.permissionInfo = this.util.permissionRoleInfo;\n  }\n\n  listGradRule(){\n   try{\n     this.api.getGradeRuleList().subscribe(data=>{\n       if (data.status === 'success' || data.status === 200){\n        this.listGradRuleData = data.data;\n        const len = Object.keys(this.listGradRuleData).length;\n        if(len == 0){\n          this.route.navigateByUrl(\"pages/graderule/add-graderule\");\n        }else{\n          this.listGradRuleData = data.data;\n        }\n      }\n     })\n   }catch(err){\n     console.log(err)\n   }\n  }\n\n  showConfirmationMessage(gradeRuleid:string){\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeData(gradeRuleid).subscribe((data)=>{\n          if(data.status === 'success'){\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n          } else if (data.status === 'error'){\n            swalWithBootstrapButtons.fire(\n              'ERROR!',\n              data.message,\n              'error'\n            )\n          }\n          this.listGradRule();\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your list data safe',\n          'error'\n        )\n      }\n    })\n}\naddGradeRule(){\n  try{\n    this.util.gradeRuleStatus = 1;\n  }catch(err){\n    console.log(err)\n  }\n}\n\n\n\n\n}\n","<div class=\"card\">\n   <div class=\"card-header\" style=\"text-align: center\">\n         <h2>Grade Rule</h2>\n         <button [disabled]=\"permissionInfo.search('Create GradeRule') === -1\"\n          class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/graderule/add-graderule\" style=\"float:right;\" (click)= \"addGradeRule()\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Grade Rule</button\n            >\n   </div>\n   <table class=\"table\" style=\"text-align: center;\">\n      <thead class=\" text-primary\">\n          <tr>\n          <th> S.No </th>\n          <th> Title </th>\n          </tr>\n      </thead>\n      <tbody *ngFor=\"let list of listGradRuleData; let i = index\">\n          <tr >\n          <td><b>{{i+1}}.</b></td>\n          <td> {{list.title}} </td>\n          <td>\n              <a [class.disabled]=\"permissionInfo.search('Edit GradeRule') === -1\"\n              routerLink=\"/pages/graderule/update-graderule/{{list._id}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n              <button  [disabled]=\"permissionInfo.search('Delete GradeRule') === -1\"\n              class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\"><i class=\"fa fa-trash\"></i>\n              </button>&nbsp;\n              <button [disabled]=\"permissionInfo.search('Create PaymentHeads') === -1\"\n              class=\"btn btn-info\" type=\"button\" routerLink=\"../list-managePaymentHeads/{{list._id}}\">Manage Payment Heads</button>\n          </td>\n          </tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GraderuleComponent } from './graderule.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListGraderuleComponent } from './list-graderule/list-graderule.component';\nimport { AddGraderuleComponent } from './add-graderule/add-graderule.component';\nimport { UpdateGraderuleComponent } from './update-graderule/update-graderule.component';\nimport { ListManagePaymentHeadsComponent } from './managePaymentHeads/list-managePaymentHeads/list-managePaymentHeads.component';\nimport { AddManagePaymentHeadsComponent } from './managePaymentHeads/add-managePaymentHeads/add-managePaymentHeads.component';\nimport {UpdateManagePaymentHeadsComponent } from './managePaymentHeads/update-managePaymentHeads/update-managePaymentHeads.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : GraderuleComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-graderule',\n        component: ListGraderuleComponent,\n      },\n      {\n        path: 'list-managePaymentHeads/:gradeRuleId',\n        component:  ListManagePaymentHeadsComponent\n      },\n      {\n        path: 'add-managePaymentHeads/:gradeRuleId',\n        component: AddManagePaymentHeadsComponent\n      },\n      {\n        path: 'update-managePaymentHeads/:paymentHeadId/:gradeRuleId',\n        component: UpdateManagePaymentHeadsComponent\n      },\n      {\n        path: 'add-graderule',\n        component: AddGraderuleComponent\n      },\n      {\n        path: 'update-graderule/:gradeRuleId',\n        component: UpdateGraderuleComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-graderule',\n        pathMatch:'full',\n      },\n\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class GraderuleRoutingModule { }","import { Component, OnInit,NgZone, OnDestroy } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { GraderuleApiService } from '../../graderule-service/graderule-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n    selector: 'app-add-managePaymentHeads',\n    templateUrl: './add-managePaymentHeads.component.html'\n})\n\nexport class AddManagePaymentHeadsComponent implements OnInit,OnDestroy {\n  permissionInfo: any;\n  fixedPaymentHeadsList = [];\n  ngOnDestroy(): void {\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).removeAttribute('disabled');\n  }\n\n    paymentHeadDataList: any;\n    managePaymentForm: any;\n    Fixed: Boolean =false;\n    Percent: Boolean = false;\n    inputValue:any;\n    errorMsg: String;\n    percentErrorMsg: String;\n    gradeRuleId:any;\n    gradeType = ['Fixed','Percent'];\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    serverErrorMsg: boolean = false;\n    percentOfValue = 'basicSalary';\n\n    constructor(private api:GraderuleApiService, private fb:FormBuilder,private route:ActivatedRoute,private ngZone: NgZone,private router:Router,\n      private util: UtilitiesService){}\n\n    // constructor(private api:GraderuleApiService,private fb:FormBuilder,public route:Router,){}\n\n    ngOnInit() {\n      this.gradeRuleId = this.route.snapshot.paramMap.get(\"gradeRuleId\");\n      this.addMemberValidation();\n      this.fixedPaymentHeads();\n      this.paymentHeadList();\n      (document.getElementById('headerCompanyDropDown')as HTMLInputElement).setAttribute('disabled','disabled');\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create PaymentHeads') === -1){\n        this.managePaymentForm.disable();\n      }\n    }\n\n    check(name){\n\n      let dynamicValidation = {\n        fixed: [\n          Validators.required,\n          Validators.maxLength(8),\n          Validators.pattern('^[0-9]*$')\n        ],\n        percent: [\n          Validators.required,\n          Validators.maxLength(8),\n          Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)\n        ]\n      }\n\n      try{\n        let gradeType = name.target.options[name.target.options.selectedIndex].text;\n        if(gradeType == 'Fixed')\n        {\n            this.Fixed = true;\n            this.Percent = false;\n            this.errorMsg = '';\n            this.percentErrorMsg = '';\n\n        this.managePaymentForm.get('paymentHead.value').setValidators(dynamicValidation['fixed']);\n        this.managePaymentForm.get('paymentHead.value').updateValueAndValidity();\n\n        } else if (gradeType == 'Percent') {\n            this.Percent = true;\n            this.Fixed = false;\n            if(this.managePaymentForm.get('paymentHead.value').value){\n                this.switchTypeValidation(this.managePaymentForm.get('paymentHead.value').value);\n            }\n\n            this.managePaymentForm.get('paymentHead.value').setValidators(dynamicValidation['percent']);\n            this.managePaymentForm.get('paymentHead.value').updateValueAndValidity();\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n\n    addMemberValidation() {\n      try{\n        this.managePaymentForm = this.fb.group({\n          paymentHead: new FormGroup({\n            paymentHeadId: new FormControl('',Validators.required),\n            type: new FormControl('',Validators.required),\n            value: new FormControl('',Validators.compose([Validators.required,\n              Validators.pattern('^[0-9]*$'),])),\n          })\n        })\n      }catch(err){\n        console.log(err)\n      }\n    }\n\n    paymentHeadList(){\n      this.api.filterPaymentHeads(this.gradeRuleId).subscribe(data=>{\n        this.paymentHeadDataList = data.data;\n      })\n    }\n\n    managePaymentData(){\n      try{\n        this.api.addGradules(this.managePaymentForm.value,this.gradeRuleId,this.percentOfValue).subscribe(data=>{\n          if(data.status === 'success') {\n            this.successMessage = true ;\n            this.serverErrorMsg = false ;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.router.navigateByUrl(`pages/graderule/list-managePaymentHeads/${this.gradeRuleId}`);\n            },2000)\n          } else {\n            this.serverErrorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(()=>{\n              this.handleErrors();\n            },3000)\n          }\n        })\n      }catch(err){\n        console.log(err);\n      }\n\n    }\n\n    validationMessage = {\n      'value': [\n        { type: 'required', message: 'Amount is Required' },\n        { type: 'maxlength', message: 'Amount is too Large' },\n        { type: 'pattern', message: 'Amount not valid' },\n      ],\n      'paymentHeadId':[\n          { type: 'required', message: 'Payment Head is Required' },\n      ],\n      'type': [\n        { type: 'required', message: 'Type  is Required' },\n      ],\n  }\n\n  handleErrors(){\n    this.serverErrorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\n    demo(){\n      if((document.getElementById('typeValue') as HTMLInputElement).value != 'Fixed') {\n          this.inputValue = (document.getElementById('percentValue') as HTMLInputElement).value;\n      if(this.inputValue >0 && this.inputValue <= 100 ){\n          this.percentErrorMsg = '';\n          this.errorMsg = '';\n      } else if(this.inputValue.length == 0){\n          this.percentErrorMsg = 'Percent is Required';\n          this.errorMsg = '';\n      } else {\n          this.percentErrorMsg = '';\n          this.errorMsg = 'Enter value is not valid';\n      }\n  }\n      }\n\n    // Check For Validation When User Switch The Type\n  switchTypeValidation(inputValue:Number){\n    if(inputValue >0 && inputValue <= 100 ){\n        this.percentErrorMsg = '';\n        this.errorMsg = '';\n    } else if((inputValue).toString().length == 0){\n        this.percentErrorMsg = 'Percent is Required';\n        this.errorMsg = '';\n    } else if((inputValue).toString().length > 6) {\n        this.percentErrorMsg = 'Percent Value is too Large';\n        this.errorMsg = '';\n    } else {\n        this.percentErrorMsg = '';\n        this.errorMsg = 'Enter value is not valid';\n    }\n}\n\n// Fixed Payment Heads\nfixedPaymentHeads(){\n  try {\n      this.api.fixedPaymentHeads(this.gradeRuleId).subscribe((data) => {\n          if(data.status === 'success'){\n             this.fixedPaymentHeadsList = data.data;\n          }\n      })\n  } catch (error) {\n      console.log(error);\n  }\n}\n\npercentOf(value){\n  this.percentOfValue = value;\n}\n\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Manage Payment Heads Details</h2>\n   </div>\n   <div class=\"card-body\">\n       <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"serverErrorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                </p>\n            </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"managePaymentForm\" (ngSubmit)=\"managePaymentData()\"\n    novalidate>\n        <div [formGroup]=\"managePaymentForm.get('paymentHead')\">\n            <label class=\"col-sm-6 control-label\"><b>Payment Head:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <select class=\"dropdown dropdown-toggle form-control\" name=\"Payment Heades\" formControlName=\"paymentHeadId\">\n                <option ng-selected=\"true\" value=\"\" disabled>----------Select Payment Head Name----------</option>\n                <option *ngFor=\"let list of paymentHeadDataList\" [ngValue]=\"list._id\" selected>{{ list.title }}</option>\n            </select>\n            <div *ngFor=\"let validation of validationMessage.paymentHeadId\">\n                <div style=\"color: red;margin-left: 1%;\"\n                    *ngIf=\"managePaymentForm.get('paymentHead.paymentHeadId').hasError(validation.type) && (managePaymentForm.get('paymentHead.paymentHeadId').dirty || managePaymentForm.get('paymentHead.paymentHeadId').touched)\"\n                    style=\"color: red;margin-left: 1%;\">\n                    {{ validation.message }}\n                </div>\n            </div>\n        <br>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <label class=\"col-sm-8 control-label\"><b>Type:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"typeValue\" (change)=\"check($event)\" formControlName=\"type\">\n                            <option ng-selected=\"true\" value=\"\" disabled>----------Select Grade Type----------</option>\n                            <option class=\"dropdown-item\"  *ngFor='let type of gradeType' >{{ type }}</option>\n                    </select>\n                  <div *ngFor=\"let validation of validationMessage.type\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"managePaymentForm.get('paymentHead.type').hasError(validation.type) && (managePaymentForm.get('paymentHead.type').dirty || managePaymentForm.get('paymentHead.type').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-4\" *ngIf=\"Fixed\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Enter Amount:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                            <input class=\"form-control\" type=\"text\" id=\"value\" placeholder=\"Enter Amount\" formControlName=\"value\" required >\n                        </div>\n                    </div>\n                    <div *ngFor=\"let validation of validationMessage.value\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"managePaymentForm.get('paymentHead.value').hasError(validation.type) && (managePaymentForm.get('paymentHead.value').dirty || managePaymentForm.get('paymentHead.value').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-4\" *ngIf=\"Percent\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Enter Percent:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                            <input class=\"form-control\" type=\"number\" id=\"percentValue\" (input)=\"demo()\" placeholder=\"Enter Percent\" formControlName=\"value\" required>\n                        </div>\n                    </div>\n                    <div><p style=\"color:red;\">{{percentErrorMsg}}</p></div>\n                    <div><p style=\"color:red;\"> {{ errorMsg }}</p></div>\n\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"Percent\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Percent Of:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" name=\"Payment Heades\" (change)=\"percentOf($event.target.value)\">\n                            <option ng-selected=\"true\" value=\"\" disabled>----Select Percent Of----</option>\n                            <option *ngFor=\"let fixedHeads of fixedPaymentHeadsList\" [value]=\"fixedHeads.value\" selected>{{ fixedHeads.name }}</option>\n                        </select>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\"[disabled]='managePaymentForm.invalid || errorMsg || percentErrorMsg || permissionInfo.search(\"Create PaymentHeads\") === -1'>Submit</button>\n        <button class=\"btn btn-danger\" routerLink=\"/pages/graderule/list-managePaymentHeads/{{gradeRuleId}}\">Cancel</button>\n    </form>\n</div>\n</div>\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GraderuleApiService } from '../graderule-service/graderule-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-graderule',\n  templateUrl: 'update-graderule.component.html'\n})\n\nexport class UpdateGraderuleComponent implements OnInit {\n\n  graderuleUpdateForm: any;\n  gradeRuleId:any;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  permissionInfo: any;\n\nconstructor(private api:GraderuleApiService, private fb:FormBuilder,private route:ActivatedRoute,private ngZone: NgZone,private router:Router,\n  private util: UtilitiesService){\n    this.gradeRuleId = this.route.snapshot.paramMap.get(\"gradeRuleId\");\n    this.util.moduleExists(this.gradeRuleId,'GradeRule').subscribe((data)=>{\n      if(data.status === 'success'){\n        if(!data.data){\n          this.router.navigateByUrl('/pages/graderule/list-graderule');\n        }\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.addMemberValidation();\n    this.existingData();\n    this.permissionInfo = this.util.permissionRoleInfo;\n        if(this.permissionInfo.search('Edit GradeRule') === -1){\n          this.graderuleUpdateForm.disable();\n        }\n  }\n\n  validationMessage = {\n    'title': [\n      { type: 'required', message: 'Title is required' },\n    ],\n  }\n\n  addMemberValidation() {\n    this.graderuleUpdateForm = this.fb.group({\n      title: new FormControl('',Validators.required),\n    })\n  }\n\n  existingData(){\n    this.api.existingData(this.gradeRuleId).subscribe(data=>{\n        this.graderuleUpdateForm = this.fb.group({\n          title: new FormControl(data.data.title,Validators.required)\n        })\n    })\n  }\n\n  graderuleUpdateData(){\n    try{\n      let cleanUpdateGradeRuleForm = this.util.cleanFormLevelOne(this.graderuleUpdateForm);\n      this.api.updateGadeRule(cleanUpdateGradeRuleForm.value,this.gradeRuleId).subscribe(data=>{\n        if(data.status === 'success') {\n          this.successMessage = true ;\n          this.errorMsg = false ;\n          this.successMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n            this.ngZone.run(()=>this.router.navigateByUrl('/pages/graderule/list-graderule'));\n          },2000)\n        } else {\n          this.successMessage = false ;\n          this.errorMsg = true ;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrors();\n          },3000)\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\n}","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Update Grade Rule Details</h2>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n         </p>\n      </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"graderuleUpdateForm\" (ngSubmit)=\"graderuleUpdateData()\"\n        novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Title\" formControlName=\"title\"\n                    >\n                    <div *ngFor=\"let validation of validationMessage.title\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"graderuleUpdateForm.get('title').hasError(validation.type) && (graderuleUpdateForm.get('title').dirty || graderuleUpdateForm.get('title').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"graderuleUpdateForm.invalid || this.permissionInfo.search('Edit GradeRule') === -1\">Update</button>\n            <button class=\"btn btn-danger\" routerLink=\"/pages/graderule/list-graderule\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GraderuleApiService } from '../../graderule-service/graderule-api.service';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n\n@Component ({\n    selector: 'app-list-managePaymentHeads',\n    templateUrl: './list-managePaymentHeads.component.html',\n    styleUrls: ['./list-managePaymentHeads.component.scss']\n})\n\nexport class ListManagePaymentHeadsComponent implements OnInit, OnDestroy{\n  permissionInfo: any;\n  ngOnDestroy(): void {\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).removeAttribute('disabled');\n  }\n\n    showCard = {};\n    leaveListData = new Array();\n    companyShowData = [];\n    gradeRuleId;\n    dataValue:any [];\n    paymentHeadId;\n    companyName: String;\n    gradeRuleTitle: any;\n\n    constructor(private api:GraderuleApiService,\n      private fb:FormBuilder,\n      private route:ActivatedRoute,\n      private ngZone: NgZone,\n      private router:Router,\n      private util: UtilitiesService\n      ){}\n\n    ngOnInit(){\n        this.gradeRuleId = this.route.snapshot.paramMap.get(\"gradeRuleId\");\n        this.listGradeRule();\n        (document.getElementById('headerCompanyDropDown')as HTMLInputElement).setAttribute('disabled','disabled');\n        this.permissionInfo = this.util.permissionRoleInfo;\n    }\n\n    listGradeRule(){\n        this.api.existingData(this.gradeRuleId).subscribe(data=>{\n            this.gradeRuleTitle = data.data.title\n            this.dataValue = data.data.paymentHeads;\n        })\n    }\n\n    showConfirmationMessage(paymentHeadsId:string){\n        const swalWithBootstrapButtons = Swal.mixin({\n          customClass: {\n            confirmButton: 'btn btn-success',\n            cancelButton: 'btn btn-danger'\n          },\n          buttonsStyling: false\n        })\n        swalWithBootstrapButtons.fire({\n          title: 'Are you sure?',\n          text: \"You want to delete it\",\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Yes',\n          cancelButtonText: 'No',\n          reverseButtons: true\n        }).then((result) => {\n          if (result.value) {\n            this.api.removeGradeData(paymentHeadsId,this.gradeRuleId).subscribe((data)=>{\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.listGradeRule();\n          })\n          } else if (\n            result.dismiss === Swal.DismissReason.cancel\n          ) {\n            swalWithBootstrapButtons.fire(\n              'Cancelled',\n              'Your list data safe',\n              'error'\n            )\n          }\n        })\n    }\n\n}","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 style=\"text-align: center\">Payment Heads List</h2>\n\n        <button [disabled]=\"permissionInfo.search('Create PaymentHeads') === -1\"\n        class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/graderule/add-managePaymentHeads/{{gradeRuleId}}\"\n            style=\"float: right;\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Payment Heads</button>\n\n            <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/graderule/list-graderule\"\n            style=\"float: right;\"><i class=\"fa fa-arrow-left\"></i></button>\n\n            <h4>{{ gradeRuleTitle }}</h4>\n    </div>\n\n    <table class=\"table\" style=\"text-align: center;\">\n      <thead class=\" text-primary\">\n          <tr>\n          <th>S.No</th>\n          <th>Title</th>\n          <th>Amount/Rate</th>\n          <th>Category</th>\n          <th>Action</th>\n          </tr>\n      </thead>\n      <tbody *ngFor=\"let list of dataValue; let i = index\">\n          <tr >\n          <td><b>{{i+1}}.</b></td>\n          <td> {{list.paymentHeadName}} </td>\n          <td>{{list.value}}</td>\n          <td >{{list.type}}</td>\n          <td>\n              <a [class.disabled]=\"permissionInfo.search('Edit PaymentHeads') === -1\"\n              routerLink=\"/pages/graderule/update-managePaymentHeads/{{list._id}}/{{gradeRuleId}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n\n              <button [disabled]=\"permissionInfo.search('Delete PaymentHeads') === -1\"\n              class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\"><i class=\"fa fa-trash\"></i>\n              </button>&nbsp;\n          </td>\n          </tr>\n          </tbody>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GraderuleRoutingModule } from './graderule-routing.module';\nimport { GraderuleComponent } from './graderule.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListGraderuleComponent } from './list-graderule/list-graderule.component';\nimport { AddGraderuleComponent } from './add-graderule/add-graderule.component';\nimport { UpdateGraderuleComponent } from './update-graderule/update-graderule.component';\nimport { ListManagePaymentHeadsComponent } from './managePaymentHeads/list-managePaymentHeads/list-managePaymentHeads.component';\nimport { AddManagePaymentHeadsComponent } from './managePaymentHeads/add-managePaymentHeads/add-managePaymentHeads.component';\nimport {UpdateManagePaymentHeadsComponent } from './managePaymentHeads/update-managePaymentHeads/update-managePaymentHeads.component';\n\n\n@NgModule({\n  declarations: [\n    GraderuleComponent,\n    ListGraderuleComponent,\n    AddGraderuleComponent,\n    UpdateGraderuleComponent,\n    ListManagePaymentHeadsComponent,\n    AddManagePaymentHeadsComponent,UpdateManagePaymentHeadsComponent\n  ],\n  \n  imports: [\n    CommonModule,\n    GraderuleRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\n\nexport class GraderuleModule { }\n","import { Component, NgZone,OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GraderuleApiService } from '../graderule-service/graderule-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\ndeclare const $: any;\n\n@Component({\n    selector: 'app-add-graderule',\n    templateUrl: './add-graderule.component.html'\n})\n\nexport class AddGraderuleComponent implements OnInit {\n\n    paymentHeadDataList: any;\n    graderuleForm: any;\n    Fixed: Boolean = false;\n    Percent: Boolean = false;\n    inputValue;\n    errorMsg: String;\n    percentErrorMsg = 'Percent is Required';\n    gradeType = ['Fixed','Percent']\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    serverErrorMsg: boolean = false;\n    fixedPaymentHeadsList = [];\n    percentOfValue = 'basicSalary';\n\n\n\n    validationMessage = {\n        'title': [\n          { type: 'required', message: 'Title is required' },\n        ],\n        'value': [\n          { type: 'required', message: 'Amount is required' },\n          { type: 'maxlength', message: 'Amount is too Large' },\n          { type: 'pattern', message: 'Amount not valid' },\n        ],\n        'paymentHeadId':[\n            { type: 'required', message: 'Payment Head is required' },\n        ],\n        'type': [\n          { type: 'required', message: 'Type  is required' },\n        ],\n    }\n    permissionInfo: any;\n\n    constructor(private api:GraderuleApiService,private fb:FormBuilder,public router:Router,\n        private util: UtilitiesService){\n            this.isListAvaliable();\n        }\n\n    ngOnInit() {\n        this.paymentHeadList();\n        this.addMemberValidation();\n        this.fixedPaymentHeads();\n        this.permissionInfo = this.util.permissionRoleInfo;\n        if(this.permissionInfo.search('Create GradeRule') === -1){\n          this.graderuleForm.disable();\n        }\n    }\n\n    check(name){\n        let dynamicValidation = {\n            fixed: [\n              Validators.required,\n              Validators.maxLength(8),\n              Validators.pattern('^[0-9]*$')\n            ],\n            percent: [\n              Validators.required,\n              Validators.maxLength(8),\n              Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)\n            ]\n          }\n\n        let gradeType = name.target.options[name.target.options.selectedIndex].text;\n        if(gradeType == 'Fixed')\n        {\n            this.Fixed = true;\n            this.Percent = false;\n            this.errorMsg = '';\n            this.percentErrorMsg = '';\n\n            this.graderuleForm.get('paymentHead.value').setValidators(dynamicValidation['fixed']);\n            this.graderuleForm.get('paymentHead.value').updateValueAndValidity();\n\n        } else if (gradeType == 'Percent') {\n            this.Percent = true;\n            this.Fixed = false;\n            if(this.graderuleForm.get('paymentHead.value').value){\n                this.switchTypeValidation(this.graderuleForm.get('paymentHead.value').value);\n            }\n\n            this.graderuleForm.get('paymentHead.value').setValidators(dynamicValidation['percent']);\n            this.graderuleForm.get('paymentHead.value').updateValueAndValidity();\n        }\n    }\n\n    addMemberValidation() {\n        this.graderuleForm = this.fb.group({\n            title: new FormControl('',Validators.required),\n            paymentHead: new FormGroup({\n                paymentHeadId: new FormControl('',Validators.required),\n                type: new FormControl('',Validators.required),\n                value: new FormControl('',Validators.compose([\n                    Validators.required,\n                    Validators.maxLength(8),\n                    Validators.pattern('^[0-9]*$'),])),\n            })\n        })\n    }\n\n    paymentHeadList(){\n        this.api.getPaymentHeadData().subscribe(data=>{\n            this.paymentHeadDataList = data.data;\n        })\n    }\n\n    graderuleData(){\n        try{\n            this.api.getGradeRule(this.graderuleForm.value, this.percentOfValue).subscribe(data=>{\n                if(data.status === 'success'){\n                    this.successMessage = true ;\n                    this.serverErrorMsg = false ;\n                    this.successMsg = data.message;\n                    setTimeout(() => {\n                        this.handleErrors();\n                        this.router.navigateByUrl(\"pages/graderule/list-graderule\");\n                    },2000)\n                } else {\n                    this.serverErrorMsg = true;\n                    this.successMessage = false;\n                    this.errMsg = data.message;\n                    setTimeout(()=>{\n                        this.handleErrors();\n                    },3000)\n                }\n            })\n        } catch(err){\n            console.log(err);\n        }\n\n    }\n\n    demo(){\n        if((document.getElementById('typeValue') as HTMLInputElement).value != 'Fixed') {\n            this.inputValue = (document.getElementById('percentValue') as HTMLInputElement).value;\n        if(this.inputValue >0 && this.inputValue <= 100 ){\n            this.percentErrorMsg = '';\n            this.errorMsg = '';\n        } else if(this.inputValue.length == 0){\n            this.percentErrorMsg = 'Percent is Required';\n            this.errorMsg = '';\n        } else if(this.inputValue.length >6){\n            this.percentErrorMsg = 'Percent Value is too Large';\n            this.errorMsg = '';\n        } else {\n            this.percentErrorMsg = '';\n            this.errorMsg = 'Enter value is not valid';\n        }\n    }\n        }\n\n// Check For Validation When User Switch The Type\n  switchTypeValidation(inputValue:Number){\n    if(inputValue >0 && inputValue <= 100 ){\n        this.percentErrorMsg = '';\n        this.errorMsg = '';\n    } else if((inputValue).toString().length == 0){\n        this.percentErrorMsg = 'Percent is Required';\n        this.errorMsg = '';\n    } else if((inputValue).toString().length > 6) {\n        this.percentErrorMsg = 'Percent Value is too Large';\n        this.errorMsg = '';\n    } else {\n        this.percentErrorMsg = '';\n        this.errorMsg = 'Enter value is not valid';\n    }\n}\n\nhandleErrors(){\n    this.serverErrorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\nisListAvaliable(){\n    try{\n      this.api.getGradeRuleList().subscribe((data) =>{\n        if(data.status === 'success'){\n          if(data.data.length > 0 && this.util.gradeRuleStatus !== 1){\n            this.router.navigateByUrl(\"/pages/graderule/list-graderule\");\n            this.util.gradeRuleStatus = 0;\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  // Fixed Payment Heads\n  fixedPaymentHeads(){\n      try {\n          this.api.fixedPaymentHeads(undefined).subscribe((data) => {\n              if(data.status === 'success'){\n                 this.fixedPaymentHeadsList = data.data;\n              }\n          })\n      } catch (error) {\n          console.log(error);\n      }\n  }\n\n}\n\n\n","<div class=\"card card-user\">\n        <div class=\"card-header\">\n            <h2 class=\"card-title text-center\">Grade Rule Details</h2>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"serverErrorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                </p>\n            </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"graderuleForm\" (ngSubmit)=\"graderuleData()\"\n            novalidate>\n                <div class=\"cols\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" onkeyup=\"this.value = this.value.trim()\" type=\"text\" id=\"title\" placeholder=\"Enter Title\" formControlName=\"title\"\n                        required>\n                        <div *ngFor=\"let validation of validationMessage.title\">\n                            <div style=\"color: red;margin-left: 1%;\"\n                                *ngIf=\"graderuleForm.get('title').hasError(validation.type) && (graderuleForm.get('title').dirty || graderuleForm.get('title').touched)\"\n                                style=\"color: red;margin-left: 1%;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                <div [formGroup]=\"graderuleForm.get('paymentHead')\">\n                    <label class=\"col-sm-6 control-label\"><b>Payment Head:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" name=\"Payment Heades\" (change)=\"check($event.target)\" formControlName=\"paymentHeadId\">\n                        <option ng-selected=\"true\" value=\"\" disabled>----------Select Payment Head Name----------</option>\n                        <option *ngFor=\"let list of paymentHeadDataList\" [ngValue]=\"list._id\" selected>{{ list.title }}</option>\n                    </select>\n                    <div *ngFor=\"let validation of validationMessage.paymentHeadId\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"graderuleForm.get('paymentHead.paymentHeadId').hasError(validation.type) && (graderuleForm.get('paymentHead.paymentHeadId').dirty || graderuleForm.get('paymentHead.paymentHeadId').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                <br>\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <label class=\"col-sm-4 control-label\"><b>Type:&nbsp;</b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" id=\"typeValue\" (change)=\"check($event)\" formControlName=\"type\">\n                                <option ng-selected=\"true\" value=\"\" disabled>----------Select Grade Type----------</option>\n                                <option class=\"dropdown-item\"  *ngFor='let type of gradeType' >{{ type }}</option>\n\n                            </select>\n                            <div *ngFor=\"let validation of validationMessage.type\">\n                                <div style=\"color: red;margin-left: 1%;\"\n                                    *ngIf=\"graderuleForm.get('paymentHead.type').hasError(validation.type) && (graderuleForm.get('paymentHead.type').dirty || graderuleForm.get('paymentHead.type').touched)\"\n                                    style=\"color: red;margin-left: 1%;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\" *ngIf=\"Fixed\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Enter Amount:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"value\" placeholder=\"Enter Amount\" formControlName=\"value\" required >\n                                </div>\n                            </div>\n                            <div *ngFor=\"let validation of validationMessage.value\">\n                                <div style=\"color: red;margin-left: 1%;\"\n                                    *ngIf=\"graderuleForm.get('paymentHead.value').hasError(validation.type) && (graderuleForm.get('paymentHead.value').dirty || graderuleForm.get('paymentHead.value').touched)\"\n                                    style=\"color: red;margin-left: 1%;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"col-md-4\" *ngIf=\"Percent\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Enter Percent:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"number\" id=\"percentValue\" (input)=\"demo()\" placeholder=\"Enter Percent\" formControlName=\"value\" required>\n                                </div>\n                            </div>\n                            <div><p style=\"color:red;\">{{percentErrorMsg}}</p></div>\n                            <div><p style=\"color:red;\"> {{ errorMsg }}</p></div>\n                        </div>\n\n                        <div class=\"col-md-4\" *ngIf=\"Percent\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Percent Of:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" name=\"Payment Heades\">\n                                    <option ng-selected=\"true\" value=\"\" disabled>----Select Percent Of----</option>\n                                    <option *ngFor=\"let fixedHeads of fixedPaymentHeadsList\" [ngValue]=\"fixedHeads.value\" selected>{{ fixedHeads.name }}</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-success\"  [disabled]=\"graderuleForm.invalid || errorMsg || percentErrorMsg || permissionInfo.search('Create GradeRule') === -1\" (click)=\"demo()\">Submit</button>\n                <button class=\"btn btn-danger\" routerLink=\"/pages/graderule/list-graderule\">Cancel</button>\n            </form>\n        </div>\n    </div>","import { Component, OnInit, NgZone, OnDestroy} from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GraderuleApiService } from '../../graderule-service/graderule-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-managePaymentHeads',\n  templateUrl: 'update-managePaymentHeads.component.html'\n})\n\nexport class UpdateManagePaymentHeadsComponent implements OnInit,OnDestroy {\n  permissionInfo: any;\n  fixedPaymentHeadsList: any;\n  percentOfValue: any;\n  routePercentOfValue: any;\n  ngOnDestroy(): void {\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).removeAttribute('disabled');\n  }\n\n  gradeRuleId;\n  updateManagePaymentForm: any;\n  paymentHeadDataList: any;\n  paymentHeadId;\n  existingGradeRule: any;\n  existingPaymentHeadId: any;\n  existingPaymentHeadName: any;\n  gradeType = ['Fixed','Percent'];\n  Fixed: Boolean = false;\n  Percent: Boolean = false;\n  percentErrorMsg: String;\n  errorMsg: String;\n  inputValue;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  serverErrorMsg: boolean = false;\n\n\n\n  constructor(\n    public fb: FormBuilder,private api:GraderuleApiService,\n    private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n    private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.paymentHeadId = this.route.snapshot.paramMap.get(\"paymentHeadId\");\n    this.gradeRuleId = this.route.snapshot.paramMap.get(\"gradeRuleId\");\n    this.paymentHeadList();\n    this.addMemberValidation();\n    this.existing();\n    this.fixedPaymentHeadList();\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).setAttribute('disabled','disabled');\n    this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Edit PaymentHeads') === -1){\n        this.updateManagePaymentForm.disable();\n      }\n  }\n\n  existing(){\n    try{\n      this.api.existingData(this.gradeRuleId).subscribe(data=>{\n        if(data.status === 'success'){\n          this.existingGradeRule = data.data.paymentHeads;\n          this.existingGradeRule.forEach((items) => {\n            if(items._id == this.paymentHeadId){\n              if(items.type === 'Percent'){\n                this.Percent = true;\n                this.Fixed = false;\n                this.percentOfValue = items.percentOfValue;\n                this.percentOfFunction(items.percentOfValue);\n                this.errorMsg = '';\n                this.percentErrorMsg = '';\n                this.updateManagePaymentForm = this.fb.group({\n                  paymentHead: new FormGroup({\n                    paymentHeadId: new FormControl(items.paymentHeadId),\n                    type: new FormControl(items.type),\n                    value: new FormControl(items.value, Validators.compose([Validators.required,\n                      Validators.maxLength(8),\n                      Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/),])),\n                  })\n                })\n              } else {\n                this.Percent = false;\n                this.Fixed = true;\n                this.updateManagePaymentForm = this.fb.group({\n                  paymentHead: new FormGroup({\n                    paymentHeadId: new FormControl(items.paymentHeadId),\n                    type: new FormControl(items.type),\n                    value: new FormControl(items.value, Validators.compose([Validators.required,\n                      Validators.maxLength(8),\n                      Validators.pattern('^[0-9]*$'),])),\n                  })\n                })\n              }\n              this.existingPaymentHeadId = items._id;\n              this.existingPaymentHeadName = items.paymentHeadName\n            } else {\n              return;\n            }\n          })\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  paymentHeadList(){\n    this.api.getPaymentHeadData().subscribe(data=>{\n      this.paymentHeadDataList = data.data;\n    })\n  }\n\n  // Update Payment Heads\n  updatePaymentHeads(){\n    try{\n\n      this.api.updatePaymentHeads(this.updateManagePaymentForm.value,this.paymentHeadId,this.gradeRuleId,this.percentOfValue,this.Percent).subscribe(data => {\n        if(data.status === 'success'){\n          this.successMessage = true ;\n          this.serverErrorMsg = false ;\n          this.successMsg = data.message;\n          setTimeout(() => {\n              this.router.navigateByUrl(\"pages/graderule/list-graderule\");\n          },1000)\n        } else {\n          this.serverErrorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  addMemberValidation() {\n    try{\n      this.updateManagePaymentForm = this.fb.group({\n        paymentHead: new FormGroup({\n          paymentHeadId: new FormControl('',Validators.required),\n          type: new FormControl('',Validators.required),\n          value: new FormControl('',Validators.compose([Validators.required,\n            Validators.maxLength(8),\n            Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/),])),\n        })\n      })\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  check(name){\n    let dynamicValidation = {\n      fixed: [\n        Validators.required,\n        Validators.maxLength(8),\n        Validators.pattern('^[0-9]*$')\n      ],\n      percent: [\n        Validators.required,\n        Validators.maxLength(8),\n        Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)\n      ]\n    }\n    let gradeType = name.target.options[name.target.options.selectedIndex].text;\n    if(gradeType == 'Fixed')\n    {\n        this.Fixed = true;\n        this.Percent = false;\n        this.errorMsg = '';\n        this.percentErrorMsg = '';\n\n        this.updateManagePaymentForm.get('paymentHead.value').setValidators(dynamicValidation['fixed']);\n        this.updateManagePaymentForm.get('paymentHead.value').updateValueAndValidity();\n\n    } else if (gradeType == 'Percent') {\n        this.Percent = true;\n        this.Fixed = false;\n        if(this.updateManagePaymentForm.get('paymentHead.value').value){\n            this.switchTypeValidation(this.updateManagePaymentForm.get('paymentHead.value').value);\n        }\n        this.updateManagePaymentForm.get('paymentHead.value').setValidators(dynamicValidation['percent']);\n        this.updateManagePaymentForm.get('paymentHead.value').updateValueAndValidity();\n    }\n}\n\ndemo(){\n  if((document.getElementById('typeValue') as HTMLInputElement).value != 'Fixed') {\n      this.inputValue = (document.getElementById('percentValue') as HTMLInputElement).value;\n  if(this.inputValue >0 && this.inputValue <= 100 ){\n      this.percentErrorMsg = '';\n      this.errorMsg = '';\n  } else if(this.inputValue.length == 0){\n      this.percentErrorMsg = 'Percent is Required';\n      this.errorMsg = '';\n  } else if(this.inputValue.length >6){\n      this.percentErrorMsg = 'Percent Value is too Large';\n      this.errorMsg = '';\n  } else {\n      this.percentErrorMsg = '';\n      this.errorMsg = 'Enter value is not valid';\n  }\n}\n  }\n\n// Check For Validation When User Switch The Type\nswitchTypeValidation(inputValue:Number){\n  if(inputValue >0 && inputValue <= 100 ){\n      this.percentErrorMsg = '';\n      this.errorMsg = '';\n  } else if((inputValue).toString().length == 0){\n      this.percentErrorMsg = 'Percent is Required';\n      this.errorMsg = '';\n  } else if((inputValue).toString().length > 6) {\n      this.percentErrorMsg = 'Percent Value is too Large';\n      this.errorMsg = '';\n  } else {\n      this.percentErrorMsg = '';\n      this.errorMsg = 'Enter value is not valid';\n  }\n}\n\nvalidationMessage = {\n  'value': [\n    { type: 'required', message: 'Amount is Required' },\n    { type: 'maxlength', message: 'Amount is too Large' },\n    { type: 'pattern', message: 'Amount not valid' },\n  ],\n  'paymentHeadId':[\n      { type: 'required', message: 'Payment Head is Required' },\n  ],\n  'type': [\n    { type: 'required', message: 'Type  is Required' },\n  ],\n}\n\nfixedPaymentHeadList(){\n  this.api.fixedPaymentHeads(this.gradeRuleId).subscribe((data) => {\n    if(data.status === 'success'){\n       this.fixedPaymentHeadsList = data.data;\n    }\n})\n}\n\npercentOf(value){\n  this.percentOfValue = value;\n}\n\npercentOfFunction = function percentOfFunction(percentValue) {\n  setTimeout(() => {\n    (document.getElementById('percentOfValue') as HTMLInputElement).value = percentValue;\n  },200);\n}\n\n\n}","<div class=\"card card-user\">\n      <div class=\"card-header\">\n         <h2 class=\"card-title text-center\">Update Payment Heads</h2>\n      </div>\n      <div class=\"card-body\">\n            <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-danger\" *ngIf=\"serverErrorMsg\">\n                        <strong>{{ errMsg }}</strong>\n                    </p>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                        <strong>{{ successMsg }}</strong>\n                    </p>\n                </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateManagePaymentForm\" (ngSubmit)=\"updatePaymentHeads()\"\n       novalidate>\n           <div [formGroup]=\"updateManagePaymentForm.get('paymentHead')\">\n               <label class=\"col-sm-6 control-label\"><b>Payment Head:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n               <select class=\"dropdown dropdown-toggle form-control\" name=\"Payment Heades\" formControlName=\"paymentHeadId\">\n                   <option *ngFor=\"let list of paymentHeadDataList\" [ngValue]=\"list._id\" selected>{{ list.title }}</option>\n               </select>\n               <div *ngFor=\"let validation of validationMessage.paymentHeadId\">\n                   <div style=\"color: red;margin-left: 1%;\"\n                       *ngIf=\"updateManagePaymentForm.get('paymentHead.paymentHeadId').hasError(validation.type) && (updateManagePaymentForm.get('paymentHead.paymentHeadId').dirty || updateManagePaymentForm.get('paymentHead.paymentHeadId').touched)\"\n                       style=\"color: red;margin-left: 1%;\">\n                       {{ validation.message }}\n                   </div>\n               </div>\n           <br>\n           <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <label class=\"col-sm-8 control-label\"><b>Type:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"typeValue\" (change)=\"check($event)\" formControlName=\"type\">\n                        <!-- <option ng-selected=\"true\" value=\"\" disabled>----------Select Grade Type----------</option> -->\n                        <option class=\"dropdown-item\"  *ngFor='let type of gradeType' >{{ type }}</option>\n\n                    </select>\n                    <div *ngFor=\"let validation of validationMessage.type\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"updateManagePaymentForm.get('paymentHead.type').hasError(validation.type) && (updateManagePaymentForm.get('paymentHead.type').dirty || updateManagePaymentForm.get('paymentHead.type').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-4\" *ngIf=\"Fixed\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Enter Amount:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                            <input class=\"form-control\" type=\"text\" id=\"value\" placeholder=\"Enter Amount\" formControlName=\"value\" >\n                        </div>\n                    </div>\n                    <div *ngFor=\"let validation of validationMessage.value\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"updateManagePaymentForm.get('paymentHead.value').hasError(validation.type) && (updateManagePaymentForm.get('paymentHead.value').dirty || updateManagePaymentForm.get('paymentHead.value').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-4\" *ngIf=\"Percent\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Enter Percent:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                            <input class=\"form-control\" type=\"number\" id=\"percentValue\" (input)=\"demo()\" placeholder=\"Enter Percent\" formControlName=\"value\" required>\n                        </div>\n                    </div>\n                    <div><p style=\"color:red;\">{{percentErrorMsg}}</p></div>\n                    <div><p style=\"color:red;\"> {{ errorMsg }}</p></div>\n\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"Percent\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Percent Of:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" name=\"Payment Heades\" (change)=\"percentOf($event.target.value)\" id=\"percentOfValue\">\n                            <option ng-selected=\"true\" value=\"\" disabled>----Select Percent Of----</option>\n                            <option *ngFor=\"let fixedHeads of fixedPaymentHeadsList\" [value]=\"fixedHeads.value\" selected>{{ fixedHeads.name }}</option>\n                        </select>\n                    </div>\n\n                </div>\n            </div>\n           </div>\n           <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateManagePaymentForm.invalid || errorMsg || percentErrorMsg || permissionInfo.search('Edit PaymentHeads') === -1\">Update</button>\n           <button class=\"btn btn-danger\" routerLink=\"/pages/graderule/list-managePaymentHeads/{{gradeRuleId}}\">Cancel</button>\n   </form>\n   </div>\n   </div>\n\n"],"sourceRoot":"webpack:///"}