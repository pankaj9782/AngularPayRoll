{"version":3,"sources":["webpack:///src/app/pages/skill-category/skill-category-routing.module.ts","webpack:///src/app/pages/skill-category/skill-category.module.ts","webpack:///src/app/pages/skill-category/skill-category.component.ts","webpack:///src/app/pages/skill-category/skill-category.component.html","webpack:///src/app/pages/skill-category/add-skill-category/add-skill-category.component.ts","webpack:///src/app/pages/skill-category/add-skill-category/add-skill-category.component.html","webpack:///src/app/pages/skill-category/update-skill-category/update-skill-category.component.ts","webpack:///src/app/pages/skill-category/update-skill-category/update-skill-category.component.html","webpack:///src/app/pages/skill-category/list-skill-category/list-skill-category.component.ts","webpack:///src/app/pages/skill-category/list-skill-category/list-skill-category.component.html"],"names":["route","path","component","canActivate","children","redirectTo","pathMatch","SkillCategoryRoutingModule","forChild","declarations","imports","SkillCategoryModule","SkillCategoryComponent","selector","templateUrl","styleUrls","AddSkillCategoryComponent","_api","fb","ngZone","router","api","apiService","util","successMsg","String","successMessage","errMsg","errorMsg","companyListData","companyName","demo","validationMessage","type","message","isListAvaliable","getCategoryList","companyDataValidate","permissionInfo","permissionRoleInfo","search","skillForm","disable","group","skillName","required","categoryId","err","console","log","getListData","subscribe","data","status","companyNameStore","company","getJobCategoryData","categoryList","jobCategory","value","companyId","cleanSkillCategoryForm","cleanFormLevelOne","addSkillCategoy","setTimeout","handleErrors","run","navigateByUrl","skillCategoryData","skillCategory","length","skillCategoryStatus","skillData","UpdateSkillCategoryComponent","leaveData","leaveFormData","skillCategoryId","snapshot","paramMap","get","moduleExists","existingData","skillCategoryDetails","existinglist","cleanSkillCategoryUpdateForm","updateSkillCategory","skillDataUpdate","ListSkillCategoryComponent","_Activatedroute","showCard","leaveListData","companyShowData","leaveList","len","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","removeData","dismiss","DismissReason","cancel","addSkillCategory"],"mappings":"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","file":"skill-category-skill-category-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SkillCategoryComponent } from './skill-category.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListSkillCategoryComponent } from './list-skill-category/list-skill-category.component';\nimport { AddSkillCategoryComponent } from './add-skill-category/add-skill-category.component';\nimport { UpdateSkillCategoryComponent } from './update-skill-category/update-skill-category.component';\n\n\nconst route : Routes = [\n  {\n    path :'',\n    component : SkillCategoryComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-skill-category',\n        component: ListSkillCategoryComponent,\n      },\n      {\n        path: 'add-skill-category',\n        component: AddSkillCategoryComponent\n      },\n      {\n        path: 'update-skill-category/:categoryId',\n        component: UpdateSkillCategoryComponent\n      },\n      \n      {\n        path:'',\n        redirectTo :'list-skill-category',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class SkillCategoryRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SkillCategoryRoutingModule } from './skill-category-routing.module';\nimport { SkillCategoryComponent } from './skill-category.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListSkillCategoryComponent } from './list-skill-category/list-skill-category.component';\nimport { AddSkillCategoryComponent } from './add-skill-category/add-skill-category.component';\nimport { UpdateSkillCategoryComponent } from './update-skill-category/update-skill-category.component';\n\n\n@NgModule({\n  declarations: [\n    SkillCategoryComponent,\n     ListSkillCategoryComponent,\n     AddSkillCategoryComponent,\n     UpdateSkillCategoryComponent,\n    ],\n  \n  imports: [\n    CommonModule,\n    SkillCategoryRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class SkillCategoryModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-skill-category',\n  templateUrl: './skill-category.component.html',\n  styleUrls: ['./skill-category.component.scss']\n})\nexport class SkillCategoryComponent implements OnInit {\n\n  constructor(){\n\n  }\n  ngOnInit(){\n\n  }\n \n\n}","<router-outlet></router-outlet>","import { Component, OnInit,NgZone, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { skillCategoryApiService } from '../skillCategory-service/skillCategory-api.service';\nimport { ApiService } from '../../../services/api.service';\nimport { Observable } from 'rxjs';\nimport { JobCategoryApiService } from '../../job category/jobCategory-service/jobCategory-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n    selector: 'app-add-skill-category',\n    templateUrl: './add-skill-category.component.html'\n})\n\nexport class AddSkillCategoryComponent implements OnInit {\n\n    skillForm: FormGroup;\n    successMsg:any= String;\n    successMessage: boolean = false;\n    errMsg:any= String;\n    errorMsg: boolean = false;\n    companyNameStore: any;\n    showCard: any;\n    companyListData: any = [];\n    companyNameId: any;\n    public companyName:any= [];\n    public companyId: any;\n    categoryList: any;\n    demo = ['Akshay'];\n  permissionInfo: any;\n\n    constructor(private _api: ApiService,\n      public fb: FormBuilder,\n      private ngZone: NgZone,\n      private router: Router,\n      private api: skillCategoryApiService,\n      private apiService: JobCategoryApiService,\n      private util: UtilitiesService){\n        this.isListAvaliable();\n      }\n\n    ngOnInit() {\n      this.getCategoryList();\n      this.companyDataValidate();\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create SkillCategory') === -1){\n        this.skillForm.disable();\n      }\n    }\n\n    companyDataValidate() {\n      try {\n        this.skillForm = this.fb.group({\n          skillName: new FormControl('',Validators.required),\n          categoryId: new FormControl('',Validators.required)\n          })\n        }\n      catch (err) {\n        console.log(err);\n      }\n    }\n\n    companyValue() {\n      this._api.getListData().subscribe(data =>{\n        if(data.status == 'success' || data.status == 200) {\n          this.companyNameStore = data.company;\n        }\n      })\n    }\n\n    getCategoryList() {\n      try {\n        this.apiService.getJobCategoryData().subscribe(data =>{\n          this.categoryList = data.jobCategory;\n        })\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n\n    onChangeCompany(value:String) {\n      this.companyId = value;\n    }\n\n    skillData() {\n      try{\n        let cleanSkillCategoryForm = this.util.cleanFormLevelOne(this.skillForm);\n        if (this.skillForm.value) {\n          this.api.addSkillCategoy(cleanSkillCategoryForm.value).subscribe(data => {\n            if(data.status === \"success\" || data.status === 200){\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n              setTimeout(() => {\n                this.handleErrors();\n                this.ngZone.run(()=>this.router.navigateByUrl('/pages/skill-category/list-skill-category'));\n              }, 2000);\n            }\n            else if(data.status === \"error\"|| data.status === 404){\n              this.errorMsg = true;\n              this.successMessage = false;\n              this.errMsg = data.message;\n              setTimeout(() => {\n                this.handleErrors();\n              }, 3000);\n            }\n          })\n        }\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    validationMessage = {\n      'skillName': [\n        { type: 'required', message: 'Skill Name is required' },\n      ],\n      'categoryId': [\n        { type: 'required', message: 'Category Name is required' },\n      ],\n    }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n  isListAvaliable(){\n    try{\n      this.api.skillCategoryData().subscribe((data) =>{\n        if(data.status === 'success'){\n          if(data.skillCategory.length > 0 && this.util.skillCategoryStatus !== 1){\n            this.router.navigateByUrl(\"/pages/skill-category/list-skill-category\");\n            this.util.skillCategoryStatus = 0;\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Skill Category Details</h2>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"skillForm\" (ngSubmit)=\"skillData()\" novalidate>\n        <div class=\"row\">\n           <div class=\"col-md\">\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Category Name: <span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                  <select class=\"dropdown dropdown-toggle form-control\" Name=\"category\"  formControlName=\"categoryId\" >\n                     <option ng-selected=\"true\" value=\"\" disabled>----- Select Category Name ------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let list of categoryList\" [ngValue]=\"list._id\" >\n                           {{list.categoryName}}\n                        </option>\n                     </select>\n               <div *ngFor=\"let validation of validationMessage.categoryId\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"skillForm.get('categoryId').hasError(validation.type) && (skillForm.get('categoryId').dirty || skillForm.get('categoryId').touched)\"\n                     style=\"color: red;margin-left: 14px;\">\n                     {{validation.message}}\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div class=\"col-md\">\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Skill Name: <span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"sName\" placeholder=\"Enter Skill Name\"\n                  formControlName=\"skillName\" required>\n               <div *ngFor=\"let validation of validationMessage.skillName\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"skillForm.get('skillName').hasError(validation.type) && (skillForm.get('skillName').dirty || skillForm.get('skillName').touched)\"\n                     style=\"color: red;margin-left: 14px;\">\n                     {{validation.message}}\n                  </div>\n               </div>\n            </div>\n         </div>\n         </div>\n         <!-- <div class=\"col-md\">\n            <div class=\"form-group\">\n               <label class=\"col-sm-6 control-label\"><b>Skill Name: <span style=\"color: darkred\">*</span></b></label>\n               <div class=\"col-sm-offset-2\">\n\n                  <select class=\"dropdown dropdown-toggle form-control\" Name=\"category\"  formControlName=\"categoryId\">\n                     <option class=\"dropdown-item\" value=\"0\" selected></option>\n                  </select>\n               </div>\n            </div>\n            </div> -->\n\n      </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"skillForm.invalid\">Submit</button>\n               <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-skill-category\">Cancel</button>\n            </div>\n         </div>\n      </form>\n\n   </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { skillCategoryApiService } from '../skillCategory-service/skillCategory-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-skill-category',\n  templateUrl: 'update-skill-category.component.html'\n})\n\nexport class UpdateSkillCategoryComponent implements OnInit {\n\n  skillForm: FormGroup;\n  successMsg:any= String;\n  successMessage: boolean = false;\n  errMsg: any= String;\n  errorMsg: boolean = false;\n  companyNameStore:any= [];\n  showCard: any;\n  companyNameId: any;\n  companyName:any= [];\n  skillCategoryId: any;\n  leaveTypeId: any;\n  leaveId: any;\n  leaveData: any= [];\n  leaveFormData: any=[];\n  existinglist: any;\n  permissionInfo: any;\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private route: ActivatedRoute,\n    private api: skillCategoryApiService,\n    private util: UtilitiesService) {\n      this.skillCategoryId = this.route.snapshot.paramMap.get(\"categoryId\");\n      this.util.moduleExists(this.skillCategoryId,'SkillCategory').subscribe((data)=>{\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/skill-category/list-skill-category');\n          }\n        }\n      })\n    }\n\n  ngOnInit() {\n    this.companyDataValidate();\n    this.existingData();\n    this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Edit SkillCategory') === -1){\n        this.skillForm.disable();\n      }\n  }\n\n  existingData(){\n    this.api.skillCategoryDetails(this.skillCategoryId).subscribe((data)=>{\n      this.existinglist = data;\n        this.skillForm = this.fb.group({\n          skillName: new FormControl(this.existinglist.data.skillName),\n        })\n    })\n  }\n\n\n  companyDataValidate() {\n    try {\n      this.skillForm = this.fb.group({\n        skillName: new FormControl('', Validators.required),\n      })\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  skillDataUpdate() {\n    try {\n      let cleanSkillCategoryUpdateForm = this.util.cleanFormLevelOne(this.skillForm);\n      if (this.skillForm.value) {\n        this.api.updateSkillCategory(cleanSkillCategoryUpdateForm.value,this.skillCategoryId).subscribe(data => {\n          if (data.status === 'success' || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.ngZone.run(() => this.router.navigateByUrl('/pages/skill-category/list-skill-category'));\n            },2000);\n\n          } else if (data.status == \"error\") {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            },3000)\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  validationMessage = {\n    'skillName': [\n      { type: 'required', message: 'Skill Name is Required' },\n    ],\n  }\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Update Skill Category</h2>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"skillForm\" (ngSubmit)=\"skillDataUpdate()\" novalidate>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Skill Name:<span style=\"color: darkred\">*</span> </b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"sName\" placeholder=\"Enter Skill Name\" formControlName=\"skillName\" required>\n                  <div *ngFor=\"let validation of validationMessage.skillName\">\n                     <div style=\"color: red;margin-left: 14px;\" *ngIf=\"skillForm.get('skillName').hasError(validation.type) && (skillForm.get('skillName').dirty || skillForm.get('skillName').touched)\"\n                     style=\"color: red;margin-left: 14px;\" >{{validation.message}}</div>\n                  </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"skillForm.invalid || permissionInfo.search('Edit SkillCategory') === -1\">Update</button>\n               <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../../list-skill-category\">Cancel</button>\n            </div>\n         </div>\n      </form>\n   </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { skillCategoryApiService } from '../skillCategory-service/skillCategory-api.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-skill-category',\n    templateUrl: './list-skill-category.component.html',\n})\n\nexport class ListSkillCategoryComponent implements OnInit {\n\n    showCard = {};\n    // leaveListData: Object;\n    leaveListData:any =[];\n    companyShowData: any = [];\n  permissionInfo: any;\n\n    constructor(private api: skillCategoryApiService,\n       public route:Router,\n       private _Activatedroute:ActivatedRoute,\n       private util: UtilitiesService) {}\n\n    ngOnInit() {\n      this.leaveList();\n      this.permissionInfo = this.util.permissionRoleInfo\n    }\n\n    leaveList() {\n      try{\n        this.api.skillCategoryData().subscribe(data => {\n          if (data.status === 'success' || data.status === 200) {\n            this.leaveListData = data.skillCategory;\n            const len =this.leaveListData.length;\n            if(len == 0){\n              this.route.navigateByUrl(\"/pages/skill-category/add-skill-category\");\n            }\n          }\n        })\n      }catch(err){\n        console.log(err.message);\n      }\n    }\n\n    showConfirmationMessage(skillCategoryId:String){\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeData(skillCategoryId).subscribe((data)=>{\n            if(data.status === \"success\" || data.status === 200){\n          swalWithBootstrapButtons.fire(\n            'Deleted!',\n            data.message,\n            'success'\n          )\n          this.leaveList();\n            }\n        })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n    }\n    addSkillCategory(){\n      try{\n        this.util.skillCategoryStatus = 1;\n      }catch(err){\n        console.log(err)\n      }\n    }\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Skill Category</h2>\n        <button [disabled]=\"permissionInfo.search('Create SkillCategory') === -1\"\n         class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/skill-category/add-skill-category\"style=\"float: right;\" (click)= \"addSkillCategory()\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add skill Category</button\n            >\n    </div>\n    <!-- <div class=\"panel-body\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" *ngFor=\"let list of leaveListData\">\n                <div class=\"row\">\n                    <div class=\"col-md-10\">\n                        <p><b>Skill Name: </b> {{list?.skillName}} </p>\n                    </div>\n                    <div class=\"cpl-md-2\">\n                        <a routerLink=\"/pages/skill-category/update-skill-category/{{list?._id}}\"style=\"float: right\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>\n                        <button style=\"float: right;\" class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\"><i class=\"fa fa-trash\"></i></button>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div> -->\n    <table class=\"table\" style=\"text-align: center;\">\n        <thead class=\" text-primary\">\n            <tr>\n            <th> S.No </th>\n            <th> Skill Name </th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let list of leaveListData; let i = index\">\n            <tr >\n            <td><b>{{ i+1 }}.</b></td>\n            <td> {{ list.skillName }} </td>\n            <td>\n                <a [class.disabled]=\"permissionInfo.search('Edit SkillCategory') === -1\"\n                routerLink=\"/pages/skill-category/update-skill-category/{{list?._id}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                <button [disabled]=\"permissionInfo.search('Delete SkillCategory') === -1\"\n                 class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\"><i class=\"fa fa-trash\"></i></button\n                    >\n            </td>\n            </tr>\n    </table>\n</div>"]}