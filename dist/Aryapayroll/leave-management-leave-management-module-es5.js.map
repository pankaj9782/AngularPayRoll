{"version":3,"sources":["webpack:///src/app/pages/leave-management/manage-earned-leave/services/leave-services.service.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/add-earned-leave/add-earned-leave.component.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/add-earned-leave/add-earned-leave.component.html","webpack:///src/app/pages/leave-management/manage-leave-status/list-leave/list-leave.component.html","webpack:///src/app/pages/leave-management/manage-leave-status/list-leave/list-leave.component.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/update-earned-leave/update-earned-leave.component.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/update-earned-leave/update-earned-leave.component.html","webpack:///src/app/pages/leave-management/manage-leave-status/mark-absent/mark-absent.component.ts","webpack:///src/app/pages/leave-management/manage-leave-status/mark-absent/mark-absent.component.html","webpack:///src/app/pages/leave-management/manage-earned-leave/list-earned-leave/list-earned-leave.component.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/list-earned-leave/list-earned-leave.component.html","webpack:///src/app/pages/leave-management/manage-leave-status/services.service.ts","webpack:///src/app/pages/leave-management/leave-management.module.ts","webpack:///src/app/pages/leave-management/leave-management-routing.module.ts"],"names":["LeaveServicesService","http","endpoint","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","message","status","console","log","err","data","employeeId","userId","localStorage","getItem","apiURL","post","pipe","errorMgmt","year","month","companyId","sessionStorage","get","earnedLeaveId","leaveCount","providedIn","AddEarnedLeaveComponent","fb","employeeListAPI","api","router","util","earnedLeaveMonths","earnedLeavevalidationMessage","type","employeeList","manageEarnedLeaveForm","permissionInfo","permissionRoleInfo","search","addEarnedLeaveForm","disable","group","earnedLeave","required","compose","pattern","reason","getEmployeeList","subscribe","employeeDetails","value","addEarnedLeave","successMessage","errorMsg","successMsg","setTimeout","handleErrors","navigateByUrl","errMsg","addLeaveForm","selector","templateUrl","styleUrls","ListLeaveComponent","leaveListAPI","leaveListMessage","listActions","showInfoCard","filterDate","returnCurrentDate","document","getElementById","dateWiseAllLeaveList","companyEmployeelist","length","companyEmployeeLeaveList","i","_id","date","dateWiseLeaveList","Date","getFullYear","getMonth","toString","padStart","getDate","leaveId","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","requestDataAlter","action","leaveActionTaken","filterFunctionality","resetActionList","input","inputPlaceholder","inputAttributes","requestData","dismiss","DismissReason","cancel","resetFilter","UpdateEarnedLeaveComponent","route","earnedLeaveUpdateAPI","snapshot","paramMap","leaveUpdateForm","updateLeaveFormDetails","existingEarnedLeaveDetails","existingUpdateDetails","updateEarnedLeaveForm","updateEarnedLeave","MarkAbsentComponent","ngZone","formToLeaveFor","showCard","showTlOption","absentFieldValidationMessage","manangeEmployeeLeave","leaveList","addEmployeeAbsentForm","leaveTypeId","fromDate","toDate","fromLeaveFor","toLeaveFor","requestToUserId","StartDate","EndDate","eDate","sDate","alert","getListData","leaveListData","leaveTypes","len","Object","keys","employeeTlList","parentUsersIds","markEmployeeAbsent","run","getEmployeeTL","DateCheck","ListEarnedLeaveComponent","earnedLeaveListAPI","earnedLeaveYearMsg","earnedLeaveDataMsg","showHistoryCards","leaveListEmployee","currentDate","substring","listAllEarnedLeave","earnedLeaveList","yearValue","yearRegularExpression","match","earnedLeaveDetails","filterEarnedLeaveDetails","fetchHistory","earnedLeaveHistory","deductionLeaveHistory","deductLeave","allowOutsideClick","deleteEarnedLeave","yearValidation","ServicesService","LeaveManagementModule","declarations","imports","path","component","canActivate","children","redirectTo","pathMatch","LeaveManagementRoutingModule","forChild"],"mappings":"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","file":"leave-management-leave-management-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { throwError, Observable } from 'rxjs';\nimport { AddEarnedLeave } from '../../../../auth/addEarnedLeave'\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaveServicesService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Add Earned Leave Balance\naddEarnedLeave(data: AddEarnedLeave,employeeId:String): Observable<any>{\n  try{\n    let userId = localStorage.getItem('token');\n    let apiURL = `${this.endpoint}/employee/add-earned-leave/${employeeId}/${userId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// All Earned Leave List\nlistAllEarnedLeave(year: String, month: String): Observable<any>{\n  try{\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/employee/list-all-eraned-leave/${companyId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Earned Leave Details\nfilterEarnedLeaveDetails(employeeId,year,month): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/earned-leave-details/${employeeId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Individual earned leave details for update earned leaves\nexistingEarnedLeaveDetails(earnedLeaveId,employeeId): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/earned-leave-details/${earnedLeaveId}/${employeeId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Submit Update Form Data\nupdateEarnedLeave(data: AddEarnedLeave, earnedLeaveId,employeeId): Observable<any>{\n  try{\n    let userId = localStorage.getItem('token');\n    let apiURL = `${this.endpoint}/employee/update-earned-leave/${earnedLeaveId}/${employeeId}/${userId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Earned leave history\nfetchHistory(employeeId,year,month): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/earned-leave-history/${employeeId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Delete Earned Leave\ndeleteEarnedLeave(employeeId,year,month,leaveCount): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/delete-earned-leave/${employeeId}/${year}/${month}/${leaveCount}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { LeaveServicesService } from '../services/leave-services.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-earned-leave',\n  templateUrl: './add-earned-leave.component.html',\n  styleUrls: ['./add-earned-leave.component.scss']\n})\nexport class AddEarnedLeaveComponent implements OnInit {\n  addEarnedLeaveForm: any;\n  earnedLeaveMonths = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  employeeDetails: any;\n  errorMsg: boolean;\n  successMessage: boolean;\n  errMsg: string;\n  successMsg: string;\n  status = \"Active\";\n  permissionInfo: any;\n\n  constructor(private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private api: LeaveServicesService,\n    private router: Router,\n    private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.employeeList();\n    this.manageEarnedLeaveForm();\n    this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create EarnedLeave') === -1){\n        this.addEarnedLeaveForm.disable();\n      }\n  }\n\n  manageEarnedLeaveForm(){\n    try{\n      this.addEarnedLeaveForm = this.fb.group({\n        earnedLeave: new FormGroup({\n          month: new FormControl('',Validators.required),\n          year: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/^(19|20)\\d{2}$/)])),\n          leaveCount: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)\n          ])),\n          reason: new FormControl('')\n        }),\n        employeeId: new FormControl('', Validators.required)\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\nearnedLeavevalidationMessage = {\n  'month':[\n    {type:'required', message:'Month is Required'}\n  ],\n  'year':[\n    {type:'required', message:'Year is Required'},\n    {type:'pattern', message:'Value is not acceptable'}\n  ],\n  'leaveCount':[\n    {type:'required', message:'Earned Balance is Required'},\n    {type:'pattern', message:'Value is not acceptable'}\n  ],\n  'employeeId':[\n    {type:'required', message:'Employee Name is Required'}\n  ]\n}\n\n// Get Employee List\nemployeeList(){\n  try{\n    this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeDetails = data.data;\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Submit Earned Leave Form\n\naddLeaveForm(){\n  try{\n    console.log(this.addEarnedLeaveForm.get('employeeId').value);\n    this.api.addEarnedLeave(this.addEarnedLeaveForm.value,this.addEarnedLeaveForm.get('employeeId').value).subscribe((data)=> {\n      if(data.status === 'success'){\n        this.successMessage = true ;\n        this.errorMsg = false ;\n        this.successMsg = data.message;\n        setTimeout(()=> {\n          this.handleErrors();\n          this.router.navigateByUrl(\"/pages/leave-management/list-earned-leave\");\n        },2000)\n      } else {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrors();\n        }, 3000);\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\nhandleErrors(){\n  this.errorMsg = false;\n  this.successMessage = false;\n  this.errMsg = '';\n  this.successMsg = '';\n}\n\n}\n","<div class=\"card card-user\">\n    <!-- <ngx-spinner\n    bdColor=\"rgba(51,51,51,0.8)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"ball-scale-ripple-multiple\"\n    >\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n    </ngx-spinner> -->\n<div class=\"card-header\">\n    <h2 class=\"card-title\" style=\"text-align: center;\">Earned Leave Details</h2>\n</div>\n<div class=\"card-body\">\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n        </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n        </p>\n    </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addEarnedLeaveForm\" (ngSubmit)=\"addLeaveForm()\" novalidate>\n        <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Employee Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"employeeId\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Employee----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of employeeDetails\" value=\"{{employee._id}}\">\n                           {{employee.name}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.employeeId\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('employeeId').hasError(validation.type) && (addEarnedLeaveForm.get('employeeId').dirty || addEarnedLeaveForm.get('employeeId').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" [formGroup]=\"addEarnedLeaveForm.get('earnedLeave')\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Month:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"month\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Month----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let month of earnedLeaveMonths\" value=\"{{month}}\">\n                           {{month}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.month\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('earnedLeave.month').hasError(validation.type) && (addEarnedLeaveForm.get('earnedLeave.month').dirty || addEarnedLeaveForm.get('earnedLeave.month').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Year:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"text\" id=\"inputPhone\" placeholder=\"Enter Year\"\n                    formControlName=\"year\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.year\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('earnedLeave.year').hasError(validation.type) && (addEarnedLeaveForm.get('earnedLeave.year').dirty || addEarnedLeaveForm.get('earnedLeave.year').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Earned Balance:&nbsp;(in days)&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Earned Leave balance \"\n                    formControlName=\"leaveCount\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.leaveCount\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('earnedLeave.leaveCount').hasError(validation.type) && (addEarnedLeaveForm.get('earnedLeave.leaveCount').dirty || addEarnedLeaveForm.get('earnedLeave.leaveCount').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Reason:</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Reason\"\n                        formControlName=\"reason\">\n                </div>\n        </div>\n\n    </div>\n        <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addEarnedLeaveForm.invalid || permissionInfo.search('Create EarnedLeave') === -1\">Submit</button>\n                <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-earned-leave\">Cancel</button>\n\n            </div>\n        </div>\n    </form>\n</div>\n</div>","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 class=\"text-center\">Employee Leave List</h2>\n    </div>\n    <div class=\"card-body\">\n\n\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-4 control-label\"><b>Employee Name:</b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"leaveListEmployee\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee\n                        </option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of companyEmployeelist\"\n                            value=\"{{employee._id}}\">\n                            {{employee.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Date:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"date\" id=\"leaveListDate\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp;\n                        Filter</button>\n                        <button class=\"btn btn-danger\" (click)=\"resetFilter()\"><i class=\"fas fa-trash-restore\"></i>&nbsp;\n                            Reset</button>\n                </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary\" routerLink=\"/pages/leave-management/mark-absent\"><i\n                        class=\"fa fa-plus-square\"></i>&nbsp; Mark Employee Absent</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"card-body\">\n        <div class=\"card\" style=\"background-color:whitesmoke;\">\n            <div class=\"panel-body\">\n                <ul class=\"list-group\">\n                    <div class=\"card-body\">\n                        <table class=\"table\" style=\"text-align: center;\">\n                            <thead class=\" text-primary\">\n                                <tr>\n                                    <th>Employee Name </th>\n                                    <th>Reason </th>\n                                    <th>Type</th>\n                                    <th>Status</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody *ngFor=\"let leaveList of companyEmployeeLeaveList\">\n                                <tr>\n                                    <td> {{leaveList.userName}} </td>\n                                    <td> {{leaveList.reason}} </td>\n                                    <td> {{leaveList.leaveTypeName}} </td>\n                                    <td> {{leaveList.status}}</td>\n                                    <td>\n                                        <button title=\"Info\" class=\"btn btn-primary\" (click)='leaveInfo(leaveList._id)'\n                                            style=\"color: white;\"><i class=\"fas fa-binoculars\"></i>\n                                        </button>&nbsp;\n                                        <select class=\"dropdown dropdown-toggle form-control\" id=\"actionList\"\n                                            (change)=\"actionTaken($event.target.value,leaveList.requestToUserId,leaveList._id)\">\n                                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>\n                                                Choose Action</option>\n                                            <option class=\"dropdown-item\" *ngFor=\"let action of listActions\"\n                                                value=\"{{action}}\">\n                                                {{action}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <table class=\"table card\"\n                                            style=\"text-align: left;background-color:rgb(178, 218, 208);\"\n                                            [hidden]=\"showInfoCard[leaveList._id]\">\n                                            <tr>\n                                                <th>Request To TL/Manager:</th>\n                                                <td>{{ leaveList.requestToName }}</td>\n                                                <th>Applied Date:</th>\n                                                <td>{{ leaveList.metaData.createdAt | date:'fullDate' }}\n                                                    {{ leaveList.metaData.createdAt | date:'shortTime' }}</td>\n                                            </tr>\n                                            <tr>\n                                                <th>From Date:</th>\n                                                <td>{{ leaveList.fromDate | date:'fullDate' }}\n                                                    {{ leaveList.fromDate | date:'shortTime' }}</td>\n                                                <th>From Leave For</th>\n                                                <td>{{ leaveList.fromLeaveFor }}</td>\n                                            </tr>\n                                            <tr>\n                                                <th>To Date:</th>\n                                                <td>{{ leaveList.toDate | date:'fullDate' }}\n                                                    {{ leaveList.toDate | date:'shortTime' }}</td>\n                                                <th>To Leave For</th>\n                                                <td>{{ leaveList.toLeaveFor }}</td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n                    </div>\n                </ul>\n            </div>\n\n        </div>\n    </div>\n    <div *ngIf=\"leaveListMessage.length != 0\">\n        <h3 style=\"text-align: center;\">{{ leaveListMessage }}</h3>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { ServicesService } from '../services.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-leave',\n  templateUrl: './list-leave.component.html',\n  styleUrls: ['./list-leave.component.scss']\n})\nexport class ListLeaveComponent implements OnInit {\n  companyEmployeelist: any;\n  filterDate: any;\n  companyEmployeeLeaveList: any;\n  leaveListMessage = '';\n  listActions = ['Approve','Reject','Sandwich'];\n  showInfoCard = {};\n  showCardLeaveId: any;\n  status = \"Active\";\n\n  constructor(private employeeListAPI: EmployeeService,\n    private leaveListAPI: ServicesService) {\n\n    }\n\n  ngOnInit() {\n    this.employeeList();\n    this.filterDate = this.returnCurrentDate();\n    (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.filterDate;\n    this.dateWiseAllLeaveList();\n  }\n\n  // Employee List\n  employeeList(){\n    try{\n      this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=> {\n        if(data.status === 'success'){\n          this.companyEmployeelist = data.data;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n\n// All Employee Leave List\ndateWiseAllLeaveList(){\n  try{\n    this.leaveListAPI.dateWiseAllLeaveList(this.filterDate).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.length === 0){\n          this.leaveListMessage = 'No Data Found';\n          this.companyEmployeeLeaveList = [];\n        } else {\n          this.companyEmployeeLeaveList = data.data;\n          this.showInfoCard = {};\n          for(let i = 0; i < this.companyEmployeeLeaveList.length; i++){\n            this.showInfoCard[this.companyEmployeeLeaveList[i]._id] = true;\n          }\n          this.leaveListMessage = '';\n        }\n      }\n    })\n  } catch(err){\n    console.log(err)\n  }\n}\n\n// Get Individual Employee Leave List\ndateWiseLeaveList(userId,date){\n  try{\n    this.leaveListAPI.dateWiseLeaveList(userId,date).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.length === 0 ){\n          this.leaveListMessage = 'No Data Found';\n          this.companyEmployeeLeaveList = [];\n        } else {\n          this.companyEmployeeLeaveList = data.data;\n          this.showInfoCard = {};\n          for(let i = 0; i < this.companyEmployeeLeaveList.length; i++){\n            this.showInfoCard[this.companyEmployeeLeaveList[i]._id] = true;\n          }\n          this.leaveListMessage = '';\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Functionality Method\nfilterFunctionality(){\n  try{\n    if((document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value === ''){\n      if((document.getElementById(\"leaveListDate\") as HTMLInputElement).value === ''){\n        (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.returnCurrentDate();\n        this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value;\n        this.dateWiseAllLeaveList();\n      }\n      this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value;\n      this.dateWiseAllLeaveList();\n    } else {\n      if((document.getElementById(\"leaveListDate\") as HTMLInputElement).value === ''){\n        let userId = (document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value;\n        (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.returnCurrentDate();\n        this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value;\n        this.dateWiseLeaveList(userId,this.filterDate);\n      }\n      let userId = (document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value;\n      this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value\n      this.dateWiseLeaveList(userId,this.filterDate);\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Reset Button Functionality\nresetFilter(){\n  try{\n    this.filterDate = this.returnCurrentDate();\n    (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.filterDate;\n    (document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value = '';\n    this.dateWiseAllLeaveList();\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Reset Action List\nresetActionList(){\n  (document.getElementById(\"actionList\")as HTMLInputElement).value = '';\n}\n\n// Return Current Date\nreturnCurrentDate(){\n  try{\n    let date = new Date();\n    return(`${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2,\"0\")}-${(date.getDate()).toString().padStart(2,\"0\")}`);\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Action taken by user\n  async actionTaken(value,userId,leaveId){\n  try {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: `You want to change leave status to ${value}`,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then(async (result) => {\n      if (result.value) {\n        if(value !== 'Reject'){\n          var requestDataAlter = {\n            action: value,\n            reason: ''\n          }\n          this.leaveListAPI.leaveActionTaken(requestDataAlter,userId,leaveId).subscribe((data)=>{\n            if(data.status === 'success'){\n              this.filterFunctionality();\n              swalWithBootstrapButtons.fire(\n                'Done',\n                data.message,\n                'success'\n              )\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                data.message\n              )\n            }\n            this.resetActionList();\n          })\n        } else {\n          const { value: text } = await Swal.fire({\n          input: 'textarea',\n          inputPlaceholder: 'Type your reason here...',\n          inputAttributes: {\n            'aria-label': 'Type your reason here'\n          },\n          showCancelButton: false\n        })\n        if(!text){\n          Swal.fire('There is no reason given by you')\n        }\n        if (text) {\n          var requestData = {\n            action: value,\n            reason: text\n          }\n          this.leaveListAPI.leaveActionTaken(requestData,userId,leaveId).subscribe((data)=>{\n            if(data.status === 'success'){\n              this.filterFunctionality();\n              swalWithBootstrapButtons.fire(\n                'Done',\n                data.message,\n                'success'\n              )\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                'Error',\n                data.message,\n                'error'\n              )\n            }\n            this.resetActionList();\n          })\n        }\n        }\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        this.resetActionList();\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          \"You didn't take any action\",\n          'error'\n        )\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Manage Leave Info\nleaveInfo(leaveId){\n  try{\n    this.showInfoCard[`${leaveId}`] = !this.showInfoCard[`${leaveId}`];\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LeaveServicesService } from '../services/leave-services.service';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-earned-leave',\n  templateUrl: './update-earned-leave.component.html',\n  styleUrls: ['./update-earned-leave.component.scss']\n})\nexport class UpdateEarnedLeaveComponent implements OnInit {\nearnedLeaveId : any;\nemployeeId: any;\nupdateEarnedLeaveForm: any;\nemployeeDetails: any;\nexistingUpdateDetails: any;\nearnedLeaveMonths = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\nerrorMsg: boolean;\nsuccessMessage: boolean;\nerrMsg: string;\nsuccessMsg: string;\nstatus = \"Active\";\n\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private util: UtilitiesService,\n    private earnedLeaveUpdateAPI: LeaveServicesService\n    ) { }\n\n  ngOnInit() {\n    this.earnedLeaveId = this.route.snapshot.paramMap.get(\"earnedLeaveId\");\n    this.employeeId = this.route.snapshot.paramMap.get('employeeId');\n    this.employeeList();\n    this.leaveUpdateForm();\n    this.updateLeaveFormDetails();\n  }\n\n  // Get Employee List\nemployeeList(){\n  try{\n    this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeDetails = data.data;\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n  // Existing Earned Leave Details\n  updateLeaveFormDetails(){\n    try{\n     // Get Existing Earned Leave Data\n      this.earnedLeaveUpdateAPI.existingEarnedLeaveDetails(this.earnedLeaveId,this.employeeId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.existingUpdateDetails = data.data;\n\n          // Fill Update Form With existing Values\n          this.updateEarnedLeaveForm = this.fb.group({\n            earnedLeave: new FormGroup({\n              month: new FormControl(this.existingUpdateDetails.month,Validators.required),\n              year: new FormControl(this.existingUpdateDetails.year,Validators.compose([\n                Validators.required,\n                Validators.pattern(/^(19|20)\\d{2}$/)])),\n              leaveCount: new FormControl(this.existingUpdateDetails.leaveCount,Validators.compose([\n                Validators.required,\n                Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)\n              ])),\n              reason: new FormControl(this.existingUpdateDetails.reason)\n            }),\n            employeeId: new FormControl(this.existingUpdateDetails._id, Validators.required)\n          })\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // Update Leave Form\n  leaveUpdateForm(){\n    try{\n      this.updateEarnedLeaveForm = this.fb.group({\n        earnedLeave: new FormGroup({\n          month: new FormControl('',Validators.required),\n          year: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/^(19|20)\\d{2}$/)])),\n          leaveCount: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)\n          ])),\n          reason: new FormControl('')\n        }),\n        employeeId: new FormControl('', Validators.required)\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // Validation Messages\n  earnedLeavevalidationMessage = {\n    'month':[\n      {type:'required', message:'Month is Required'}\n    ],\n    'year':[\n      {type:'required', message:'Year is Required'},\n      {type:'pattern', message:'Value is not acceptable'}\n    ],\n    'leaveCount':[\n      {type:'required', message:'Earned Balance is Required'},\n      {type:'pattern', message:'Value is not acceptable'}\n    ],\n    'employeeId':[\n      {type:'required', message:'Employee Name is Required'}\n    ]\n  }\n\n\n// Submit Update Data\n  updateEarnedLeave(){\n    try{\n      this.earnedLeaveUpdateAPI.updateEarnedLeave(this.updateEarnedLeaveForm.value,this.earnedLeaveId,this.employeeId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.successMessage = true ;\n        this.errorMsg = false ;\n        this.successMsg = data.message;\n        setTimeout(()=> {\n          this.handleErrors();\n          this.router.navigateByUrl(\"/pages/leave-management/list-earned-leave\");\n        },2000)\n      } else {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrors();\n        }, 3000);\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n\n}\n","<div class=\"card card-user\">\n    <!-- <ngx-spinner\n    bdColor=\"rgba(51,51,51,0.8)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"ball-scale-ripple-multiple\"\n    >\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n    </ngx-spinner> -->\n<div class=\"card-header\">\n    <h2 class=\"card-title\" style=\"text-align: center;\">Update Earned Leave</h2>\n</div>\n<div class=\"card-body\">\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n        </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n        </p>\n    </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateEarnedLeaveForm\" (ngSubmit)=\"updateEarnedLeave()\" novalidate>\n        <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Employee Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"employeeId\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Employee----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of employeeDetails\" value=\"{{employee._id}}\">\n                           {{employee.name}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.employeeId\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('employeeId').hasError(validation.type) && (updateEarnedLeaveForm.get('employeeId').dirty || updateEarnedLeaveForm.get('employeeId').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" [formGroup]=\"updateEarnedLeaveForm.get('earnedLeave')\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Month:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"month\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Month----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let month of earnedLeaveMonths\" value=\"{{month}}\">\n                           {{month}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.month\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('earnedLeave.month').hasError(validation.type) && (updateEarnedLeaveForm.get('earnedLeave.month').dirty || updateEarnedLeaveForm.get('earnedLeave.month').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Year:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"text\" id=\"inputPhone\" placeholder=\"Enter Year\"\n                    formControlName=\"year\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.year\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('earnedLeave.year').hasError(validation.type) && (updateEarnedLeaveForm.get('earnedLeave.year').dirty || updateEarnedLeaveForm.get('earnedLeave.year').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Earned Balance:&nbsp;(in days)&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Earned Leave balance \"\n                    formControlName=\"leaveCount\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.leaveCount\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('earnedLeave.leaveCount').hasError(validation.type) && (updateEarnedLeaveForm.get('earnedLeave.leaveCount').dirty || updateEarnedLeaveForm.get('earnedLeave.leaveCount').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Reason:</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Reason\"\n                        formControlName=\"reason\">\n                </div>\n        </div>\n\n    </div>\n        <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateEarnedLeaveForm.invalid\">Submit</button>\n                <button type=\"button\" class=\"btn btn-danger\" routerLink=\"/pages/leave-management/list-earned-leave\">Cancel</button>\n            </div>\n        </div>\n    </form>\n</div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { LeaveApiService } from '../../../leave-types/service-leave/leave-api.service';\nimport { LeaveServicesService } from '../../manage-earned-leave/services/leave-services.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mark-absent',\n  templateUrl: './mark-absent.component.html',\n  styleUrls: ['./mark-absent.component.scss']\n})\nexport class MarkAbsentComponent implements OnInit {\n\n  addEarnedLeaveForm: any;\n  employeeDetails: any;\n  errorMsg: boolean;\n  successMessage: boolean;\n  errMsg: string;\n  successMsg: string;\n  formToLeaveFor = ['First Half','Second Half','Full Day'];\n  addEmployeeAbsentForm: any;\n  leaveListData: any;\n  showCard:any = {};\n  employeeList: any;\n  employeeTlList: any;\n  showTlOption = false;\n  status = 'Active';\n\n\n  constructor(private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private api: LeaveApiService,\n    private router: Router,\n    private util: UtilitiesService,\n    private ngZone: NgZone) { }\n\n  ngOnInit() {\n    this.manangeEmployeeLeave();\n    this.leaveList();\n    this.getEmployeeList();\n  }\n\n  manangeEmployeeLeave(){\n    try{\n      this.addEmployeeAbsentForm = this.fb.group({\n          userId: new FormControl('',Validators.required),\n          reason: new FormControl('',Validators.required),\n          leaveTypeId: new FormControl('',Validators.required),\n          fromDate: new FormControl('',Validators.required),\n          toDate: new FormControl('',Validators.required),\n          fromLeaveFor: new FormControl('',Validators.required),\n          toLeaveFor: new FormControl('',Validators.required),\n          status: new FormControl('Unsanctioned',Validators.required),\n          requestToUserId: new FormControl('', Validators.required)\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  DateCheck(){\n\n    var StartDate= (document.getElementById('txtStartDate')as HTMLInputElement).value;\n    var EndDate= (document.getElementById('txtEndDate')as HTMLInputElement).value;\n    var eDate = new Date(EndDate);\n    var sDate = new Date(StartDate);\n    if(StartDate!= '' && StartDate!= '' && sDate> eDate)\n      {\n      alert(\"Please ensure that the End Date is after than the Start Date.\");\n      (document.getElementById('txtEndDate')as HTMLInputElement).value = \"\";\n      }\n  }\n  absentFieldValidationMessage = {\n    'userId':[\n      {type:'required', message:'Employee Name is Required'}\n    ],\n    'reason':[\n      {type:'required', message:'Leave Reason is Required'}\n    ],\n    'leaveTypeId':[\n      {type:'required', message:'Leave Type is Required'}\n    ],\n    'fromDate':[\n      {type:'required', message:'Start Date is Required'},\n    ],\n    'toDate':[\n      {type:'required', message:'To Date is Required'}\n    ],\n    'fromLeaveFor':[\n      {type:'required', message:'From Leave is Required'},\n    ],\n    'toLeaveFor':[\n      {type:'required', message:'To Leave is Required'}\n    ],\n    'requestToUserId':[\n      {type:'required', message:'TL/Manager Name is Required'}\n    ]\n  }\n\n  leaveList() {\n    try{\n      this.api.getListData().subscribe(data => {\n        if (data.status === 'success') {\n          this.leaveListData = data.leaveTypes;\n\n          if(data.leaveTypes[0].length == 0){\n            // this.route.navigateByUrl(\"/pages/leave-types/add-leave-types\");\n          }\n          else{\n            const len = Object.keys(this.leaveListData).length;\n\n            for (var i = 0; i < len; i++) {\n              this.showCard[this.leaveListData[i]._id] = true;\n            }\n          }\n\n        }\n      })\n    }catch(err){\n      console.log(err.message);\n    }\n\n  }\n\n// Get Employee List\ngetEmployeeList(){\n  try{\n    this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeList = data.data;\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Get Employee TL/Manager\ngetEmployeeTL(employeeId){\n  try{\n    this.employeeListAPI.employeeTlList(employeeId).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeTlList = data.data.parentUsersIds;\n        this.showTlOption = true;\n      }\n    })\n  }catch(err){\n    console.log(err);\n\n  }\n}\n\n// Mark Absent Form\nmarkEmployeeAbsent(){\n  try{\n    this.api.markEmployeeAbsent(this.addEmployeeAbsentForm.value,this.addEmployeeAbsentForm.get('userId').value).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.successMessage = true;\n        this.successMsg = data.message;\n        this.errorMsg = false;\n        setTimeout(()=>{\n          this.handleErrors();\n          this.ngZone.run(()=> this.router.navigateByUrl('/pages/leave-management/list-leave'));\n        },2000)\n      } else if(data.status === 'error'){\n        this.successMessage = false;\n        this.errMsg = data.message;\n        this.errorMsg = true;\n        setTimeout(()=>{\n          this.handleErrors();\n        },3000)\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Handle Errors\nhandleErrors(){\n  this.successMessage = false;\n  this.successMsg = '';\n  this.errorMsg = false;\n  this.errMsg = '';\n}\n\n}\n","<div class=\"card card-user\">\n    <!-- <ngx-spinner\n    bdColor=\"rgba(51,51,51,0.8)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"ball-scale-ripple-multiple\"\n    >\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n    </ngx-spinner> -->\n<div class=\"card-header\">\n    <h2 class=\"card-title\" style=\"text-align: center;\">Employee Absent Details</h2>\n</div>\n<div class=\"card-body\">\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n        </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n        </p>\n    </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addEmployeeAbsentForm\" (ngSubmit)=\"markEmployeeAbsent()\" novalidate >\n     <div class=\"row\" >\n            <div class=\"form-group col-md-6\">\n                    <label class=\"col-sm-6 control-label\"><b>Employee Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"absentLeave\" formControlName=\"userId\" (change)=\"getEmployeeTL($event.target.value)\">\n                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee</option>\n                            <option class=\"dropdown-item\" *ngFor=\"let employee of employeeList\"  value=\"{{employee._id}}\">\n                               {{employee.name}}\n                            </option>\n                         </select>\n                         <div *ngFor=\"let validation of absentFieldValidationMessage.userId\">\n                                <div style=\"color: red;margin-left: 1%;\"\n                                    *ngIf=\"addEmployeeAbsentForm.get('userId').hasError(validation.type) && (addEmployeeAbsentForm.get('userId').dirty || addEmployeeAbsentForm.get('userId').touched)\"\n                                    style=\"color: red;margin-left: 1%;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                </div>\n                <div class=\"form-group col-md-6\" *ngIf=\"showTlOption\">\n                        <label class=\"col-sm-6 control-label\"><b>TL/Manager Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" id=\"absentLeave\" formControlName=\"requestToUserId\">\n                                <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee</option>\n                                <option class=\"dropdown-item\" *ngFor=\"let employeeTL of employeeTlList\"  value=\"{{employeeTL._id}}\">\n                                   {{employeeTL.displayName}}\n                                </option>\n                             </select>\n                             <div *ngFor=\"let validation of absentFieldValidationMessage.requestToUserId\">\n                                    <div style=\"color: red;margin-left: 1%;\"\n                                        *ngIf=\"addEmployeeAbsentForm.get('requestToUserId').hasError(validation.type) && (addEmployeeAbsentForm.get('requestToUserId').dirty || addEmployeeAbsentForm.get('requestToUserId').touched)\"\n                                        style=\"color: red;margin-left: 1%;\">\n                                        {{ validation.message }}\n                                    </div>\n                                </div>\n                    </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Reason:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" id=\"leaveReason\" placeholder=\"Enter Leave Reason\"\n                        formControlName=\"reason\">\n                    <div *ngFor=\"let validation of absentFieldValidationMessage.reason\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"addEmployeeAbsentForm.get('reason').hasError(validation.type) && (addEmployeeAbsentForm.get('reason').dirty || addEmployeeAbsentForm.get('reason').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n         <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Type:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"absentLeave\" formControlName=\"leaveTypeId\">\n                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Enter Leave Type</option>\n                            <option class=\"dropdown-item\" *ngFor=\"let leave of leaveListData\"  value=\"{{leave.leaveTypeName}}\">\n                               {{leave.leaveTypeName}}\n                            </option>\n                         </select>\n                <div *ngFor=\"let validation of absentFieldValidationMessage.leaveTypeId\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEmployeeAbsentForm.get('leaveTypeId').hasError(validation.type) && (addEmployeeAbsentForm.get('leaveTypeId').dirty || addEmployeeAbsentForm.get('leaveTypeId').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>From Date:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"date\" id=\"txtStartDate\" placeholder=\"Enter From Date\" (change)=\"DateCheck()\"\n                    formControlName=\"fromDate\">\n                <div *ngFor=\"let validation of absentFieldValidationMessage.fromDate\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEmployeeAbsentForm.get('fromDate').hasError(validation.type) && (addEmployeeAbsentForm.get('fromDate').dirty || addEmployeeAbsentForm.get('fromDate').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>To Date:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"date\" id=\"txtEndDate\" placeholder=\"Enter To Date\" (change)=\"DateCheck()\"\n                        formControlName=\"toDate\">\n                    <div *ngFor=\"let validation of absentFieldValidationMessage.toDate\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"addEmployeeAbsentForm.get('toDate').hasError(validation.type) && (addEmployeeAbsentForm.get('toDate').dirty || addEmployeeAbsentForm.get('toDate').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>From Leave For:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"fromLeaveFor\">\n                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Enter From Leave For</option>\n                            <option class=\"dropdown-item\" *ngFor=\"let leave of formToLeaveFor\"  value=\"{{leave}}\">\n                               {{leave}}\n                            </option>\n                         </select>\n                    <div *ngFor=\"let validation of absentFieldValidationMessage.fromLeaveFor\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"addEmployeeAbsentForm.get('fromLeaveFor').hasError(validation.type) && (addEmployeeAbsentForm.get('fromLeaveFor').dirty || addEmployeeAbsentForm.get('fromLeaveFor').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                    <label class=\"col-sm-6 control-label\"><b>To Leave For:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"toLeaveFor\">\n                                <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Enter To Leave For</option>\n                                <option class=\"dropdown-item\" *ngFor=\"let leave of formToLeaveFor\" value=\"{{leave}}\">\n                                {{leave}}\n                                </option>\n                             </select>\n                        <div *ngFor=\"let validation of absentFieldValidationMessage.toLeaveFor\">\n                            <div style=\"color: red;margin-left: 1%;\"\n                                *ngIf=\"addEmployeeAbsentForm.get('toLeaveFor').hasError(validation.type) && (addEmployeeAbsentForm.get('toLeaveFor').dirty || addEmployeeAbsentForm.get('toLeaveFor').touched)\"\n                                style=\"color: red;margin-left: 1%;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n          </div>\n          <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Leave Status:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\"\n                      formControlName=\"status\" disabled>\n                </div>\n            </div>\n     </div>\n        <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addEmployeeAbsentForm.invalid\">Submit</button>\n                <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-leave\">Cancel</button>\n\n            </div>\n        </div>\n    </form>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LeaveServicesService } from '../services/leave-services.service';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-list-earned-leave',\n  templateUrl: './list-earned-leave.component.html',\n  styleUrls: ['./list-earned-leave.component.scss']\n})\nexport class ListEarnedLeaveComponent implements OnInit {\n  earnedLeaveList: any;\n  companyEmployeelist: any;\n  earnedLeaveMonths = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  earnedLeaveYearMsg = '';\n  earnedLeaveDataMsg = '';\n  showHistoryCards = {};\n  showCardEmployeeId: any;\n  earnedLeaveHistory: any;\n  deductionLeaveHistory: any;\n  historyData: any;\n  status = \"Active\";\n  permissionInfo: any;\n\n  constructor(private earnedLeaveListAPI : LeaveServicesService,\n    private employeeListAPI: EmployeeService,\n    private util: UtilitiesService\n    ) { }\n\n  ngOnInit() {\n    this.employeeList();\n    this.leaveListEmployee();\n    this.permissionInfo = this.util.permissionRoleInfo\n  }\n\n  // Employee List\n  employeeList(){\n    try{\n      this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=> {\n        if(data.status === 'success'){\n          this.companyEmployeelist = data.data;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // List All Earned Leave\n  leaveListEmployee(){\n    try{\n      let currentDate = new Date();\n      let year = currentDate.getFullYear().toString();\n      let month = currentDate.toString().substring(4,8);\n      this.earnedLeaveListAPI.listAllEarnedLeave(year,month).subscribe((data)=> {\n        if(data.status === 'success'){\n          (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n          (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n          if(data.data.length > 0){\n            this.earnedLeaveList = data.data;\n            this.earnedLeaveDataMsg = '';\n            for(let i =0; i<this.earnedLeaveList.length; i++){\n              this.showHistoryCards[this.earnedLeaveList[i]._id] = true;\n            }\n\n          } else if(data.data.length === 0){\n            this.earnedLeaveList = [];\n            this.earnedLeaveDataMsg = 'No Data Found';\n          }\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n// Year Validation\nyearValidation(){\n  try{\n    let yearValue = (document.getElementById('earnedLeaveYear') as HTMLInputElement).value;\n    let yearRegularExpression = /^(19|20)\\d{2}$/;\n    let result = yearValue.match(yearRegularExpression);\n    if(yearValue.length === 0 && result === null){\n      this.earnedLeaveYearMsg = '';\n    } else if(result === null){\n      this.earnedLeaveYearMsg = \"Year Value is not acceptable\";\n    } else {\n      this.earnedLeaveYearMsg = '';\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Functionality\nfilterFunctionality(){\n  try{\n    let currentDate = new Date();\n    let year = (document.getElementById('earnedLeaveYear') as HTMLInputElement).value;\n    let month = (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value;\n    let employeeId = (document.getElementById('earendLeaveEmployee') as HTMLInputElement).value;\n\n    if(year.length === 0 && month.length === 0 && employeeId.length === 0 ){\n      // Do Nothing\n    } else if(year.length !== 0  && employeeId.length === 0 || month.length !== 0 && employeeId.length === 0){\n      if(year.length === 0){\n        year = currentDate.getFullYear().toString();\n        (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n      } else if (month.length === 0 ){\n        month = currentDate.toString().substring(4,8);\n        (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n      }\n\n      this.earnedLeaveDetails(year,month);\n\n    } else if(year.length === 0 && employeeId.length !== 0 || month.length === 0 && employeeId.length !== 0){\n      if(year.length === 0){\n        year = currentDate.getFullYear().toString();\n        (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n      } else if(month.length === 0){\n        month = currentDate.toString().substring(4,8);\n        (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n      }\n      this.filterEarnedLeaveDetails(employeeId,year,month);\n    } else {\n      this.filterEarnedLeaveDetails(employeeId,year,month);\n    }\n\n  }catch(err){\n    console.log(err);\n  }\n\n}\n\n// Call Earned Leave List API\nearnedLeaveDetails(year,month){\n  try{\n    this.earnedLeaveListAPI.listAllEarnedLeave(year,month).subscribe((data)=> {\n      if(data.status === 'success'){\n        if(data.data.length > 0){\n          this.earnedLeaveList = data.data;\n          this.earnedLeaveDataMsg = '';\n        } else if(data.data.length === 0){\n          this.earnedLeaveList = [];\n          this.earnedLeaveDataMsg = 'No Data Found';\n        }\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Earnecd Leave according to employee Id\n\nfilterEarnedLeaveDetails(employeeId,year,month){\n  try{\n    this.earnedLeaveListAPI.filterEarnedLeaveDetails(employeeId,year,month).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.length === 0 ){\n          this.earnedLeaveList = [];\n          this.earnedLeaveDataMsg = 'No Data Found';\n        } else if(data.data.length > 0){\n          this.earnedLeaveList = data.data;\n          this.earnedLeaveDataMsg = '';\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Earned Leave History\nfetchHistory(employeeId){\n  try{\n\n    let year = (document.getElementById('earnedLeaveYear') as HTMLInputElement).value;\n    let month = (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value;\n\n    this.earnedLeaveListAPI.fetchHistory(employeeId,year,month).subscribe((data)=>{\n          if(data.status === 'success'){\n            this.earnedLeaveHistory = data.data.earnedLeave;\n            this.deductionLeaveHistory = data.data.deductLeave;\n          }\n        })\n\n    this.showHistoryCards[`${employeeId}`] = !this.showHistoryCards[`${employeeId}`];\n\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Reset The Filter\nresetFunctionality(){\n  try{\n    let currentDate = new Date();\n    let year = currentDate.getFullYear().toString();\n    (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n    (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n    (document.getElementById('earendLeaveEmployee') as HTMLInputElement).value = '';\n    this.filterFunctionality();\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Delete Earned Leave\ndeleteEarnedLeave(employeeId,year,month,leaveCount){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: 'btn btn-success',\n      cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true,\n    allowOutsideClick: false,\n  }).then((result) => {\n    if (result.value) {\n      this.earnedLeaveListAPI.deleteEarnedLeave(employeeId,year,month,leaveCount).subscribe((data)=>{\n        if(data.status === \"success\"){\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.filterFunctionality();\n        }\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your earned leave data is safe',\n        'error'\n      )\n    }\n  })\n}\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 style=\"text-align: center;\">Earned Leave List</h2>\n    </div>\n    <div class=\"card-body\">\n\n\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-4 control-label\"><b>Active Employees:</b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"earendLeaveEmployee\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee\n                        </option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of companyEmployeelist\"\n                            value=\"{{employee._id}}\">\n                            {{employee.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Year:</b></label>\n                    <input class=\"form-control\" type=\"text\" id=\"earnedLeaveYear\" (input)=\"yearValidation()\"\n                        placeholder=\"Enter Year\">\n                    <div>\n                        <p style=\"color:red;\">{{earnedLeaveYearMsg}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Month:&nbsp;<span\n                                style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"earnedLeaveMonth\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Month\n                        </option>\n                        <option class=\"dropdown-item\" *ngFor=\"let month of earnedLeaveMonths\" value=\"{{month}}\">\n                            {{month}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary\" [disabled]=\"earnedLeaveYearMsg\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp; Filter</button>\n                </div>\n            </div>\n        </div>\n\n            <div class=\"col-lg-12\">\n                <div class=\"form-group\" style=\"float: right;\">\n                        <button [disabled]=\"permissionInfo.search('Create EarnedLeave') === -1\" class=\"btn btn-primary\" routerLink=\"/pages/leave-management/add-earned-leave\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add  Earned Leave</button>\n                </div>\n            </div>\n\n\n        \n    </div>\n    <div class=\"card-body\">\n        <div class=\"card\" style=\"background-color:whitesmoke;\">\n            <div class=\"panel-body\">\n                <ul class=\"list-group\">\n                    <div class=\"card-body\">\n                        <table class=\"table\" style=\"text-align: center;\">\n                            <thead class=\" text-primary\">\n                                <tr>\n                                    <th>Employee Name </th>\n                                    <th>Month </th>\n                                    <th>Year</th>\n                                    <th>Earned Balance</th>\n                                    <th>Reason</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody *ngFor=\"let earnedLeave of earnedLeaveList\">\n                                <tr>\n                                    <td> {{earnedLeave.name}} </td>\n                                    <td> {{earnedLeave.month}} </td>\n                                    <td> {{earnedLeave.year}} </td>\n                                    <td> {{earnedLeave.leaveCount}}</td>\n                                    <td> {{earnedLeave.reason}}</td>\n                                    <td>\n                                        <button [disabled]=\"permissionInfo.search('Edit EarnedLeave') === -1\"\n                                            itle=\"Update\"\n                                            routerLink=\"/pages/leave-management/update-earned-leave/{{ earnedLeave.earnedLeaveId }}/{{ earnedLeave._id }}\"\n                                            class=\"btn btn-primary\" style=\"color: white;\"><i\n                                                class=\"fa fa-pencil-square-o\"></i>\n                                        </button>&nbsp;\n                                        <button title=\"History\" (click)='fetchHistory(earnedLeave._id)'\n                                            class=\"btn btn-info\" style=\"color: white;\"><i class=\"fa fa-history\"></i>\n                                        </button>&nbsp;\n                                        <button class=\"btn btn-danger\"\n                                            (click)=\"deleteEarnedLeave(earnedLeave._id,earnedLeave.year,earnedLeave.month,earnedLeave.leaveCount)\"><i\n                                                class=\"fa fa-trash\"></i></button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <div class=\"card\" style=\"background-color:rgb(178, 218, 208);\"\n                                            [hidden]=\"showHistoryCards[earnedLeave._id]\">\n                                            <h4 style=\"text-align: center;\">Earned Leave History</h4>\n                                            <table class=\"table\" *ngFor='let earnedLeaveHistroy of earnedLeaveHistory'>\n                                                <tr>\n                                                    <th>Reason:</th>\n                                                    <td>{{ earnedLeaveHistroy.reason }}</td>\n                                                    <th>Earned Leave Balance:</th>\n                                                    <td>{{ earnedLeaveHistroy.leaveCount }}</td>\n                                                </tr>\n                                                <tr>\n                                                    <th>Earned Date:</th>\n                                                    <td>{{ earnedLeaveHistroy.metaData.createdAt | date:'fullDate' }}\n                                                        {{ earnedLeaveHistroy.metaData.createdAt | date:'shortTime' }}\n                                                    </td>\n                                                    <th></th>\n                                                    <td></td>\n                                                </tr>\n                                            </table>\n                                            <h4 style=\"text-align: center;\">Earned Leave Deduction History</h4>\n                                            <table class=\"table\"\n                                                *ngFor='let deductionLeaveHistory of deductionLeaveHistory'>\n                                                <tr>\n                                                    <th>Reason:</th>\n                                                    <td>{{ deductionLeaveHistory.reason }}</td>\n                                                    <th>Earned Leave Balance:</th>\n                                                    <td>{{ deductionLeaveHistory.leaveCount }}</td>\n                                                </tr>\n                                                <tr>\n                                                    <th>Deducted Date:</th>\n                                                    <td>{{ deductionLeaveHistory.metaData.createdAt | date:'fullDate' }}\n                                                        {{ deductionLeaveHistory.metaData.createdAt | date:'shortTime' }}\n                                                    </td>\n                                                    <th></th>\n                                                    <td></td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"earnedLeaveDataMsg.length != 0\">\n        <h3 style=\"text-align: center;\">{{ earnedLeaveDataMsg }}</h3>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LeaveAction } from 'src/app/auth/leaveAction';\nimport { dataUri } from '@rxweb/reactive-form-validators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n /** Here we provide daynamic environment value from environment */\n endpoint: string = environment.apiBaseUrl;\n headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n try {\n   let errorMessage = '';\n   /** Handle client side error */\n   if (error.error instanceof ErrorEvent) {\n     errorMessage = error.error.message;\n   }\n   /** Handle server side error */\n   else {\n     errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n   }\n   console.log(errorMessage);\n   return throwError(errorMessage);\n }\n catch (err) {\n   console.log(err.message);\n }\n}\n\n// List All Employees Leave in an individual Company\n\ndateWiseAllLeaveList(date): Observable<any>{\n  try{\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/all-employee/particular-date-leaves/${companyId}/${date}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Leave Action\nleaveActionTaken(data: LeaveAction,userId,leaveId): Observable<any>{\n  try {\n    let apiURL = `${this.endpoint}/user/activity-leave/${userId}/${leaveId}`;\n    return this.http.post(apiURL, data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Get Individaul Employee Leave List\ndateWiseLeaveList(userId,date): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/particular-date-leaves/${userId}/${date}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddEarnedLeaveComponent } from './manage-earned-leave/add-earned-leave/add-earned-leave.component';\nimport { RouterModule } from '@angular/router';\nimport { LeaveManagementRoutingModule } from './leave-management-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ListEarnedLeaveComponent } from './manage-earned-leave/list-earned-leave/list-earned-leave.component';\nimport { UpdateEarnedLeaveComponent } from './manage-earned-leave/update-earned-leave/update-earned-leave.component';\nimport { ListLeaveComponent } from './manage-leave-status/list-leave/list-leave.component';\nimport { MarkAbsentComponent } from './manage-leave-status/mark-absent/mark-absent.component';\n\n@NgModule({\n  declarations: [ AddEarnedLeaveComponent, ListEarnedLeaveComponent, UpdateEarnedLeaveComponent, ListLeaveComponent, MarkAbsentComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    LeaveManagementRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxSpinnerModule\n  ]\n})\nexport class LeaveManagementModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { LeaveManagementComponent } from './leave-management.component';\nimport { AddEarnedLeaveComponent } from './manage-earned-leave/add-earned-leave/add-earned-leave.component';\nimport { ListEarnedLeaveComponent } from './manage-earned-leave/list-earned-leave/list-earned-leave.component';\nimport { UpdateEarnedLeaveComponent } from './manage-earned-leave/update-earned-leave/update-earned-leave.component';\nimport { ListLeaveComponent } from './manage-leave-status/list-leave/list-leave.component';\nimport { MarkAbsentComponent } from './manage-leave-status/mark-absent/mark-absent.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : LeaveManagementComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n       path: 'list-earned-leave',\n      component: ListEarnedLeaveComponent,\n      },\n      {\n        path: 'add-earned-leave',\n       component: AddEarnedLeaveComponent,\n       },\n       {\n        path: 'update-earned-leave/:earnedLeaveId/:employeeId',\n       component: UpdateEarnedLeaveComponent,\n       },\n       {\n        path: 'list-leave',\n       component: ListLeaveComponent,\n       },\n       {\n        path: 'mark-absent',\n       component: MarkAbsentComponent,\n       },\n      {\n        path:'',\n        redirectTo :'list-earned-leave',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class LeaveManagementRoutingModule { }\n"]}