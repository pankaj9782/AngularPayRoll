{"version":3,"sources":["./src/app/pages/roles/roles-service/roles.service.ts","./src/app/pages/job category/jobCategory-service/jobCategory-api.service.ts","./src/app/pages/document-types/document-services/document.services.ts","./src/app/pages/skill-category/skillCategory-service/skillCategory-api.service.ts","./src/app/pages/leave-types/service-leave/leave-api.service.ts","./src/app/pages/graderule/graderule-service/graderule-api.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesService {\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n  //Method for get rules list for create, edit and delete\n  getRolesListData(): Observable<any>{\n    try {\n      const apiUrl = `${this.endpoint}/user/role-list/`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method to Add Role\n  addRole(data): Observable<any> {\n    try {\n      const userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/add-role/${userId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n\n    }\n  }\n\n  //Method for get all role list\n  listAllRole(): Observable<any>{\n    try {\n      let userId = localStorage.getItem('token');\n      const apiUrl = `${this.endpoint}/user/all-role-list/${userId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for get individaul role list\n  listIndividualRole(roleId): Observable<any>{\n    try {\n      const apiUrl = `${this.endpoint}/user/individaul-role-list/${roleId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method to Update Role\n  updateRole(data,roleId): Observable<any> {\n    try {\n      const userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/update-role/${userId}/${roleId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n\n    }\n  }\n\n  //Method for get individaul permission list\n  listIndividualPermissions(roleId): Observable<any>{\n    try {\n      const apiUrl = `${this.endpoint}/user/individaul-permissions-list/${roleId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  // Update Role Permissions\n  updateRolePermissions(data,roleId): Observable<any>{\n    try {\n      const userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/update-role-permission/${userId}/${roleId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Delete Permission\n  deletePermission(roleId,permissionId): Observable<any>{\n    try {\n      let apiURL = `${this.endpoint}/user/delete-permission/${permissionId}/${roleId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { JOB } from  '../../../auth/job'; \nimport { UpdateJob } from '../../../auth/UpdateJob';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class JobCategoryApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get Job Category list */\n  getJobCategoryData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-job-categories/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  jobCategoryDetails(jobCategoryId:string): Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/company/job-category-details/${jobCategoryId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n/**Create Method for add Job Category  */\n  addJobCategoy(data:JOB): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      console.log(companyId)\n      let apiURL = `${this.endpoint}/company/add-job-category/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update Job Category   */\n  updateJobCategory(data:UpdateJob, jobCategoryId:string,):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/update-job-category/${companyId}/${jobCategoryId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) Job Category*/\n  removeData(jobCategoryId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-job-category/${jobCategoryId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { Document } from '../../../auth/document'; \nimport { DocUpdate } from '../../../auth/docUpdate';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DocumentServices {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get document List  */\n    documentData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-all-document-types/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n    }\n\n// Individual document type details\ndocumentTypeDetails(documentTypeId: string): Observable<any> {\n  try {\n    let apiURL = `${this.endpoint}/company/document-type-details/${documentTypeId}`;\n     return this.http.get(apiURL).pipe(\n       catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n  }\n\n  /** Method for get data from company for document */\n    addDocumentSubmit(data:Document, companyId:String): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/add-document-types/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n    }\n\n  /** Method for Update document type  */\n    updateDocument(data:DocUpdate, companyId: string, documentTypeId:string,):Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/company/update-document-types/${companyId}/${documentTypeId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) document type */\n  removeDocument(documentTypeId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-document-type/${documentTypeId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { SkillName } from  '../../../auth/skillName'; \nimport { UpdateSkill } from '../../../auth/UpdateSkill';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class skillCategoryApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get skill Category list */\n  skillCategoryData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/category/list-skill-category/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  // List Individual category list\n  skillCategoryDetails(skillCategoryId:string){\n    try{\n      let apiURL = `${this.endpoint}/category/skill-category-details/${skillCategoryId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      ) \n    } catch(err){\n      console.log(err);\n    }\n  }\n\n/**Create Method for add Job Category  */\n  addSkillCategoy(data:SkillName): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      const userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/category/add-skill-category/${companyId}/${userId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update skill Category   */\n  updateSkillCategory(data:UpdateSkill, skillCategoryId:string):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      const userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/category/update-skill-category/${skillCategoryId}/${companyId}/${userId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) skill Category*/\n  removeData(skillCategoryId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/category/delete-skill-category/${skillCategoryId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { Leave } from '../../../auth/leave';\nimport { Update } from '../../../auth/updateLeave';\nimport { environment } from '../../../../environments/environment';\nimport { MarkAbsentComponent } from '../../leave-management/manage-leave-status/mark-absent/mark-absent.component';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LeaveApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get Company List  */\n  getListData(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-leave-types/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for get data from company for leave */\n  leaveDataSubmit(data:Leave): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/add-leave-type/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update leave type  */\n  updateLeaveType(data:Update, leaveTypeId:string,):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/update-leave-type/${companyId}/${leaveTypeId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n   /** Getting Individual List Leave Type  */\n   leaveTypeDetails(leaveTypeId:string,):Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/company/leave-type-details/${leaveTypeId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) Leave type */\n  removeData(leaveTypeId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-leave-type/${leaveTypeId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n  // Mark Employee Absent\n  markEmployeeAbsent(data: MarkAbsentComponent,userId): Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/employee/mark-leave-absent-or-sandwich/${userId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { gradeuRule } from  '../../../auth/gradeRule';\nimport { UpdateGraderuleComponent } from '../update-graderule/update-graderule.component';\nimport {updateGadeRuleData } from '../../../auth/updateGadeRuleData';\nimport { gradeuRulePaymentHead } from '../../../auth/gradeuRulePaymentHead';\nimport { updatePaymentHead } from 'src/app/auth/updatePaymentHead';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GraderuleApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\ngetGradeRule(data:gradeuRule, percentOfValue):Observable<any>{\n  try{\n\n    if(percentOfValue === 'basicSalary'){\n      data.paymentHead.fixedPercentOfName = percentOfValue;\n      data.paymentHead.fixedPercentOfId = '';\n    } else {\n      data.paymentHead.fixedPercentOfId = percentOfValue;\n      data.paymentHead.fixedPercentOfName = '';\n    }\n\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/add-grade-rule/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\nupdateGadeRule(data:updateGadeRuleData,gradeRuleId:string):Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/update-grade-rule/${companyId}/${gradeRuleId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Update Payment Heads\nupdatePaymentHeads(data,paymentHeadsId:string,gradeRuleId:string,percentOfValue,percent):Observable<any>{\n  try{\n    if(percent){\n      if(percentOfValue === 'basicSalary'){\n        data.fixedPercentOfName = percentOfValue;\n      } else {\n        data.fixedPercentOfId = percentOfValue;\n      }\n    }\n    let apiURL = `${this.endpoint}/company/update-grade-rule-payment-head/${paymentHeadsId}/${gradeRuleId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n/**get payment heads data  */\ngetPaymentHeadData():Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/list-payment-heads/${companyId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\ngetGradeRuleList():Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/list-all-grade-rule/${companyId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\nexistingData(gradeRuleId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/grade-rule-list/${gradeRuleId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\nremoveData(gradeRuleId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/delete-grade-rule/${gradeRuleId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n// Manage Payment heads start here\n\ncompanyPaymentHeads(paymentHeadId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/payment-head-details/${paymentHeadId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// addgrad rule payment heads\naddGradules(data,gradeRuleId:string,percentOfValue):Observable<any>{\n  try{\n    if(percentOfValue === 'basicSalary'){\n      data.paymentHead.fixedPercentOfName = percentOfValue;\n    } else {\n      data.paymentHead.fixedPercentOfId = percentOfValue;\n    }\n    console.log(data);\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/company/add-grade-rule-payment-head/${gradeRuleId}/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    );\n  }catch(err){\n    console.log(err);\n  }\n}\n\nremoveGradeData(paymentHeadsId:string,gradeRuleId:string):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/delete-grade-rule-payment-head/${paymentHeadsId}/${gradeRuleId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n// Get Fixed Payment Heads\nfixedPaymentHeads(gradeRuleId):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/fixed-payment-heads/${gradeRuleId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Get Filter payment heads\nfilterPaymentHeads(gradeRuleId): Observable<any>{\n  try {\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/company/filter-payment-heads/${companyId}/${gradeRuleId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}\n"],"sourceRoot":"webpack:///"}