{"version":3,"sources":["./src/app/pages/branches/branch-service/branch.service.ts","./src/app/pages/branches/department/add-department/add-department.component.ts","./src/app/pages/branches/department/add-department/add-department.component.html","./src/app/pages/branches/show-branches/show-branches.component.ts","./src/app/pages/branches/show-branches/show-branches.component.html","./src/app/pages/branches/branches-routing.module.ts","./src/app/pages/branches/branches.module.ts","./src/app/pages/branches/department/update-department/update-department.component.ts","./src/app/pages/branches/department/update-department/update-department.component.html","./src/app/pages/branches/branches.component.ts","./src/app/pages/branches/branches.component.html","./src/app/pages/branches/add-branches/add-branches.component.ts","./src/app/pages/branches/add-branches/add-branches.component.html","./src/app/pages/branches/update-branch-data/update-branch-data.component.ts","./src/app/pages/branches/update-branch-data/update-branch-data.component.html","./src/app/pages/branches/department/show-departments/show-departments.component.ts","./src/app/pages/branches/department/show-departments/show-departments.component.html"],"names":[],"mappings":"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","file":"branches-branches-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BranchData } from 'src/app/auth/branch';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { Department } from 'src/app/auth/department';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchService {\n\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  //Method For submit branch form data to the server\n  submitBranchFormData(data: BranchData, companyParentId: String,countryName,stateName): Observable<any> {\n    try {\n      data.countryName = countryName;\n      data.countryState = stateName;\n      let apiUrl = `${this.endpoint}/company/add-branch/${companyParentId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for get branch list Data\n  getBranchListData(): Observable<any> {\n    try {\n      const companyParentId = sessionStorage.getItem(\"companyId\");\n      let apiUrl = `${this.endpoint}/company/branch-list/${companyParentId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Individual Branch Details\n  getBranchDetails(branchId: String): Observable<any> {\n    try {\n      let apiUrl = `${this.endpoint}/company/branch-details/${branchId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for submit updated branch data\n  submitUpdatedData(data: BranchData, branchId: String): Observable<any> {\n    try {\n      const companyParentId = sessionStorage.getItem(\"companyId\");\n      let apiUrl = `${this.endpoint}/company/update-branch/${companyParentId}/${branchId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n\n  }\n\n  //Create method for manage errors when request and return response from the server\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      //Handle client side error\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      //Handle server side error\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for delete branch\n  removeData(branchId: String): Observable<any> {\n    try {\n      let apiUrl = `${this.endpoint}/company/delete-branch/${branchId}`;\n      return this.http.delete(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n\n  }\n\n  //Method for add department\n  submitDepartmentData(data: Department, branchId: String): Observable<any> {\n    try {\n      let apiUrl = `${this.endpoint}/branch/add-department/${branchId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n    //Method for add department\n    updateDepartmentData(data: Department, branchId: String, departmentId:String): Observable<any> {\n      try {\n        let apiUrl = `${this.endpoint}/branch/update-department/${branchId}/${departmentId}`;\n        return this.http.post(apiUrl, data).pipe(\n          catchError(this.errorMgmt)\n        )\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n\n\n  //Method for get department list\n  getDepartmentData(branchId:String):Observable<any>{\n    try{\n      let apiUrl = `${this.endpoint}/branch/list-department/${branchId}`;\n      return this.http.get(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Method for remove department\n  removeDepartmentData(departmentId:String):Observable<any>{\n    try{\n      let apiUrl = `${this.endpoint}/branch/delete-department/${departmentId}`;\n      return this.http.delete(apiUrl).pipe(\n        catchError(this.errorMgmt)\n      )\n    }catch(err){\n      console.log(err.message);\n    }\n  }\n\n\n}\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BranchService } from '../../branch-service/branch.service';\n\n@Component({\n  selector: 'app-add-department',\n  templateUrl: './add-department.component.html',\n  styleUrls: ['./add-department.component.scss']\n})\nexport class AddDepartmentComponent implements OnInit {\n\n  departmentForm: FormGroup;\n  snapshotParam: String;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private api: BranchService,\n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.snapshotParam = this.route.snapshot.paramMap.get(\"branchId\");\n    this.departmentValidation();\n  }\n\n  //Method for form validation\n  departmentValidation() {\n    try {\n      this.departmentForm = this.fb.group({\n        title: new FormControl(null, Validators.required),\n        description: new FormControl(null),\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for submit form data\n  departmentFormData() {\n    try {\n      if (this.departmentForm.valid) {\n        this.api.submitDepartmentData(this.departmentForm.value, this.snapshotParam).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            setTimeout(() => {\n              this.ngZone.run(()=>{this.router.navigateByUrl(`/pages/branches/show-departments/${this.snapshotParam}`)});\n            }, 1000);\n            this.errorMsg = false;\n            this.successMsg = data.message;\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n\n  // For show error message\n  validationMessage = {\n    'title': [\n      { type: 'required', message: 'Title is required' },\n    ],\n  }\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Department Details</h2>\n        <a routerLink=\"../../show-departments/{{ snapshotParam }}\" class=\"btn btn-primary btn-circle\" style=\"float: right;\"><i\n                class=\"fa  fa-arrow-right\"></i></a>\n    </div>\n\n\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"departmentForm\" (ngSubmit)=\"departmentFormData()\" novalidate>\n                <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                          <input class=\"form-control\" type=\"text\" id=\"inputTitle\" placeholder=\"Enter Department Name\" formControlName=\"title\"\n                            >\n                          <div *ngFor=\"let validation of validationMessage.title\">\n                            <div style=\"color: red;margin-left: 14px;\" \n                              *ngIf=\"departmentForm.get('title').hasError(validation.type) && (departmentForm.get('title').dirty || departmentForm.get('title').touched)\"\n                              style=\"color: red;margin-left: 14px;\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Description:</b></label>\n                            <div class=\"col-sm-offset-2\">\n                              <input class=\"form-control\" type=\"text\" id=\"inputDescription\" placeholder=\"Description\" formControlName=\"description\"\n                                >\n                              <!-- <div *ngFor=\"let validation of validationMessage.description\">\n                                <div class=\"alert alert-danger\"\n                                  *ngIf=\"departmentForm.get('description').hasError(validation.type) && (departmentForm.get('description').dirty || departmentForm.get('description').touched)\"\n                                  class=\"alert alert-danger\">\n                                  {{ validation.message }}\n                                </div>\n                              </div> -->\n                            </div>\n                          </div>\n                          <div class=\"form-group\">\n                                <div class=\"col-sm-offset-2 col-sm-10\">\n                                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"departmentForm.invalid\">Add Department</button>\n                                </div>\n                              </div>\n\n        </form>\n    </div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BranchService } from '../branch-service/branch.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-show-branches',\n  templateUrl: './show-branches.component.html',\n  styleUrls: ['./show-branches.component.scss']\n})\nexport class ShowBranchesComponent implements OnInit {\n\n  snapShot:String;\n  // branchList: any =Object;\n  branchList: any = [];\n  showBranchCard = {};\n  permissionInfo: any;\n\n  constructor(private api:BranchService,\n     private route:ActivatedRoute,\n     private ngZone: NgZone,\n     private router: Router,\n     private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.showBranchList();\n  }\n\n//Method for Show branch list\n  showBranchList(){\n    try{\n    this.api.getBranchListData().subscribe((data)=>{\n      if(data.status === \"success\" || data.status === 200){\n        this.branchList = data.branch;\n        if(data.branch.length == 0){\n          this.router.navigateByUrl(\"/pages/branches/add-branch\");\n        }else{\n        for(var i = 0; i < this.branchList.length; i++){\n          this.showBranchCard[this.branchList[i]._id] = true;\n        }\n        }\n      }\n    })\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n  //Method for onclick data show when collapse\n  showData(branchId: String) {\n    try{\n    this.showBranchCard[`${branchId}`] = !this.showBranchCard[`${branchId}`];\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n   //Method for remove company branch\n   showConfirmationMessage(branchId: String) {\n    try {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeData(branchId).subscribe((data) => {\n            if (data.status === \"success\" || data.status === 200) {\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              )\n              this.ngZone.run(()=>{\n                this.router.navigateByUrl('/pages/branches/show-branches');\n              })\n              this.showBranchList();\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                'ERROR!',\n                data.message,\n                'error'\n              )\n            }\n          })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n  addBranches(){\n    try{\n      this.util.branchesSatus = 1;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Branches List</h2>\n        <a [class.disabled]=\"permissionInfo.search('Create Branch') === -1\"\n        class=\"btn btn-primary\" routerLink=\"../add-branch\" style=\"float: right;\" (click) = \"addBranches()\"><i\n                class=\"fa fa-plus-square\"></i>&nbsp; Add Branch</a>\n    </div>\n    <div class=\"panel-body\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" *ngFor=\"let list of branchList\">\n                <strong><b (click)=\"showData(list._id)\" style=\"cursor: pointer\">{{ list.name}}</b></strong>\n                <div style=\"float: right;\">\n                    <i class=\"dropdown-toggle\" (click)=\"showData(list._id)\"></i>\n                </div>\n                <div class=\"card\" style=\"background-color:ghostwhite\" [hidden]=\"showBranchCard[list._id]\">\n                    <table class=\"table\" style=\"margin: auto\">\n                        <tr>\n                            <td><b>Name:</b></td>\n                            <td>{{ list.name }}</td>\n                            <td><b>Address:</b></td>\n                            <td>{{ list.address }}</td>\n                        </tr>\n                        <tr>\n                            <td><b>Official Number:</b></td>\n                            <td>{{ list.officialNumber }}</td>\n                            <td><b>Fax:</b></td>\n                            <td>{{ list.fax }}</td>\n                        </tr>\n                        <tr>\n                            <td><b>Email:</b></td>\n                            <td>{{ list.email }}</td>\n                            <td><b>Bank Name:</b></td>\n                            <td>{{ list.bankName }}</td>\n                        </tr>\n                        <tr>\n                            <td><b>Account No:</b></td>\n                            <td>{{ list.bankAccNum }}</td>\n                            <td><b>Country Name:</b></td>\n                            <td>{{ list.countryName }}</td>\n                        </tr>\n                        <tr>\n                            <td><b>Taxation No:</b></td>\n                            <td>{{ list.taxationNumber }}</td>\n                            <td><b>State Name:</b></td>\n                            <td>{{ list.countryState }}</td>\n                        </tr>\n                        <tr>\n                            <td><b>PAN No:</b></td>\n                            <td>{{ list.panNumber }}</td>\n                            <td><b>Currency:</b></td>\n                            <td>{{ list.currency }}</td>\n                        </tr>\n                        <tr>\n                            <td><b>BCC Address for all outgoing mails:</b></td>\n                            <td>{{ list.outGoingMails }}</td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                    </table>\n                    <div>\n                        <a [class.disabled]=\"permissionInfo.search('Edit Branch') === -1\"\n                         routerLink=\"../update-branch-data/{{ list._id }}\" style=\"float: right\" class=\"btn btn-primary\">\n                            <i class=\"fa fa-pencil-square-o\"></i>\n                        </a\n                        >\n                        <button [disabled]=\"permissionInfo.search('Delete Branch') === -1\"\n                         style=\"float: right;\" class=\"btn btn-danger\" type=\"button\"\n                            (click)=\"showConfirmationMessage(list._id)\">\n                            <i class=\"fa fa-trash\"></i></button>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BranchesComponent } from './branches.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { AddBranchesComponent } from './add-branches/add-branches.component';\nimport { ShowBranchesComponent } from './show-branches/show-branches.component';\nimport { UpdateBranchDataComponent } from './update-branch-data/update-branch-data.component';\n// import { AddDepartmentComponent } from './department/add-department/add-department.component';\nimport { ShowDepartmentsComponent } from './department/show-departments/show-departments.component';\nimport { UpdateDepartmentComponent } from './department/update-department/update-department.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BranchesComponent,\n    canActivate:[AuthGuard],\n    children: [\n      {\n        path:'add-branch',\n        component:AddBranchesComponent,\n      },\n      {\n        path:'show-branches',\n        component:ShowBranchesComponent,\n      },\n      {\n        path:'update-branch-data/:branchId',\n        component:UpdateBranchDataComponent,\n      },\n      // {\n      //   path:'add-department/:branchId',\n      //   component:AddDepartmentComponent,\n      // },\n      {\n        path:'show-departments/:branchId',\n        component:ShowDepartmentsComponent,\n      },\n      {\n        path:'update-department/:branchId/:departmentId',\n        component:UpdateDepartmentComponent,\n      },\n      {\n        path:'',\n        redirectTo :'show-branches',\n        pathMatch:'full',\n      },\n    ],\n  },\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class BranchesRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BranchesRoutingModule } from './branches-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { BranchesComponent } from './branches.component';\nimport { AddBranchesComponent } from './add-branches/add-branches.component';\nimport { ShowBranchesComponent } from './show-branches/show-branches.component';\nimport { BranchService } from './branch-service/branch.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UpdateBranchDataComponent } from './update-branch-data/update-branch-data.component';\nimport { AddDepartmentComponent } from './department/add-department/add-department.component';\nimport { ShowDepartmentsComponent } from './department/show-departments/show-departments.component';\nimport { UpdateDepartmentComponent } from './department/update-department/update-department.component';\n\n@NgModule({\n  declarations: [BranchesComponent, AddBranchesComponent, ShowBranchesComponent, UpdateBranchDataComponent, AddDepartmentComponent, ShowDepartmentsComponent, UpdateDepartmentComponent],\n  imports: [\n    CommonModule,\n    BranchesRoutingModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n  ],\n  providers:[AuthGuard,BranchService]\n})\nexport class BranchesModule { }\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BranchService } from '../../branch-service/branch.service';\n\n@Component({\n  selector: 'app-update-department',\n  templateUrl: './update-department.component.html',\n  styleUrls: ['./update-department.component.scss']\n})\n\nexport class UpdateDepartmentComponent implements OnInit {\n\n  updateDepartmentForm:FormGroup;\n  snapshotParam: String;\n  departmentParam:String;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  departmentList= new Array();\n  // public departmentList: any=[];\n  // public departmentData:any =[];\n  departmentData= new Array();\n\n  constructor(\n    private route: ActivatedRoute,\n    private api: BranchService,\n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.snapshotParam = this.route.snapshot.paramMap.get(\"branchId\");\n    this.departmentParam = this.route.snapshot.paramMap.get(\"departmentId\");\n    this.updateFormValidation();\n    this.getExistingData();\n  }\n\n  //Method for form validation\n  updateFormValidation() {\n    try {\n      this.updateDepartmentForm = this.fb.group({\n        title: new FormControl(null),\n        description: new FormControl(null),\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n   //Method for submit form data\n   updateDepartmentFormData() {\n    try {\n      if (this.updateDepartmentForm.valid) {\n        this.api.updateDepartmentData(this.updateDepartmentForm.value, this.snapshotParam, this.departmentParam).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            setTimeout(() => {\n              this.ngZone.run(()=>{this.router.navigateByUrl(`/pages/branches/show-departments/${this.snapshotParam}`)});\n            }, 1000);\n            this.errorMsg = false;\n            this.successMsg = data.message;\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n   //Method for get existing data show on update form\n   getExistingData() {\n    this.api.getDepartmentData(this.snapshotParam).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.departmentList = data.department;\n        const len = Object.keys(this.departmentList).length;\n        for (var i = 0; i < len; i++) {\n          if (this.departmentList[i]._id === this.departmentParam) {\n            this.departmentData.push(this.departmentList[i]);\n            this.updateDepartmentForm = this.fb.group({\n              title: new FormControl(this.departmentList[i].title),\n              description: new FormControl(this.departmentList[i].description),\n            })\n          }\n        }\n      }\n    })\n  }\n\n}","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\" style=\"text-align: center\">Update Department Details</h2>\n        <a routerLink=\"../../../show-departments/{{ snapshotParam }}\" class=\"btn btn-primary btn-circle\"\n            style=\"float: right;\"><i class=\"fa  fa-arrow-right\"></i></a>\n    </div>\n\n\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateDepartmentForm\" *ngFor=\"let list of departmentData\"\n            (ngSubmit)=\"updateDepartmentFormData()\" novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputTitle\"\n                        formControlName=\"title\">\n\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Description:</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputDescription\" \n                        formControlName=\"description\">\n\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateDepartmentForm.invalid\">Add\n                        Department</button>\n                </div>\n            </div>\n\n        </form>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-branches',\n  templateUrl: './branches.component.html',\n  styleUrls: ['./branches.component.scss']\n})\nexport class BranchesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, NgZone, ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ } from '@angular/core';\nimport { BranchService } from '../branch-service/branch.service';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\ndeclare var populateCountries: any ;\n\n@Component({\n  selector: 'app-add-branches',\n  templateUrl: './add-branches.component.html',\n  styleUrls: ['./add-branches.component.scss']\n})\nexport class AddBranchesComponent implements OnInit {\n\n  branchForm:FormGroup;\n  snapshotParam:String;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  countryMsg: string;\n  stateOption: boolean;\n  selectCountryName: string;\n  selectStateName: string;\n  permissionInfo: any;\n\n  constructor(private route: ActivatedRoute,private api: BranchService, public fb: FormBuilder, private ngZone: NgZone,\n    private router: Router,\n    private util: UtilitiesService,\n    ) {\n      this.isListAvaliable();\n    }\n\n  ngOnInit() {\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.branchDataValidate();\n    populateCountries(\"country\", \"state\");\n    this.snapshotParam = sessionStorage.getItem(\"companyId\");\n    if(this.permissionInfo.search('Create Branch') === -1){\n      this.branchForm.disable();\n    }\n  }\n\n   //Method for Validation\n  branchDataValidate() {\n    try {\n      this.branchForm = this.fb.group({\n        name: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        officialNumber: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$')\n        ])),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n        fax: new FormControl('', Validators.compose([\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ])),\n        address: new FormControl('', Validators.required),\n        outGoingMails: new FormControl('', Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')),\n        taxationNumber: new FormControl(''),\n        panNumber: new FormControl('', Validators.pattern('(^[A-Za-z]{5}[0-9]{4}[A-Za-z]$)')),\n        bankName: new FormControl(''),\n        bankAccNum: new FormControl('',Validators.compose([Validators.maxLength(16),\n          Validators.pattern(/^[0-9]*$/)])),\n        bankType: new FormControl('')\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  scroll(element) {\n    element.scrollIntoView();\n}\n\n//Method for submit form data\n  branchFormData(){\n    try{\n      let cleanAddCompanyForm = this.util.cleanFormLevelOne(this.branchForm);\n      if(this.branchForm.valid){\n        this.api.submitBranchFormData(cleanAddCompanyForm.value,this.snapshotParam,this.selectCountryName,this.selectStateName).subscribe((data)=>{\n          if(data.status === \"success\"|| data.status === 200){\n            this.successMessage = true ;\n            this.errorMsg = false ;\n            this.successMsg = data.message;\n            setTimeout(()=>{\n            this.handleErrors();\n            this.ngZone.run(()=>this.router.navigateByUrl('/pages/branches/show-branches'));\n             }, 1500);\n          }\n          else if(data.status == \"error\"){\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(()=> {\n              this.handleErrors();\n            },4000)\n          }\n        })\n      }\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Method for show validdation message\n  validationMessage = {\n    'name': [\n      { type: 'required', message: 'Name is required' },\n    ],\n    'email': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Enter a valid email' }\n    ],\n    'address':[\n      { type: 'required', message: 'Address is required' },\n    ],\n    'officialNumber': [\n      { type: 'required', message: 'Number is required' },\n      { type: 'minlength', message: 'Number too short ' },\n      { type: 'maxlength', message: 'Number is too large' },\n      { type: 'pattern', message: 'Company Number not valid' },\n    ],\n    'fax': [\n      { type: 'minlength', message: 'Fax number too short ' },\n      { type: 'maxlength', message: 'Fax no. is too large' },\n      { type: 'pattern', message: 'Fax Number not valid' },\n    ],\n    'outGoingMails':[\n      { type: 'pattern', message: 'Invalid Mail'},\n    ],\n    'taxNumber':[\n      { type: 'pattern', message: 'Invalid Taxation No.'},\n    ],\n    'panNumber':[\n      { type: 'pattern', message: 'Invalid PAN Number'},\n    ],\n    'bankAccNum':[\n      { type: 'maxlength', message: 'Account No. limit exceeded'},\n      { type: 'pattern', message: 'Invalid Account No.'},\n    ],\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\nisListAvaliable(){\n  try{\n    this.api.getBranchListData().subscribe((data) =>{\n      if(data.status === 'success'){\n        if(data.branch.length > 0 && this.util.branchesSatus !== 1){\n          this.router.navigateByUrl(\"/pages/branches/show-branches\");\n          this.util.branchesSatus = 0;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n//Check For Country Validation\ncountryName(){\n  if((document.getElementById('country')as HTMLInputElement).value === '-1'){\n   this.countryMsg = \"Country Name is Required\";\n   this.stateOption = false;\n  } else {\n    this.selectCountryName = (document.getElementById('country')as HTMLInputElement).value\n    this.countryMsg = '';\n    this.stateOption = true;\n    this.stateName();\n  }\n}\n// State Option Functionality\nstateName(){\n  if((document.getElementById('state')as HTMLInputElement) === null){\n    this.selectStateName = '';\n  } else if((document.getElementById('state')as HTMLInputElement).value === ''){\n    this.selectStateName = '';\n  } else {\n    this.selectStateName = (document.getElementById('state')as HTMLInputElement).value\n  }\n}\n\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n      <h2 class=\"card-title\" #target>Branch Details</h2>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n          <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n          </p>\n        </div>\n\n        <div class=\"col-sm-offset-2\">\n          <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n          </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"branchForm\" (ngSubmit)=\"branchFormData()\" novalidate>\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Name (to appear on reports):&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Branch Name\" formControlName=\"name\"\n                >\n              <div *ngFor=\"let validation of validationMessage.name\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"branchForm.get('name').hasError(validation.type) && (branchForm.get('name').dirty || branchForm.get('name').touched)\"\n                  style=\"color: red;margin-left: 14px;\">\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Address:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n              <textarea class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" formControlName=\"address\"\n                ></textarea>\n              <div *ngFor=\"let validation of validationMessage.address\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"branchForm.get('address').hasError(validation.type) && (branchForm.get('address').dirty || branchForm.get('address').touched)\"\n                  style=\"color: red;margin-left: 14px;\">\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label class=\"col-sm-4 control-label\"><b>Country:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n              <select class=\"dropdown dropdown-toggle form-control\" id=\"country\" name =\"country\" (change)=\"countryName()\">\n              </select>\n              <div [ngStyle]=\"{display: countryMsg === undefined?'none':'block'}\" ><p style=\"color:red;\">{{countryMsg}}</p></div>\n            </div>\n            <div class=\"form-group col-md-6\" *ngIf=\"stateOption\">\n              <label class=\"col-sm-4 control-label\"><b>State:</b></label>\n              <select class=\"dropdown dropdown-toggle form-control\" name =\"state\" id =\"state\" (change)=\"stateName()\"></select>\n            </div>\n            <div class=\"form-group col-md-6\" *ngIf=\"!stateOption\">\n              <label class=\"col-sm-4 control-label\"><b>State:</b></label>\n              <select class=\"dropdown dropdown-toggle form-control\" disabled>\n                <option class=\"dropdown-item\">----Country Not Selected----</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Email Address:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Email \" formControlName=\"email\"\n                    >\n                  <div *ngFor=\"let validation of validationMessage.email\">\n                    <div style=\"color: red;margin-left: 14px;\"\n                      *ngIf=\"branchForm.get('email').hasError(validation.type) && (branchForm.get('email').dirty || branchForm.get('email').touched)\"\n                      style=\"color: red;margin-left: 14px;\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>BCC Address for all outgoing mails:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"email\" id=\"inputBcc\" placeholder=\"Enter BCC Address\"\n                    formControlName=\"outGoingMails\">\n                  <div *ngFor=\"let validation of validationMessage.outGoingMails\">\n                    <div style=\"color: red;margin-left: 14px;\"\n                      *ngIf=\"branchForm.get('outGoingMails').hasError(validation.type) && (branchForm.get('outGoingMails').dirty || branchForm.get('outGoingMails').touched)\"\n                      style=\"color: red;margin-left: 14px;\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Bank Name:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"email\" placeholder=\"Enter Bank Name \" formControlName=\"bankName\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"email\" placeholder=\"Enter Account Type\"\n                    formControlName=\"bankType\">\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Account No:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"inputFax\" placeholder=\"Enter Account Number:\" formControlName=\"bankAccNum\">\n                  <div *ngFor=\"let validation of validationMessage.bankAccNum\">\n                    <div style=\"color: red;margin-left: 14px;\"\n                      *ngIf=\"branchForm.get('bankAccNum').hasError(validation.type) && (branchForm.get('bankAccNum').dirty || branchForm.get('bankAccNum').touched)\"\n                      style=\"color: red;margin-left: 14px;\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Official Branch Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"inputCompanyNo\" placeholder=\"Enter Official Branch Number\"\n                    formControlName=\"officialNumber\" >\n                  <div *ngFor=\"let validation of validationMessage.officialNumber\">\n                    <div style=\"color: red;margin-left: 14px;\"\n                      *ngIf=\"branchForm.get('officialNumber').hasError(validation.type) && (branchForm.get('officialNumber').dirty || branchForm.get('officialNumber').touched)\"\n                      style=\"color: red;margin-left: 14px;\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Fax Number:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"inputFax\" placeholder=\"Enter Fax Number:\" formControlName=\"fax\">\n                  <div *ngFor=\"let validation of validationMessage.fax\">\n                    <div style=\"color: red;margin-left: 14px;\"\n                      *ngIf=\"branchForm.get('fax').hasError(validation.type) && (branchForm.get('fax').dirty || branchForm.get('fax').touched)\"\n                      style=\"color: red;margin-left: 14px;\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Taxation No:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"inputTaxationno.\" placeholder=\"Enter Taxation Number\"\n                    formControlName=\"taxationNumber\">\n                  <div *ngFor=\"let validation of validationMessage.taxNumber\">\n                    <div style=\"color: red;margin-left: 14px;\"\n                      *ngIf=\"branchForm.get('taxationNumber').hasError(validation.type) && (branchForm.get('taxationNumber').dirty || branchForm.get('taxationNumber').touched)\"\n                      style=\"color: red;margin-left: 14px;\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>PAN (Permanent Account Number):</b></label>\n                  <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" onkeyup=\"this.value = this.value.toUpperCase().trim();\" type=\"text\" id=\"inputPanno\" placeholder=\"Enter PAN Number\"\n                      formControlName=\"panNumber\">\n                    <div *ngFor=\"let validation of validationMessage.panNumber\">\n                      <div style=\"color: red;margin-left: 14px;\"\n                        *ngIf=\"branchForm.get('panNumber').hasError(validation.type) && (branchForm.get('panNumber').dirty || branchForm.get('panNumber').touched)\"\n                        style=\"color: red;margin-left: 14px;\">\n                        {{ validation.message }}\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n         </div>\n\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n              <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"branchForm.invalid || countryMsg || countryMsg === undefined\" (click)=\"scroll(target)\">Add Branch</button>\n              <button type=\"submit\" class=\"btn btn-danger\" routerLink=\"../show-branches\">Cancel</button>\n\n            </div>\n          </div>\n        </form>\n        </div>\n    </div>\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BranchService } from '../branch-service/branch.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { ApiService } from 'src/app/services/api.service';\n\n\n@Component({\n  selector: 'app-update-branch-data',\n  templateUrl: './update-branch-data.component.html',\n  styleUrls: ['./update-branch-data.component.scss']\n})\nexport class UpdateBranchDataComponent implements OnInit {\n\n  updateBranchForm: FormGroup;\n  getBranchList:any =Object;\n  branchData: Object[] = [];\n  snapshotParam: String;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: any = String;\n  errorMsg: boolean = false;\n  permissionInfo: any;\n\n\n  constructor(private route: ActivatedRoute, private api: BranchService, public fb: FormBuilder, private ngZone: NgZone,\n    private router: Router,\n    private util: UtilitiesService,\n    private currencyApi: ApiService) {\n      this.snapshotParam = this.route.snapshot.paramMap.get(\"branchId\");\n      this.util.moduleExists(this.snapshotParam,'Branches').subscribe((data)=>{\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/branches/show-branches');\n          }\n        }\n      })\n    }\n\n  ngOnInit() {\n    this.updateBranchDataValidate();\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.getExistingData();\n    if(this.permissionInfo.search('Edit Branch') === -1){\n      this.updateBranchForm.disable();\n    }\n  }\n\n  //Method for Validation\n  updateBranchDataValidate() {\n    try {\n      this.updateBranchForm = this.fb.group({\n        name: new FormControl('', Validators.compose([ Validators.required\n        ])),\n        officialNumber: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$')\n        ])),\n        fax: new FormControl('', Validators.compose([\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ])),\n        address: new FormControl('', Validators.required),\n        outGoingMails: new FormControl('', Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')),\n        taxationNumber: new FormControl(''),\n        panNumber: new FormControl('', Validators.pattern('(^[A-Za-z]{5}[0-9]{4}[A-Za-z]$)')),\n        bankName: new FormControl(''),\n        bankAccNum: new FormControl('',Validators.compose([Validators.maxLength(16),\n          Validators.pattern(/^[0-9]*$/)])),\n        bankType: new FormControl('')\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  scroll(element) {\n    element.scrollIntoView();\n  }\n\n  //Method for get existing data show on update form\n  getExistingData() {\n    try{\n      this.api.getBranchDetails(this.snapshotParam).subscribe((data) => {\n        if (data.status === \"success\") {\n          this.getBranchList = data.data;\n              this.updateBranchForm = this.fb.group({\n                name: new FormControl(this.getBranchList.name, Validators.compose([ Validators.required\n                ])),\n                officialNumber: new FormControl(this.getBranchList.officialNumber, Validators.compose([\n                  Validators.required,\n                  Validators.minLength(10),\n                  Validators.maxLength(15),\n                  Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$')\n                ])),\n                fax: new FormControl(this.getBranchList.fax, Validators.compose([\n                  Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n                  Validators.minLength(10),\n                  Validators.maxLength(10),\n                ])),\n                address: new FormControl(this.getBranchList.address, Validators.required),\n                outGoingMails: new FormControl(this.getBranchList.outGoingMails, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')),\n                taxationNumber: new FormControl(this.getBranchList.taxationNumber),\n                panNumber: new FormControl(this.getBranchList.panNumber, Validators.pattern('(^[A-Za-z]{5}[0-9]{4}[A-Za-z]$)')),\n                bankName: new FormControl(this.getBranchList.bankDetails.bankName),\n                bankAccNum: new FormControl(this.getBranchList.bankDetails.bankAccNum,Validators.compose([Validators.maxLength(16),\n                  Validators.pattern(/^[0-9]*$/)])),\n                bankType: new FormControl(this.getBranchList.bankDetails.bankType)\n              })\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n\n  }\n\n  //Method for submit updated form data\n  updateBranchFormData() {\n    try {\n      let cleanUpdateBranchForm = this.util.cleanFormLevelOne(this.updateBranchForm);\n      if (this.updateBranchForm.valid) {\n        this.api.submitUpdatedData(cleanUpdateBranchForm.value, this.snapshotParam).subscribe(data => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.router.navigateByUrl(\"/pages/branches/show-branches\");\n            }, 2000);\n          }\n          else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            },3000)\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for show validdation message\n  validationMessage = {\n    'name':[{ type: 'required', message: 'Name is Required ' }],\n    'address':[{ type: 'required', message: 'Address is Required ' }],\n    'officialNumber': [\n      { type: 'required', message: 'Official Number is Required ' },\n      { type: 'minlength', message: 'Number too short ' },\n      { type: 'maxlength', message: 'Number is too large' },\n      { type: 'pattern', message: 'Company Number not valid' },\n    ],\n    'fax': [\n      { type: 'minlength', message: 'Fax number too short ' },\n      { type: 'maxlength', message: 'Fax no. is too large' },\n      { type: 'pattern', message: 'Fax Number not valid' },\n    ],\n    'outGoingMails': [\n      { type: 'pattern', message: 'Invalid Mail' },\n    ],\n    'taxNumber':[\n      { type: 'pattern', message: 'Invalid Taxation No.'},\n    ],\n    'panNumber':[\n      { type: 'pattern', message: 'Invalid PAN Number'},\n    ],\n    'bankAccNum':[\n      { type: 'maxlength', message: 'Account No. limit exceeded'},\n      { type: 'pattern', message: 'Invalid Account No.'},\n    ],\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n}\n","<div class=\"card card-user\">\n        <div class=\"card-header\">\n          <h2 class=\"card-title\" #target style=\"text-align: center\">Update Branch Details</h2>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"col-sm-offset-2\">\n              <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{errMsg}}</strong>\n              </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n              <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{successMsg}}</strong>\n              </p>\n            </div>\n\n            <form class=\"form-horizontal\"  [formGroup]=\"updateBranchForm\" (ngSubmit)=\"updateBranchFormData()\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Name (to appear on reports):&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Branch Name\" formControlName=\"name\"\n                    >\n                    <div *ngFor=\"let validation of validationMessage.name\">\n                      <div style=\"color: red;margin-left: 14px;\"\n                        *ngIf=\"updateBranchForm.get('name').hasError(validation.type) && (updateBranchForm.get('name').dirty || updateBranchForm.get('name').touched)\"\n                        >\n                        {{ validation.message }}\n                      </div>\n                    </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Address:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                  <textarea class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" formControlName=\"address\"\n                    ></textarea>\n                    <div *ngFor=\"let validation of validationMessage.address\">\n                      <div style=\"color: red;margin-left: 14px;\"\n                        *ngIf=\"updateBranchForm.get('address').hasError(validation.type) && (updateBranchForm.get('address').dirty || updateBranchForm.get('address').touched)\"\n                        >\n                        {{ validation.message }}\n                      </div>\n                    </div>\n                </div>\n              </div>\n\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>BCC Address for all outgoing mails:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"email\" id=\"inputBcc\" placeholder=\"Enter BCC Address\"\n                        formControlName=\"outGoingMails\">\n                      <div *ngFor=\"let validation of validationMessage.outGoingMails\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                          *ngIf=\"updateBranchForm.get('outGoingMails').hasError(validation.type) && (updateBranchForm.get('outGoingMails').dirty || updateBranchForm.get('outGoingMails').touched)\"\n                          style=\"color: red;margin-left: 14px;\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Bank Name:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" placeholder=\"Enter Bank Name\"\n                        formControlName=\"bankName\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" placeholder=\"Enter Account Type\"\n                        formControlName=\"bankType\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Account Number:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"email\" placeholder=\"Enter Account Number\"\n                        formControlName=\"bankAccNum\">\n                      <div *ngFor=\"let validation of validationMessage.bankAccNum\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                          *ngIf=\"updateBranchForm.get('bankAccNum').hasError(validation.type) && (updateBranchForm.get('bankAccNum').dirty || updateBranchForm.get('bankAccNum').touched)\"\n                          style=\"color: red;margin-left: 14px;\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Fax Number:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" id=\"inputFax\" placeholder=\"Enter Fax Number:\" formControlName=\"fax\" >\n                      <div *ngFor=\"let validation of validationMessage.fax\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                          *ngIf=\"updateBranchForm.get('fax').hasError(validation.type) && (updateBranchForm.get('fax').dirty || updateBranchForm.get('fax').touched)\"\n                          style=\"color: red;margin-left: 14px;\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Official Branch Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" id=\"inputCompanyNo\" placeholder=\"Enter Official Branch Number\"\n                        formControlName=\"officialNumber\" >\n                      <div *ngFor=\"let validation of validationMessage.officialNumber\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                          *ngIf=\"updateBranchForm.get('officialNumber').hasError(validation.type) && (updateBranchForm.get('officialNumber').dirty || updateBranchForm.get('officialNumber').touched)\"\n                          style=\"color: red;margin-left: 14px;\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Taxation No:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" id=\"inputTaxationno.\" placeholder=\"Enter Taxation Number\"\n                        formControlName=\"taxationNumber\">\n                      <div *ngFor=\"let validation of validationMessage.taxNumber\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                          *ngIf=\"updateBranchForm.get('taxationNumber').hasError(validation.type) && (updateBranchForm.get('taxationNumber').dirty || updateBranchForm.get('taxationNumber').touched)\"\n                          style=\"color: red;margin-left: 14px;\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                      <label class=\"col-sm-6 control-label\"><b>PAN (Permanent Account Number):</b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" onkeyup=\"this.value = this.value.toUpperCase().trim();\" type=\"text\" id=\"inputPanno\" placeholder=\"Enter PAN Number\"\n                          formControlName=\"panNumber\">\n                        <div *ngFor=\"let validation of validationMessage.panNumber\">\n                          <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateBranchForm.get('panNumber').hasError(validation.type) && (updateBranchForm.get('panNumber').dirty || updateBranchForm.get('panNumber').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n             </div>\n              <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                  <button type=\"submit\" class=\"btn btn-success\" (click)=\"scroll(target)\" [disabled]=\"updateBranchForm.invalid || permissionInfo.search('Edit Branch')=== -1\" >Update Branch</button>\n                  <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../../show-branches\" >Cancel</button>\n                </div>\n              </div>\n            </form>\n            </div>\n        </div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BranchService } from '../../branch-service/branch.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-show-departments',\n  templateUrl: './show-departments.component.html',\n  styleUrls: ['./show-departments.component.scss']\n})\nexport class ShowDepartmentsComponent implements OnInit {\n\n  snapshotParam: String;\n  departmentList= new Array();\n  showDepartmentCard = {};\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private api: BranchService,\n    private ngZone: NgZone, ) { }\n\n  ngOnInit() {\n    this.getDepartmentListData();\n  }\n\n  navigate() {\n    this.router.navigateByUrl(`/pages/branches/add-department/${this.snapshotParam}`)\n  }\n\n  getDepartmentListData() {\n    try {\n      this.snapshotParam = this.route.snapshot.paramMap.get(\"branchId\");\n      this.api.getDepartmentData(this.snapshotParam).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.departmentList = data.department;\n          const len = Object.keys(data.department).length;\n          for (var i = 0; i < len; i++) {\n            this.showDepartmentCard[this.departmentList[i]._id] = true;\n          }\n        }\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for onclick data show when collapse\n  showData(departmentId: String) {\n    try {\n      this.showDepartmentCard[`${departmentId}`] = !this.showDepartmentCard[`${departmentId}`];\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for remove company branch\n  deleteList(departmentId: String) {\n    try {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeDepartmentData(departmentId).subscribe((data) => {\n            if (data.status === \"success\" || data.status === 200) {\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              )\n              this.ngZone.run(() => {\n                this.router.navigateByUrl(`/pages/branches/show-departments/${this.snapshotParam}`);\n              })\n              this.getDepartmentListData();\n            }\n          })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Departments List</h2>\n        <button class=\"btn btn-primary\" (click)=\"navigate()\"  style=\"float: right;\"><i\n                class=\"fa fa-plus-square\"></i>&nbsp; Add Department</button>\n    </div>\n\n    <div class=\"panel-body\">\n            <ul class=\"list-group\">\n                <li class=\"list-group-item\" *ngFor=\"let list of departmentList\">\n                    <strong><b (click)=\"showData(list._id)\" style=\"cursor: pointer\">{{ list.title }}</b></strong>\n                    <div style=\"float: right;\">\n                        <i class=\"dropdown-toggle\" (click)=\"showData(list._id)\"></i>\n                    </div>\n                    <div class=\"card\" style=\"background-color:ghostwhite\" [hidden]=\"showDepartmentCard[list._id]\">\n                        <table class=\"table\" style=\"margin: auto\">\n                            <tr>\n                                <th>Title:</th>\n                                <td>{{ list.title }}</td>\n                            </tr>\n                            <tr>\n                                <th>Description:</th>\n                                <td>{{ list.description }}</td>\n                            </tr>\n                        </table>\n                        <div>\n                            <a  routerLink=\"../../update-department/{{ snapshotParam }}/{{ list._id}}\" style=\"float: right\" class=\"btn btn-primary\">\n                                <i class=\"fa fa-pencil-square-o\"></i>&nbsp;\n                                update\n                            </a>\n                            <button style=\"float: right;\" class=\"btn btn-danger\" type=\"button\"\n                               (click)=deleteList(list._id)  >\n                                <i class=\"fa fa-trash\"></i>&nbsp; Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div> \n</div>"],"sourceRoot":"webpack:///"}