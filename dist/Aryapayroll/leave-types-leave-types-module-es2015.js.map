{"version":3,"sources":["./src/app/pages/leave-types/leave-types.component.ts","./src/app/pages/leave-types/leave-types.component.html","./src/app/pages/leave-types/leave-types-routing.module.ts","./src/app/pages/leave-types/add-leave-types/add-leave-types.component.ts","./src/app/pages/leave-types/add-leave-types/add-leave-types.component.html","./src/app/pages/leave-types/list-leave-types/list-leave-types.component.ts","./src/app/pages/leave-types/list-leave-types/list-leave-types.component.html","./src/app/pages/leave-types/update-leave-type/update-leave-type.component.ts","./src/app/pages/leave-types/update-leave-type/update-leave-type.component.html","./src/app/pages/leave-types/leave-types.module.ts"],"names":[],"mappings":"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","file":"leave-types-leave-types-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leave-types',\n  templateUrl: './leave-types.component.html',\n  styleUrls: ['./leave-types.component.scss']\n})\nexport class LeavetypesComponent implements OnInit {\n\n  constructor(){\n\n  }\n  ngOnInit(){\n\n  }\n \n\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LeavetypesComponent } from './leave-types.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListLeaveTypesComponent } from './list-leave-types/list-leave-types.component';\nimport { AddLeaveTypesComponent } from './add-leave-types/add-leave-types.component';\nimport { UpdateLeaveTypeComponent } from './update-leave-type/update-leave-type.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : LeavetypesComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-leave-types',\n        component: ListLeaveTypesComponent,\n      },\n      {\n        path: 'add-leave-types',\n        component: AddLeaveTypesComponent\n      },\n      {\n        path: 'update-leave-type/:leaveTypeId',\n        component: UpdateLeaveTypeComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-leave-types',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class LeavetypesRoutingModule { }","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LeaveApiService } from '../service-leave/leave-api.service';\nimport { ApiService } from '../../../services/api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n    selector: 'app-add-leave-types',\n    templateUrl: './add-leave-types.component.html'\n})\n\nexport class AddLeaveTypesComponent implements OnInit {\n\n\n    leaveForm: FormGroup;\n    public successMsg:any = String;\n    public successMessage: boolean = false;\n    public errMsg:any = String;\n    public errorMsg: boolean = false;\n    public companyNameStore: any;\n    public showCard: any;\n    public companyListData:any = Object;\n    public companyNameId: any;\n    public companyName: any =[];\n    public companyId: any;\n    permissionInfo: any;\n\n\n    constructor(private _api: ApiService,\n      public fb: FormBuilder,\n      private ngZone: NgZone,\n      private router: Router,\n      private api: LeaveApiService,\n      private util: UtilitiesService){\n        this.isListAvaliable();\n      }\n\n    ngOnInit() {\n      this.permissionInfo = this.util.permissionRoleInfo;\n      this.companyDataValidate();\n      if(this.permissionInfo.search('Create LeaveType') === -1){\n        this.leaveForm.disable();\n      }\n    }\n\n    companyDataValidate() {\n      try {\n        this.leaveForm = this.fb.group({\n          leaveTypeName: new FormControl('',Validators.required),\n          leaveTypeCode: new FormControl('',Validators.required),\n            isPaid: new FormControl(false)\n          })\n        }\n      catch (err) {\n        console.log(err);\n      }\n    }\n\n    leaveFormData() {\n      try{\n        let cleanLeaveTypeForm = this.util.cleanFormLevelOne(this.leaveForm);\n        if (this.leaveForm.value) {\n          this.api.leaveDataSubmit(cleanLeaveTypeForm.value).subscribe(data => {\n            if(data.status === \"success\" || data.status === 200){\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n              setTimeout(() => {\n                this.handleErrors();\n                this.ngZone.run(()=>this.router.navigateByUrl('/pages/leave-types/list-leave-types'));\n              }, 2000);\n            }\n            else if(data.status === \"error\"|| data.status === 404){\n              this.errorMsg = true;\n              this.successMessage = false;\n              this.errMsg = data.message;\n              setTimeout(() => {\n                this.handleErrors();\n              },3000);\n            }\n          })\n        }\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    validationMessage = {\n      'leaveTypeName': [\n        { type: 'required', message: 'Name is required' },\n      ],\n      'leaveTypeCode':[{\n        type: 'required', message: 'Code is required'\n      }]\n    }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n  isListAvaliable(){\n    try{\n\n      this.api.getListData().subscribe((data) =>{\n        if(data.status === 'success'){\n          if(data.leaveTypes.length > 0 && this.util.leaveStatus !== 1){\n            this.router.navigateByUrl(\"/pages/leave-types/list-leave-types\");\n            this.util.leaveStatus = 0;\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Leave Type Details</h2>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n      <form class=\"form-horizontal\" [formGroup]=\"leaveForm\"   (ngSubmit)=\"leaveFormData()\" novalidate>\n         <div class=\"form-group\">\n             <label class=\"col-sm-6 control-label\"><b>Leave Type Name: <span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Name\"\n                  formControlName=\"leaveTypeName\" required>\n               <div *ngFor=\"let validation of validationMessage.leaveTypeName\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"leaveForm.get('leaveTypeName').hasError(validation.type) && (leaveForm.get('leaveTypeName').dirty || leaveForm.get('leaveTypeName').touched)\"\n                     >\n                     {{validation.message}}\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n             <label class=\"col-sm-6 control-label\"><b>Leave Type Code: <span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Code\"\n                  formControlName=\"leaveTypeCode\" required>\n               <div *ngFor=\"let validation of validationMessage.leaveTypeCode\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"leaveForm.get('leaveTypeCode').hasError(validation.type) && (leaveForm.get('leaveTypeCode').dirty || leaveForm.get('leaveTypeCode').touched)\"\n                     >\n                     {{validation.message}}\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2\">\n               <label><b>Is Paid: </b></label><input type=\"checkbox\" formControlName=\"isPaid\">\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"leaveForm.invalid || permissionInfo.search('Create LeaveType') === -1\">Submit</button>\n               <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-leave-types\">Cancel</button>\n            </div>\n         </div>\n      </form>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LeaveApiService } from '../service-leave/leave-api.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-leave-types',\n    templateUrl: './list-leave-types.component.html'\n})\n\nexport class ListLeaveTypesComponent implements OnInit {\n\n  public showCard:any = {};\n  // public leaveListData: any =Object;\n  public leaveListData: any= [];\n  public companyShowData:any = [];\n  permissionInfo: any;\n\n\n    constructor(private api: LeaveApiService,\n      public route:Router,\n      private _Activatedroute:ActivatedRoute,\n      private util: UtilitiesService) {}\n\n    ngOnInit() {\n      this.permissionInfo = this.util.permissionRoleInfo;\n      this.leaveList();\n    }\n\n    leaveList() {\n      try{\n        this.api.getListData().subscribe(data => {\n          if (data.status === 'success' || data.status === 200) {\n            this.leaveListData = data.leaveTypes;\n            if(data.leaveTypes.length == 0){\n              this.route.navigateByUrl(\"/pages/leave-types/add-leave-types\");\n            }\n            else{\n              const len = Object.keys(this.leaveListData).length;\n              for (var i = 0; i < len; i++) {\n                this.showCard[this.leaveListData[i]._id] = true;\n              }\n            }\n\n          }\n        })\n      }catch(err){\n        console.log(err.message);\n      }\n\n    }\n\n    showData(leaveId: String) {\n      this.showCard[`${leaveId}`] = !this.showCard[`${leaveId}`];\n    }\n\n    showConfirmationMessage(leaveTypeId:String){\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeData(leaveTypeId).subscribe((data)=>{\n            if(data.status === \"success\" || data.status === 200){\n          swalWithBootstrapButtons.fire(\n            'Deleted!',\n            data.message,\n            'success'\n          )\n          this.leaveList();\n            }\n        })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n    }\n    addLeaveTypes(){\n      try{\n        this.util.leaveStatus = 1;\n      }catch(err){\n        console.log(err)\n      }\n    }\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Leave Types</h2>\n        <button [disabled]=\"permissionInfo.search('Create LeaveType') === -1\"\n         class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/leave-types/add-leave-types\"\n            style=\"float: right;\" (click)=\"addLeaveTypes()\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Leave Type</button\n            >\n    </div>\n    <table class=\"table\" style=\"text-align: center;\">\n        <thead class=\" text-primary\">\n            <tr>\n                <th>S.No</th>\n                <th>Name</th>\n                <th>Code</th>\n                <th>Is Paid</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let list of leaveListData; let i = index\">\n            <tr>\n                <td><b>{{i+1}}.</b></td>\n                <td>{{ list.leaveTypeName}}</td>\n                <td>{{ list.leaveTypeCode}}</td>\n                <td *ngIf=\"list.isPaid\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                <td *ngIf=\"!list.isPaid\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n            <td>\n                <a [class.disabled]=\"permissionInfo.search('Edit LeaveType') === -1\"\n                 routerLink=\"/pages/leave-types/update-leave-type/{{list._id}}\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a\n                    >&nbsp;\n                <button [disabled]=\"permissionInfo.search('Delete LeaveType') === -1\"\n                 class=\"btn btn-danger\" type=\"button\" (click)=\"showConfirmationMessage(list._id)\"> <i class=\"fa fa-trash\"></i></button\n                    >\n            </td>\n            </tr>\n    </table>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LeaveApiService } from '../service-leave/leave-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-leave-type',\n  templateUrl: 'update-leave-type.component.html'\n})\n\nexport class UpdateLeaveTypeComponent implements OnInit {\n\n  leaveForm1: FormGroup;\n  successMsg:any = String;\n  successMessage: boolean = false;\n  errMsg:any = String;\n  errorMsg: boolean = false;\n  companyNameStore:any = [];\n  showCard: any;\n  companyNameId: any;\n  companyName:any=[];\n  companyId: any;\n  leaveTypeId: string;\n  leaveId;\n  leaveData: any=[];\n  leaveFormData:any = Object;\n  existingData:any;\n  permissionInfo: any;\n\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n    private api: LeaveApiService,\n    private util: UtilitiesService) {\n      this.leaveTypeId = this.route.snapshot.paramMap.get(\"leaveTypeId\");\n      this.util.moduleExists(this.leaveTypeId,'LeaveTypes').subscribe((data)=>{\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/leave-types/list-leave-types');\n          }\n        }\n      })\n    }\n\n  ngOnInit() {\n    this.permissionInfo = this.util.permissionRoleInfo;\n    this.companyDataValidate();\n    this.existingLeaveTypeValues();\n    if(this.permissionInfo.search('Edit LeaveType') === -1){\n      this.leaveForm1.disable();\n    }\n  }\n\n  companyDataValidate() {\n    try {\n      this.leaveForm1 = this.fb.group({\n        leaveTypeName: new FormControl('',Validators.required),\n        leaveTypeCode: new FormControl('',Validators.required),\n        isPaid: new FormControl(false)\n      })\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  existingLeaveTypeValues() {\n    try {\n      this.api.leaveTypeDetails(this.leaveTypeId).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.existingData = data.data;\n          this.leaveForm1 = this.fb.group({\n            leaveTypeName: new FormControl(this.existingData.leaveTypeName, Validators.required),\n            leaveTypeCode: new FormControl(this.existingData.leaveTypeCode, Validators.required),\n            isPaid: new FormControl(this.existingData.isPaid),\n          })\n        }\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  validationMessage = {\n    'leaveTypeName': [\n      { type: 'required', message: 'Name is required' },\n    ],\n    'leaveTypeCode':[{\n      type: 'required', message: 'Code is required'\n    }]\n  }\n\n  updateLeaveFormData() {\n    try {\n      let cleanUpdateLeaveTypeForm = this.util.cleanFormLevelOne(this.leaveForm1);\n      if (this.leaveForm1.value) {\n        this.api.updateLeaveType(cleanUpdateLeaveTypeForm.value,  this.leaveTypeId).subscribe(data => {\n          if (data.status === 'success' || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.ngZone.run(() => this.router.navigateByUrl('/pages/leave-types/list-leave-types'));\n            }, 2000);\n          } else if (data.status == \"error\") {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            }, 3000);\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n}","<div class=\"card card-user\">\n    <div class=\"card-header\">\n       <h2 class=\"card-title text-center\">Update Leave Type</h2>\n       <!-- <button type=\"button\" class=\"btn btn-primary btn-circle\" routerLink=\"../../list-leave-types\"  style=\"float: right;\" ><i class=\"fa  fa-arrow-right\"></i></button> -->\n    </div>\n    <div class=\"card-body\">\n       <div class=\"col-sm-offset-2\">\n          <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n             <strong>{{errMsg}}</strong>\n          </p>\n       </div>\n       <div class=\"col-sm-offset-2\">\n          <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n             <strong>{{successMsg}}</strong>\n          </p>\n       </div>\n       <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"leaveForm1\" (ngSubmit)=\"updateLeaveFormData()\">\n       <div class=\"form-group\" >\n          <label class=\"col-sm-6 control-label\"><b>Leave Type Name: <span style=\"color: darkred\">*</span></b></label>\n          <div class=\"col-sm-offset-2\">\n             <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Name\" formControlName=\"leaveTypeName\"\n                >\n                <div *ngFor=\"let validation of validationMessage.leaveTypeName\">\n                     <div style=\"color: red;margin-left: 14px;\"\n                        *ngIf=\"leaveForm1.get('leaveTypeName').hasError(validation.type) && (leaveForm1.get('leaveTypeName').dirty || leaveForm1.get('leaveTypeName').touched)\"\n                        >\n                        {{validation.message}}\n                     </div>\n                  </div>\n          </div>\n       </div>\n\n       <div class=\"form-group\">\n        <label class=\"col-sm-6 control-label\"><b>Leave Type Code: <span style=\"color: darkred\">*</span></b></label>\n        <div class=\"col-sm-offset-2\">\n           <input class=\"form-control\" type=\"text\" id=\"inputName1\" placeholder=\"Enter Code\" formControlName=\"leaveTypeCode\"\n              >\n              <div *ngFor=\"let validation of validationMessage.leaveTypeCode\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"leaveForm1.get('leaveTypeCode').hasError(validation.type) && (leaveForm1.get('leaveTypeCode').dirty || leaveForm1.get('leaveTypeCode').touched)\"\n                     >\n                     {{validation.message}}\n                  </div>\n               </div>\n        </div>\n     </div>\n\n     <div class=\"form-group\">\n      <label class=\"control-label\"><b>Is Paid:</b></label> <input type=\"checkbox\"  formControlName=\"isPaid\">\n      </div>\n       <div class=\"form-group\">\n          <div class=\"col-sm-offset-2 col-sm-10\">\n             <button [disabled]=\"permissionInfo.search('Edit LeaveType') === -1 || leaveForm1.invalid\"\n              type=\"submit\" class=\"btn btn-success\">Update</button>\n             <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../../list-leave-types\">Cancel</button>\n          </div>\n       </div>\n       </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LeavetypesRoutingModule } from './leave-types-routing.module';\nimport { LeavetypesComponent } from './leave-types.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListLeaveTypesComponent } from './list-leave-types/list-leave-types.component';\nimport { AddLeaveTypesComponent } from './add-leave-types/add-leave-types.component';\nimport { UpdateLeaveTypeComponent } from './update-leave-type/update-leave-type.component';\n\n@NgModule({\n  declarations: [\n     LeavetypesComponent,\n     ListLeaveTypesComponent,\n     AddLeaveTypesComponent,\n     UpdateLeaveTypeComponent\n    ],\n  \n  imports: [\n    CommonModule,\n    LeavetypesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class LeavetypesModule { }\n"],"sourceRoot":"webpack:///"}