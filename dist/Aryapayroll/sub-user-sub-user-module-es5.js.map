{"version":3,"sources":["webpack:///src/app/pages/sub-user/update-subusers-data/update-subusers-data.component.ts","webpack:///src/app/pages/sub-user/update-subusers-data/update-subusers-data.component.html","webpack:///src/app/pages/sub-user/sub-user.module.ts","webpack:///src/app/pages/sub-user/add-subusers/add-subusers.component.ts","webpack:///src/app/pages/sub-user/add-subusers/add-subusers.component.html","webpack:///src/app/pages/sub-user/show-subusers-list/show-subusers-list.component.ts","webpack:///src/app/pages/sub-user/show-subusers-list/show-subusers-list.component.html","webpack:///src/app/pages/sub-user/sub-user.component.ts","webpack:///src/app/pages/sub-user/sub-user.component.html","webpack:///src/app/pages/sub-user/sub-user-routing.module.ts","webpack:///src/app/pages/sub-user/sub-user-service/sub-user.service.ts"],"names":["UpdateSubusersDataComponent","route","api","fb","ngZone","router","util","snapshotParam","String","successMsg","successMessage","errMsg","errorMsg","genderList","validationMessage","type","message","snapshot","paramMap","get","subUserFormValidation","getSubUserExistingData","updateSubUserForm","group","name","compose","required","pattern","phone","minLength","maxLength","birthday","zipCode","gender","email","err","console","log","cleanUpdateSubUserForm","cleanFormLevelOne","submitUpdateSubUserData","value","subscribe","data","status","setTimeout","handleErrors","navigateByUrl","subUserDetails","updateSubUserFormData","selector","templateUrl","styleUrls","SubUserModule","declarations","imports","providers","AddSubusersComponent","spinner","roleAPI","rolePermission","subUserForm","roleId","cleansubUserForm","show","addSubUsersData","hide","handleErrroMessage","run","setValue","listAllRole","rolePermissionInfo","error","subUserFormData","ShowSubusersListComponent","showCard","subUsersListData","getSubUsersList","getSubUsersListData","users","length","len","Object","keys","i","_id","subUsersId","subUserId","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","removeSubUsersData","dismiss","DismissReason","cancel","SubUserComponent","path","component","canActivate","children","redirectTo","pathMatch","SubUserRoutingModule","forChild","SubUserService","http","endpoint","apiBaseUrl","headers","set","redirectUrl","appBaseUrl","parentUserId","localStorage","getItem","apiURL","post","pipe","errorMgmt","errorMessage","ErrorEvent","userId","providedIn"],"mappings":"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","file":"sub-user-sub-user-module-es5.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { SubUserService } from '../sub-user-service/sub-user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-subusers-data',\n  templateUrl: './update-subusers-data.component.html',\n  styleUrls: ['./update-subusers-data.component.scss']\n})\nexport class UpdateSubusersDataComponent implements OnInit {\n\n  snapshotParam:any = String;\n  updateSubUserForm: FormGroup;\n  successMsg:any= String;\n  successMessage: Boolean = false;\n  errMsg:any= String;\n  errorMsg: Boolean = false;\n  genderList: String[]= ['Male','Female','Others','N/A']\n\n\n\n  constructor(private route: ActivatedRoute, private api: SubUserService, public fb: FormBuilder, private ngZone: NgZone,\n    private router: Router,\n    private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.snapshotParam = this.route.snapshot.paramMap.get(\"subUserId\");\n    this.subUserFormValidation();\n    this.getSubUserExistingData();\n  }\n\n\n  //method for sub user validation\n  subUserFormValidation() {\n    try {\n      this.updateSubUserForm = this.fb.group({\n        name: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z ]*$'),\n        ])),\n        phone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        birthday: new FormControl(),\n        zipCode: new FormControl('', Validators.compose([\n          Validators.pattern('^[0-9]{6}(?:-[0-9]{4})?$'),\n        ])),\n        gender: new FormControl(),\n        email:new FormControl(),\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n//Method for Update Sub-User Details\n  updateSubUserFormData() {\n    try {\n      let cleanUpdateSubUserForm = this.util.cleanFormLevelOne(this.updateSubUserForm);\n      this.api.submitUpdateSubUserData(cleanUpdateSubUserForm.value, this.snapshotParam).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.getSubUserExistingData();\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n            this.router.navigateByUrl('/pages/sub-user/show-subusers-list');\n          }, 2000);\n        }\n        else if (data.status == \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n          },3000)\n        }\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Get existing data load on the form(autofill form)\n  getSubUserExistingData() {\n    try {\n      this.api.subUserDetails(this.snapshotParam).subscribe(data => {\n        if (data.status === \"success\") {\n              this.updateSubUserForm = this.fb.group({\n                name: new FormControl(data.data.name, Validators.compose([\n                  Validators.required,\n                  Validators.pattern('^[a-zA-Z ]*$'),\n                ])),\n                phone: new FormControl(data.data.phone, Validators.compose([\n                  Validators.required,\n                  Validators.minLength(10),\n                  Validators.maxLength(15),\n                  Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n                ])),\n                birthday: new FormControl(),\n                zipCode: new FormControl('', Validators.compose([\n                  Validators.pattern('^[0-9]{6}(?:-[0-9]{4})?$'),\n                ])),\n                gender: new FormControl(),\n                email:new FormControl(data.data.email),\n              })\n        }\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Property for show error message\n  validationMessage = {\n    'name': [\n      { type: 'required', message: 'Name Is Required'},\n      { type: 'pattern', message: 'Not a valid' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone Number Is Required'},\n      { type: 'minlength', message: 'Not a phone number ' },\n      { type: 'maxlength', message: 'Phone no. is too large' },\n      { type: 'pattern', message: 'Phone Number not valid' },\n    ],\n    'zipCode': [\n      { type: 'pattern', message: 'ZIP code not valid' },\n    ],\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\n}\n","<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Update Sub-User Details</h2>\n        <!-- <a routerLink=\"/pages/sub-user/show-subusers-list\" class=\"btn btn-primary btn-circle\" style=\"float: right;\"><i class=\"fa  fa-arrow-right\"></i></a> -->\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateSubUserForm\" (ngSubmit)=\"updateSubUserFormData()\">\n            <div class=\"form-group\">\n                 <label class=\"col-sm-6 control-label\"><b>Full Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"name\"\n                        formControlName=\"name\" required>\n                    <div *ngFor=\"let validation of validationMessage.name\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateSubUserForm.get('name').hasError(validation.type) && (updateSubUserForm.get('name').dirty || updateSubUserForm.get('name').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{validation.message}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                 <label class=\"col-sm-6 control-label\"><b>Phone Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"phone\" formControlName=\"phone\">\n                    <div *ngFor=\"let validation of validationMessage.phone\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"updateSubUserForm.get('phone').hasError(validation.type) && (updateSubUserForm.get('phone').dirty || updateSubUserForm.get('phone').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Email:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"email\" id=\"email\"  formControlName=\"email\" disabled >\n                    </div>\n                </div>\n<!----------------- For Further Work ---------------------------->\n\n            <!-- <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>DOB</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"date\" id=\"inputEmail\" placeholder=\"DOB \"\n                        value=\"{{ list.profile.contactInfo.birthday }}\" formControlName=\"birthday\" required>\n                    <div *ngFor=\"let validation of validationMessage.birthday\">\n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"updateSubUserForm.get('birthday').hasError(validation.type) && (updateSubUserForm.get('birthday').dirty || updateSubUserForm.get('birthday').touched)\"\n                            class=\"alert alert-danger\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Zip Code</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputZipcode\" placeholder=\"Enter Zip Code\"\n                        value=\"{{ list.profile.contactInfo.zipCode }}\" formControlName=\"zipCode\">\n                    <div *ngFor=\"let validation of validationMessage.zipCode\">\n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"updateSubUserForm.get('zipCode').hasError(validation.type) && (updateSubUserForm.get('zipCode').dirty || updateSubUserForm.get('zipCode').touched)\"\n                            class=\"alert alert-danger\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label \"><b>Gender:-</b></label>\n                <select class=\"dropdown dropdown-toggle form-control\" Name=\"gender\" formControlName=\"gender\"\n                    value=\"{{ list.profile.contactInfo.gender }}\">\n                    <option class=\"dropdown-item\" value=\"blank\" selected disabled>Choose Gender</option>\n                    <option class=\"dropdown-item\" value=\"Male\">Male</option>\n                    <option class=\"dropdown-item\" value=\"Female\">Female</option>\n                    <option class=\"dropdown-item\" value=\"Others\">Others</option>\n                    <option class=\"dropdown-item\" value=\"N/A\">N/A</option>\n                </select>\n            </div> -->\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateSubUserForm.invalid\">Update</button>\n                    <button type=\"submit\" class=\"btn btn-danger\" routerLink=\"/pages/sub-user/show-subusers-list\">Cancel</button>\n                </div>\n            </div>\n        </form>\n\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SubUserRoutingModule } from './sub-user-routing.module';\nimport { SubUserComponent } from './sub-user.component';\nimport { AddSubusersComponent } from './add-subusers/add-subusers.component';\nimport { ShowSubusersListComponent } from './show-subusers-list/show-subusers-list.component';\nimport { SubUserService } from './sub-user-service/sub-user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateSubusersDataComponent } from './update-subusers-data/update-subusers-data.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n    declarations: [SubUserComponent,AddSubusersComponent, ShowSubusersListComponent, UpdateSubusersDataComponent],\n    imports: [\n        CommonModule,\n        SubUserRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        HttpClientModule,\n        NgxSpinnerModule   \n    ],\n    providers: [SubUserService,AuthGuard],\n})\nexport class SubUserModule { }","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubUserService } from '../sub-user-service/sub-user.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { RolesService } from '../../roles/roles-service/roles.service';\n\n@Component({\n  selector: 'app-add-subusers',\n  templateUrl: './add-subusers.component.html',\n  styleUrls: ['./add-subusers.component.scss']\n})\nexport class AddSubusersComponent implements OnInit {\n\n  subUserForm: FormGroup;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  genderList:String[]= ['Male','Female','Others','N/A'];\n  rolePermissionInfo: any;\n\n  constructor(public fb: FormBuilder, private api:SubUserService,private ngZone: NgZone, private router: Router,\n    private spinner: NgxSpinnerService,\n    private util: UtilitiesService,\n    private roleAPI: RolesService\n     ) { }\n\n  ngOnInit() {\n    this.subUserFormValidation();\n    this.rolePermission();\n  }\n\n  //method for sub user validation\n  subUserFormValidation(){\n    try{\n    this.subUserForm = this.fb.group({\n    name:new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('^[a-zA-Z ]*$'),\n    ])),\n      phone: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(15),\n        Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n      ])),\n      email:new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n      ])),\n      roleId: new FormControl('',Validators.required)\n    })\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n//Method for submit add new sub-users form data an\nsubUserFormData(){\n  try{\n    let cleansubUserForm = this.util.cleanFormLevelOne(this.subUserForm);\n    this.spinner.show();\n    this.api.addSubUsersData(cleansubUserForm.value).subscribe(data=>{\n      if(data.status === \"success\"|| data.status === 200){\n        this.successMessage = true ;\n        this.errorMsg = false ;\n        this.successMsg = data.message;\n        this.spinner.hide();\n        setTimeout(() => {\n          this.handleErrroMessage();\n          this.ngZone.run(()=>this.router.navigateByUrl('/pages/sub-user/show-subusers-list'));\n        }, 7000);\n      }\n      else if(data.status == \"error\"){\n        this.subUserForm.get('email').setValue('');\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        this.spinner.hide();\n        setTimeout(()=> {\n          this.handleErrroMessage();\n        },2000)\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n\n  }\n\n\n//Property for show error message\nvalidationMessage = {\n  'name': [\n    { type: 'required', message: 'Name is required' },\n    { type: 'pattern', message: 'Not a valid name' }\n  ],\n  'email': [\n    { type: 'required', message: 'Email is required' },\n    { type: 'pattern', message: 'Enter a valid email' }\n  ],\n  'phone': [\n    { type: 'required', message: 'Phone No. is required' },\n    { type: 'minlength', message: 'Not a phone number ' },\n    { type: 'maxlength', message: 'Phone no. is too large' },\n    { type: 'pattern', message: 'Phone Number not valid' },\n  ],\n  'roleId': [\n    { type: 'required', message: 'Role is required' },\n  ],\n}\n// Error Handling Message\nhandleErrroMessage(){\n  this.successMessage = false;\n  this.errorMsg = false;\n  this.successMsg = '';\n  this.errMsg = '';\n}\n\n// roles permissions\nrolePermission(){\n  try {\n    this.roleAPI.listAllRole().subscribe((data)=>{\n      if(data.status === 'success'){\n        this.rolePermissionInfo = data.data;\n      }\n    })\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}\n\n\n","\n<div class=\"card card-user\">\n        <ngx-spinner\n        bdColor=\"rgba(51,51,51,0.8)\"\n        size=\"medium\"\n        color=\"#fff\"\n        type=\"ball-scale-ripple-multiple\"\n        >\n        <p style=\"font-size: 20px; color: white\">Loading...</p>\n        </ngx-spinner>\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Sub-Users Details</h2>\n\n    </div>\n    <div class=\"card-body\">\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                <strong>{{ errMsg }}</strong>\n            </p>\n        </div>\n        <div class=\"col-sm-offset-2\">\n            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                <strong>{{ successMsg }}</strong>\n            </p>\n        </div>\n        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"subUserForm\" (ngSubmit)=\"subUserFormData()\" novalidate>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Full Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Full Name\"\n                        formControlName=\"name\" required>\n                    <div *ngFor=\"let validation of validationMessage.name\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"subUserForm.get('name').hasError(validation.type) && (subUserForm.get('name').dirty || subUserForm.get('name').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-6 control-label\"><b>Phone Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\" id=\"inputPhone\" placeholder=\"Enter Phone Number\"\n                        formControlName=\"phone\">\n                    <div *ngFor=\"let validation of validationMessage.phone\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"subUserForm.get('phone').hasError(validation.type) && (subUserForm.get('phone').dirty || subUserForm.get('phone').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Email:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <div class=\"col-sm-offset-2\">\n                            <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Email \"\n                                formControlName=\"email\" required>\n                            <div *ngFor=\"let validation of validationMessage.email\">\n                                <div style=\"color: red;margin-left: 14px;\"\n                                    *ngIf=\"subUserForm.get('email').hasError(validation.type) && (subUserForm.get('email').dirty || subUserForm.get('email').touched)\"\n                                    style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-6 control-label\"><b>Assign Role:&nbsp;<span\n                              style=\"color: darkred\">*</span></b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" Name=\"branchId\" formControlName=\"roleId\">\n                           <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Role----------</option>\n                           <option class=\"dropdown-item\" *ngFor=\"let role of rolePermissionInfo\" value=\"{{role._id}}\">\n                              {{role.title}}\n                           </option>\n                        </select>\n                        <div *ngFor=\"let validation of validationMessage.roleId\">\n                              <div style=\"color: red;margin-left: 14px;\"\n                                *ngIf=\"subUserForm.get('roleId').hasError(validation.type) && (subUserForm.get('roleId').dirty || subUserForm.get('roleId').touched)\"\n                                >\n                                {{ validation.message }}\n                              </div>\n                            </div>\n                     </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"subUserForm.invalid\">Add Subuser</button>\n                    <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../show-subusers-list\">Cancel</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubUserService } from '../sub-user-service/sub-user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-show-subusers-list',\n  templateUrl: './show-subusers-list.component.html',\n  styleUrls: ['./show-subusers-list.component.scss']\n})\nexport class ShowSubusersListComponent implements OnInit {\n\n  showCard = {};\n  // subUsersListData: any = Object;\n  subUsersListData: any = []; \n\n\n  constructor(private api: SubUserService, public fb: FormBuilder, private ngZone: NgZone, private router: Router) { }\n\n  ngOnInit() {\n    this.getSubUsersList();\n  }\n  \n  //Method for show sub-users in the list\n  getSubUsersList() {\n    try{\n    this.api.getSubUsersListData().subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.subUsersListData = data.users;\n        if(data.users.length == 0){\n          this.router.navigateByUrl(\"/pages/sub-user/add-subuser\");\n        }\n        else{\n          const len = Object.keys(this.subUsersListData).length;\n          for (var i = 0; i < len; i++) {\n            this.showCard[this.subUsersListData[i]._id] = true;\n          }\n        }\n      }\n    })\n  }\n  catch(err){\n    console.log(err);\n  }\n  }\n\n//Method For collapsed List Data\n  showData(subUsersId: String) {\n    try{\n    this.showCard[`${subUsersId}`] = !this.showCard[`${subUsersId}`];\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n\n  //Method for remove company list\n  deleteSubUserListData(subUserId: String) {\n    try{\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeSubUsersData(subUserId).subscribe((data) => {\n            if (data.status === \"success\" || data.status === 200) {\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              )\n              this.getSubUsersList();\n            }\n          })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your Data Safe',\n            'error'\n          )\n        }\n      })\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Sub-Users List</h2>\n        <a class=\"btn btn-primary\" routerLink=\"../add-subuser\" style=\"float:right;\"><i class=\"fa fa-plus\"></i>&nbsp;\n            Add User</a>\n    </div>\n\n    <div class=\"panel-body\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" *ngFor=\"let list of subUsersListData\">\n                <strong><b (click)=\"showData(list._id)\"\n                        style=\"cursor: pointer\">{{list.profile.contactInfo?.firstName + \" \" + list.profile.contactInfo?.lastName}}</b></strong>\n                <div style=\"float: right;\">\n                    <i class=\"dropdown-toggle\" (click)=\"showData(list._id)\"></i>\n                </div>\n                <div class=\"card\" style=\"background-color:ghostwhite\" [hidden]=\"showCard[list._id]\">\n                    <table class=\"table\" style=\"margin: auto\">\n                        <tr>\n                            <td><strong>Name:</strong></td>\n                            <td>{{list.profile.contactInfo?.firstName + \" \" + list.profile.contactInfo?.lastName}}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Phone No.</strong></td>\n                            <td>{{ list.profile.contactInfo.phone }}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Email:</strong></td>\n                            <td>{{ list.local.email }}</td>\n                        </tr>\n                    </table>\n                    <div>\n                        <a routerLink=\"../update-subuser-data/{{list._id}}\" style=\"float: right;\"\n                            class=\"btn btn-primary\">\n                            <i class=\"fa fa-pencil-square-o\"></i></a>\n                        <button style=\"float: right;\" class=\"btn btn-danger\" type=\"button\"\n                            (click)=\"deleteSubUserListData(list._id)\">\n                            <i class=\"fa fa-trash\"></i></button>\n\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sub-user',\n  templateUrl: './sub-user.component.html',\n  styleUrls: ['./sub-user.component.scss']\n})\nexport class SubUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SubUserComponent } from './sub-user.component';\nimport { AddSubusersComponent } from './add-subusers/add-subusers.component';\nimport { ShowSubusersListComponent } from './show-subusers-list/show-subusers-list.component';\nimport { UpdateSubusersDataComponent } from './update-subusers-data/update-subusers-data.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\n\nconst route : Routes = [\n    {\n      path :'',\n      component : SubUserComponent,\n      canActivate:[AuthGuard],\n      children :[\n        {\n         path: 'add-subuser',\n        component: AddSubusersComponent,\n        },\n        {\n          path: 'show-subusers-list',\n          component:ShowSubusersListComponent,\n        },\n        {\n          path: 'update-subuser-data/:subUserId',\n          component:UpdateSubusersDataComponent,\n        },\n        {\n          path:'',\n          redirectTo :'show-subusers-list',\n          pathMatch:'full',\n        },\n      ],\n    }\n  ];\n\n@NgModule({\n    declarations: [],\n    imports: [\n      CommonModule,\n      RouterModule.forChild(route),\n    ]\n  })\n\n  export class SubUserRoutingModule{}","import { Injectable } from '@angular/core';\nimport { HttpHeaders,HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { SubUserData } from 'src/app/auth/sub-user';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubUserService {\n\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n  constructor(private http: HttpClient) { }\n\n//Method for add new sub-users and submit sub-users form data\n\naddSubUsersData(data:SubUserData):Observable<any>{\n  try{\n    data.redirectUrl = `${environment.appBaseUrl}/users/generate-password`;\n    const parentUserId = localStorage.getItem(\"token\");\n    let apiURL = `${this.endpoint}/user/add-subuser/${parentUserId}`;\n    return this.http.post(apiURL, data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n// Method for get data from server and show company list\ngetSubUsersListData(): Observable<any> {\ntry {\n  const parentUserId = localStorage.getItem(\"token\");\n  let apiURL = `${this.endpoint}/user/list-subusers/${parentUserId}`;\n   return this.http.get(apiURL).pipe(\n     catchError(this.errorMgmt)\n   )\n}\ncatch (err) {\n  console.log(err);\n}\n}\n\n//Method for Delete data of company list\nremoveSubUsersData(subUserId:String):Observable<any>{\n  try{\n    const parentUserId = localStorage.getItem(\"token\");\n    let apiURL = `${this.endpoint}/user/delete-subuser/${parentUserId}/${subUserId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n//Method for submit updated subusres details  Data and calling API\nsubmitUpdateSubUserData(data:SubUserData,subUserId: String): Observable<any> {\n  try {\n    const parentUserId = localStorage.getItem(\"token\");\n    let apiURL = `${this.endpoint}/user/update-subuser/${parentUserId}/${subUserId}`;\n    return this.http.post(apiURL, data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n\n //Create method for manage errors when request and return response from the server\n errorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    //Handle client side error\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    //Handle server side error\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Sub User Details\nsubUserDetails(userId):Observable<any>{\n  try {\n  let apiURL = `${this.endpoint}/user/subuser-details/${userId}`;\n   return this.http.get(apiURL).pipe(\n     catchError(this.errorMgmt)\n   )\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n}\n"]}