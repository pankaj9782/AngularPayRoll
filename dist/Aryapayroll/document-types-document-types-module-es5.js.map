{"version":3,"sources":["webpack:///src/app/pages/document-types/document-types-routing.module.ts","webpack:///src/app/pages/document-types/document-types.module.ts","webpack:///src/app/pages/document-types/update-document-types/update-document-types.component.ts","webpack:///src/app/pages/document-types/update-document-types/update-document-types.component.html","webpack:///src/app/pages/document-types/document-types.component.ts","webpack:///src/app/pages/document-types/document-types.component.html","webpack:///src/app/pages/document-types/add-document-types/add-document-types.component.ts","webpack:///src/app/pages/document-types/add-document-types/add-document-types.component.html","webpack:///src/app/pages/document-types/list-document-types/list-document-types.component.ts","webpack:///src/app/pages/document-types/list-document-types/list-document-types.component.html"],"names":["route","path","component","canActivate","children","redirectTo","pathMatch","DocumenttypesRoutingModule","forChild","declarations","imports","DocumenttypesModule","UpdateDocumentTypesComponent","fob","router","api","ngZone","util","successMessage","errorMsg","val","validationMessage","type","message","documentTypeId","snapshot","paramMap","get","moduleExists","subscribe","data","status","navigateByUrl","companyId","valueCheck","documentValidation","permissionInfo","permissionRoleInfo","search","documentForm","disable","documentTypeDetails","existingValue","group","title","required","description","isRequired","cleanDocumnetTypeUpdateForm","cleanFormLevelOne","updateDocument","value","successMsg","setTimeout","handleErrors","run","errMsg","err","console","log","updateDoc","selector","templateUrl","DocumenttypesComponent","AddDocumentTypesComponent","ngzone","isListAvaliable","cleanDocumnetTypeForm","addDocumentSubmit","documentData","length","documentTypeStatus","addDocumentType","ListDocumentTypesComponent","document","Array","showCard","documentList","len","leaveTypeId","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","removeDocument","dismiss","DismissReason","cancel"],"mappings":"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","file":"document-types-document-types-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DocumenttypesComponent } from './document-types.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListDocumentTypesComponent } from './list-document-types/list-document-types.component';\nimport { AddDocumentTypesComponent } from './add-document-types/add-document-types.component';\nimport { UpdateDocumentTypesComponent } from './update-document-types/update-document-types.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : DocumenttypesComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-document-types',\n        component: ListDocumentTypesComponent,\n      },\n      {\n        path: 'add-document-types',\n        component: AddDocumentTypesComponent\n      },\n      {\n        // path: 'update-document-type/:companyId/:leaveTypeId',\n        path: 'update-document-types/:companyId/:documentTypeId',\n        component: UpdateDocumentTypesComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-document-types',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class DocumenttypesRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocumenttypesRoutingModule } from './document-types-routing.module';\nimport { DocumenttypesComponent } from './document-types.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListDocumentTypesComponent } from './list-document-types/list-document-types.component';\nimport { AddDocumentTypesComponent } from './add-document-types/add-document-types.component';\nimport { UpdateDocumentTypesComponent } from './update-document-types/update-document-types.component';\n\n@NgModule({\n  declarations: [\n     DocumenttypesComponent,\n     ListDocumentTypesComponent,\n     AddDocumentTypesComponent,\n     UpdateDocumentTypesComponent\n    ],\n  \n  imports: [\n    CommonModule,\n    DocumenttypesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class DocumenttypesModule { }\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DocumentServices } from '../document-services/document.services';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-document-types',\n  templateUrl: 'update-document-types.component.html'\n})\n\nexport class UpdateDocumentTypesComponent implements OnInit {\n\n    public companyId: any;\n    public documentTypeId: any;\n    documentForm: any;\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    errorMsg: boolean = false;\n    existingValue:any;\n    public val: any= [];\n  permissionInfo: any;\n\n    constructor(private route: ActivatedRoute, private fob:FormBuilder, private router: Router,\n            private api: DocumentServices,private ngZone: NgZone,\n            private util: UtilitiesService ){\n              this.documentTypeId = this.route.snapshot.paramMap.get(\"documentTypeId\");\n              this.util.moduleExists(this.documentTypeId,'DocumentTypes').subscribe((data)=>{\n                if(data.status === 'success'){\n                  if(!data.data){\n                    this.router.navigateByUrl('/pages/document-types/list-document-types');\n                  }\n                }\n              })\n            }\n\n    ngOnInit() {\n      this.companyId = this.route.snapshot.paramMap.get(\"companyId\");\n      this.valueCheck();\n      this.documentValidation();\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Edit DocumentType') === -1){\n        this.documentForm.disable();\n      }\n    }\n\n    valueCheck() {\n      this.api.documentTypeDetails(this.documentTypeId).subscribe(data=>{\n        if(data.status === 200 || data.status === 'success') {\n          this.existingValue = data.data;\n            this.documentForm = this.fob.group({\n              title: new FormControl(this.existingValue.title,Validators.required),\n              description: new FormControl(this.existingValue.description),\n              isRequired: new FormControl(this.existingValue.isRequired)\n            })\n        }\n      })\n    }\n\n    updateDoc() {\n      try{\n        let cleanDocumnetTypeUpdateForm = this.util.cleanFormLevelOne(this.documentForm);\n        this.api.updateDocument(cleanDocumnetTypeUpdateForm.value,this.companyId,this.documentTypeId).subscribe(data=>{\n          if(data.status === 'success' || data.status === 200) {\n            this.successMessage = true ;\n            this.errorMsg = false ;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.ngZone.run(()=>this.router.navigateByUrl('/pages/document-types/list-document-types'));\n            },2000);\n          } else if(data.status == \"error\") {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            },3000);\n          }\n        })\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    documentValidation() {\n      try {\n        this.documentForm = this.fob.group({\n          title: new FormControl('',Validators.required),\n          description: new FormControl(''),\n          isRequired: new FormControl(false)\n          })\n        }\n      catch (err) {\n        console.log(err);\n      }\n    }\n\n\n    validationMessage = {\n      'title': [\n        { type: 'required', message: 'Title is Required' },\n      ],\n  }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n}","<div class=\"card card-user\">\n    <div class=\"card-header\">\n       <h2 class=\"card-title text-center\">Update Document Type</h2>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"documentForm\" (ngSubmit)=\"updateDoc()\" novalidate>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Title:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"  formControlName=\"title\">\n\n               <div *ngFor=\"let validation of validationMessage.title\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"documentForm.get('title').hasError(validation.type) && (documentForm.get('title').dirty || documentForm.get('title').touched)\"\n                  >\n                  {{ validation.message }}</div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Description: </b></label>\n            <div class=\"col-sm-offset-2\">\n               <textarea class=\"form-control\" type=\"textarea\" id=\"description\" placeholder=\"Enter description\" formControlName=\"description\"\n                  ></textarea>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"control-label\">Is Required ?</label>:\n            <input type=\"checkbox\" name=\"required\" formControlName=\"isRequired\">\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\"\n               class=\"btn btn-success\" [disabled]=\"documentForm.invalid || permissionInfo.search('Edit DocumentType') === -1\">Update</button>\n               <button type=\"button\"\n               class=\"btn btn-danger\" routerLink=\"../../../list-document-types\">cancel</button>\n            </div>\n         </div>\n      </form>\n\n\n   </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-document-types',\n  templateUrl: './document-types.component.html'\n})\nexport class DocumenttypesComponent implements OnInit {\n\n  constructor(){}\n  ngOnInit(){\n\n  }\n \n\n}","<router-outlet></router-outlet>","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DocumentServices } from '../document-services/document.services';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n    selector: 'app-add-document-types',\n    templateUrl: './add-document-types.component.html'\n})\n\nexport class AddDocumentTypesComponent implements OnInit {\n\n    documentForm:FormGroup;\n    public companyId;\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    errorMsg: boolean = false;\n    permissionInfo: any;\n\n    constructor(private api: DocumentServices,\n            private fob: FormBuilder,\n            private router: Router,\n            private ngzone: NgZone,\n            private util: UtilitiesService ){\n              this.isListAvaliable();\n            }\n\n    ngOnInit() {\n      this.documentValidation();\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create DocumentType') === -1){\n        this.documentForm.disable();\n      }\n    }\n\n    documentValidation() {\n        try {\n          this.documentForm = this.fob.group({\n            title: new FormControl('',Validators.required),\n            description: new FormControl(''),\n            isRequired: new FormControl(false)\n            })\n          }\n        catch (err) {\n          console.log(err);\n        }\n    }\n\n    addDocumentType() {\n      try{\n        let cleanDocumnetTypeForm = this.util.cleanFormLevelOne(this.documentForm);\n        this.api.addDocumentSubmit(cleanDocumnetTypeForm.value, this.companyId).subscribe(data=>{\n          if(data.status === 'success' || data.status === 200) {\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n              setTimeout(() =>{\n                this.handleErrors();\n                this.ngzone.run(()=>this.router.navigateByUrl('/pages/document-types/list-document-types'));\n              },2000);\n          } else if(data.status === \"error\"|| data.status === 404){\n              this.errorMsg = true;\n              this.successMessage = false;\n              this.errMsg = data.message;\n              setTimeout(() =>{\n                this.handleErrors();\n              },3000);\n            }\n          })\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    validationMessage = {\n        'title': [\n          { type: 'required', message: 'Title is required' },\n        ],\n    }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n  isListAvaliable(){\n    try{\n      this.api.documentData().subscribe((data) =>{\n        if(data.status === 'success'){\n          if(data.data.length > 0 && this.util.documentTypeStatus !== 1){\n            this.router.navigateByUrl(\"/pages/document-types/list-document-types\");\n            this.util.documentTypeStatus = 0;\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Document Type Details</h2>\n      <button [disabled]=\"permissionInfo.search('Create DocumentType') === -1\"\n      class=\"btn btn-primary\" type=\"button\" routerLink=\"../list-document-types\" style=\"float: right;\"><i class=\"fa fa-list\"></i>&nbsp; Show Document List</button>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n         </p>\n      </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"documentForm\" (ngSubmit)=\"addDocumentType()\" novalidate>\n         <div class=\"form-group\">\n             <label class=\"col-sm-6 control-label\"><b>Title: &nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"titleDoc\" placeholder=\"Enter Title\" formControlName=\"title\" >\n               <div *ngFor=\"let validation of validationMessage.title\">\n                  <div style=\"color: red;margin-left: 14px;\" *ngIf=\"documentForm.get('title').hasError(validation.type) && (documentForm.get('title').dirty || documentForm.get('title').touched)\" style=\"color: red;margin-left: 14px;\">{{ validation.message }}</div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Description: </b></label>\n            <div class=\"col-sm-offset-2\">\n               <textarea class=\"form-control\" type=\"textarea\" id=\"descriptionDoc\" placeholder=\"Enter description\" formControlName=\"description\"></textarea>\n            </div>\n         </div>\n         <div class=\"form-group\">\n            <label class=\"control-label\">Is Required </label>: <input type=\"checkbox\" name=\"required\" formControlName=\"isRequired\">\n         </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\"\n                class=\"btn btn-success\" [disabled]=\"documentForm.invalid || permissionInfo.search('Create DocumentType') === -1\">Submit</button>\n               <button type=\"button\"\n                class=\"btn btn-danger\" routerLink=\"../list-document-types\">cancel</button>\n            </div>\n         </div>\n      </form>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { DocumentServices } from '../document-services/document.services';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-document-types',\n    templateUrl: './list-document-types.component.html'\n})\n\nexport class ListDocumentTypesComponent implements OnInit {\n\n  public document = new Array();\n  showCard:any = {};\n  permissionInfo: any;\n\n  constructor(private api: DocumentServices,\n    public route:Router,\n    private util: UtilitiesService) {}\n\n  ngOnInit() {\n    this.documentList();\n    this.permissionInfo = this.util.permissionRoleInfo\n  }\n\n  documentList() {\n    try{\n      this.api.documentData().subscribe(data=>{\n      if(data.status === 200 || data.status === \"success\") {\n      const len = data.data.length;\n      if(len == 0){\n        this.route.navigateByUrl(\"/pages/document-types/add-document-types\");\n      } else {\n        this.document = data.data;\n      }\n      }\n    })\n    }catch(err){\n      console.log(err.message);\n    }\n  }\n\n  showData(title: String) {\n      this.showCard[`${title}`] = !this.showCard[`${title}`];\n  }\n\n  removeDocument(leaveTypeId:String){\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeDocument(leaveTypeId).subscribe((data)=>{\n            if(data.status === 'success'){\n              swalWithBootstrapButtons.fire(\n                'Deleted!',\n                data.message,\n                'success'\n              );\n              this.documentList();\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                'ERROR!',\n                data.message,\n                'error'\n              );\n            }\n        });\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your list data safe',\n            'error'\n          )\n        }\n      })\n  }\n  addDocumentType(){\n    try{\n      this.util.documentTypeStatus = 1;\n    }catch(err){\n      console.log(err)\n    }\n  }\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Document Type</h2>\n        <button [disabled]=\"permissionInfo.search('Create DocumentType') === -1\"\n         class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/document-types/add-document-types\" style=\"float: right;\" (click)= \"addDocumentType()\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Document Type</button\n            >\n    </div>\n    <div class=\"table-responsive-lg\">\n        <table class=\"table\" style=\"text-align: center;\">\n            <thead class=\" text-primary\">\n                <tr>\n                <th> S.No </th>\n                <th> Title </th>\n                <th>Description</th>\n                <th>Is Required</th>\n                <th>Action</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let list of document; let i = index\">\n                <tr >\n                <td><b>{{ i+1 }}.</b></td>\n                <td> {{ list.title }} </td>\n                <td > {{list.description}}</td>\n                <td *ngIf=\"list.isRequired\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                <td *ngIf=\"!list.isRequired\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n                <td>\n                    <a [class.disabled]=\"permissionInfo.search('Edit DocumentType') === -1\"\n                    routerLink=\"/pages/document-types/update-document-types/{{list.companyId}}/{{list._id}}\" class=\"btn btn-primary\" ><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                    <button [disabled]=\"permissionInfo.search('Delete DocumentType') === -1\"\n                     class=\"btn btn-danger\" type=\"button\" (click)=\"removeDocument(list._id)\"><i class=\"fa fa-trash\"></i></button\n                        >\n                </td>\n                </tr>\n        </table>\n    </div>\n\n</div>"]}