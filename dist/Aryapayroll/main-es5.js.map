{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/authGuard/auth.guard.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/utilities/utilities.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","appBaseUrl","apiBaseUrl","production","AuthGuard","router","route","state","url","verifyLogin","isLoggedIn","navigateByUrl","status","localStorage","getItem","providedIn","ApiService","http","endpoint","headers","set","data","redirectUrl","apiURL","post","pipe","errorMgmt","err","console","log","token","error","errorMessage","ErrorEvent","message","setItem","sessionStorage","removeItem","countryName","stateName","parentUserId","userId","get","companyId","type","isCompanyLogo","formData","FormData","append","value","apiUrl","timezone","timeZone","employeeId","undefined","startDate","endDate","gradeuRuleId","AppComponent","permissionAPI","util","title","length","permissionDetails","subscribe","permissionRoleInfo","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","UtilitiesService","formGroup","cleaningStuff","key","nestedKey","nestedNestedKey","setValue","trim","nestedNestedNestedKey","moduleId","routes","path","loadChildren","then","m","UsersModule","PagesModule","redirectTo","pathMatch","AppRoutingModule","onSameUrlNavigation","exports","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  appBaseUrl: `http://127.0.0.1:4200`,\r\n  apiBaseUrl: `http://192.168.1.140:3002`,\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, Router, } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router:Router){\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state:RouterStateSnapshot): boolean {\n      let url: string = state.url;\n      return this.verifyLogin(url);\n    }\n\n    verifyLogin(url) : boolean {\n      if(!this.isLoggedIn()){\n        this.router.navigateByUrl('users/login');\n        return false;\n      }\n      else if(this.isLoggedIn()){\n        return true;\n      }\n    }\n\n      public isLoggedIn(): boolean{\n        let status = false;\n        if(localStorage.getItem('token') == \"undefined\" || localStorage.getItem('token') == null){\n          status = false;\n        }\n        else{\n          status = true;\n        }\n        return status;\n      }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Auth } from '../auth/auth';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError} from 'rxjs';\nimport { CompanyData } from '../auth/company-data';\nimport { environment } from '../../environments/environment';\nimport { AddCurrency } from '../auth/addCurrency';\nimport { UpdateProfile } from '../auth/updateProfile';\nimport { gradeuRule } from '../auth/gradeRule';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n  constructor(private http: HttpClient) { }\n\n  //Method for calling Register API\n  submitSignup(data: Auth): Observable<any> {\n    try {\n      data.redirectUrl = `${environment.appBaseUrl}/users/generate-password`;   // Provide daynamic environment\n      let apiURL = `${this.endpoint}/user/signup-via-email`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for calling login API\n  submitLogin(data: Auth): Observable<any> {\n    try {\n      let apiURL = `${this.endpoint}/users/login`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Submit password and calling API\n  submitPasswordData(data: Auth, token: string): Observable<any> {\n    try {\n      data.token = token;\n      let apiURL = `${this.endpoint}/user/confirm-registration`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Submit forgot mail and calling API\n  submitForgotPasswordData(data: Auth): Observable<any> {\n    try {\n      data.redirectUrl = `${environment.appBaseUrl}/users/reset-password`;\n      let apiURL = `${this.endpoint}/user/password/request-reset`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Submit password and calling API\n  submitResetPasswordData(data: Auth, token: string): Observable<any> {\n    try {\n      data.token = token;\n      let apiURL = `${this.endpoint}/user/password/set`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  //Create method for manage errors when request and return response from the server\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      //Handle client side error\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      //Handle server side error\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n//Method for logout\n  submitLogout(): void {\n    localStorage.setItem('token', \"undefined\");\n    sessionStorage.removeItem('companyId');\n  }\n\n  //Method for submit company form Data and calling API\n  submitCompanyData(data: CompanyData,countryName,stateName): Observable<any> {\n    try {\n      data.countryName = countryName;\n      data.stateName = stateName;\n      const parentUserId = localStorage.getItem(\"token\");\n      let apiURL = `${this.endpoint}/company/add-company/${parentUserId}`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Method for add currency\n  submitCurrency(data: AddCurrency): Observable<any>{\n    try{\n      const userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/company/add-currency/${userId}`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // List Currency\n  listCurrency(): Observable<any>{\n    try{\n      const userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/company/list-currency/${userId}`;\n      return this.http.get(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  //Method for submit updated company form Data and calling API\n  submitUpdateCompanyData(data: CompanyData,companyId: String): Observable<any> {\n    try {\n      const parentUserId = localStorage.getItem(\"token\");\n      let apiURL = `${this.endpoint}/company/update-company/${parentUserId}/${companyId}`;\n      return this.http.post(apiURL, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n// Method for get data from server and show company list\n  getListData(): Observable<any> {\n    try {\n      const parentUserId = localStorage.getItem(\"token\");\n      let apiURL = `${this.endpoint}/company/company-list/${parentUserId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n       )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Method for get individual company data\n  getIndividualData(companyId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/details/${companyId}`;\n      return this.http.get(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n//Method for Delete data of company list\n    removeData(companyId:String):Observable<any>{\n      try{\n        let apiURL = `${this.endpoint}/company/delete-company/${companyId}`;\n        return this.http.delete(apiURL).pipe(\n          catchError(this.errorMgmt)\n        )\n      }\n      catch(err){\n        console.log(err);\n      }\n    }\n\n  // Upload Company Logo and Company Report Logo\n  uploadCompanyLogo(data,type,isCompanyLogo): Observable<any>{\n    try {\n      let companyId = sessionStorage.getItem('companyId');\n      const formData = new FormData();\n      formData.append('companyLogo',data.get('companyLogo').value);\n      let apiUrl = `${this.endpoint}/company/upload-logo/${companyId}/${type}/${isCompanyLogo}`;\n      return this.http.post<any>(apiUrl, formData).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n\n  // Method for get User Details\n  getUserDetails():Observable<any>{\n    try{\n      let userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/user-details/${userId}`;\n      return this.http.get(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  // Get Time Zones\n  getTimeZone(): Observable<any>{\n    try {\n      let apiURL = `${this.endpoint}/availabe-timezone`;\n      return this.http.get(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Update User Profile\n  updateUSerProfile(data: UpdateProfile, timezone):Observable<any>{\n    try {\n      data.timeZone = timezone;\n      let userId = localStorage.getItem('token');\n      let apiUrl = `${this.endpoint}/user/update-details/${userId}`;\n      return this.http.post(apiUrl, data).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Upload Profile Image\n  uploadProfileImage(data,type,employeeId): Observable<any>{\n    try {\n      let companyId,userId;\n      if(type === 'User'){\n        userId = localStorage.getItem('token');\n        companyId = undefined;\n      } else if(type === 'Employee'){\n        companyId = sessionStorage.getItem('companyId');\n        userId = employeeId;\n      }\n      const formData = new FormData();\n      formData.append('avatar',data.get('avatar').value);\n      let apiUrl = `${this.endpoint}/user/upload-profile-picture/${userId}/${companyId}/${type}`;\n      return this.http.post<any>(apiUrl, formData).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n\n  // Get User Permission\n  permissionDetails():Observable<any>{\n    try {\n      let userId = localStorage.getItem('token');\n      let apiURL = `${this.endpoint}/user/permission-details/${userId}`;\n      return this.http.get(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  // Get User Permission\n  getCompanyReport(startDate, endDate, gradeuRuleId):Observable<any>{\n    try {\n      let companyId = localStorage.getItem('companyId');\n      let apiURL = `${this.endpoint}/company/excel-compnay-details/${companyId}/${startDate}/${endDate}/${gradeuRuleId}`;\n      return this.http.get(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './services/api.service';\nimport { UtilitiesService } from './utilities/utilities.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Demo';\n\n  constructor(\n    private permissionAPI: ApiService,\n    private util: UtilitiesService\n  ) { }\n\n  ngOnInit(){\n    if(sessionStorage.length === 0 ){\n      sessionStorage.setItem('companyId', localStorage.getItem('companyId'));\n    }\n    this.permissionAPI.permissionDetails().subscribe((data)=>{\n      if(data.status === 'success'){\n        this.util.permissionRoleInfo = data.data;\n      }\n    })\n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\nimport {\n  HashLocationStrategy,\n  Location,\n  LocationStrategy,\n  DatePipe,\n  TitleCasePipe,\n} from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ApiService } from \"./services/api.service\";\nimport { AuthGuard } from \"./authGuard/auth.guard\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { UtilitiesService } from \"./utilities/utilities.service\";\nimport { NotifierModule } from \"angular-notifier\";\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    NotifierModule,\n    BsDatepickerModule.forRoot(),\n    NgxPaginationModule,\n  ],\n  providers: [ApiService, AuthGuard, UtilitiesService, DatePipe, TitleCasePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilitiesService {\ntimeZone = 'Asia/Kolkata';\ndepartmentSatus: any;\nbranchesSatus: any;\nleaveStatus: any;\njobProfileStatus: any;\njobCategoryStatus: any;\nskillCategoryStatus: any;\ndocumentTypeStatus: any;\nholidaysStatus: any;\npaymentHeadStatus: any;\ngradeRuleStatus: any;\npermissionRoleInfo: any;\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n  /**\n   * Clean Form or clear unwanted values\n   */\npublic cleanFormLevelTwo(formGroup: FormGroup) {\n  try{\n    let cleaningStuff = formGroup.value;\n\n    for(var key in cleaningStuff){\n          if(typeof(cleaningStuff[key]) === 'object'){\n          for(var nestedKey in cleaningStuff[key]){\n              if(typeof(cleaningStuff[key][nestedKey]) === 'object'){\n              for(var nestedNestedKey in cleaningStuff[key][nestedKey]){\n                if(cleaningStuff[key][nestedKey][nestedNestedKey] === null){\n                  formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey).setValue('');\n                } else if(cleaningStuff[key][nestedKey][nestedNestedKey] === true || cleaningStuff[key][nestedKey][nestedNestedKey] === false) {\n                  // Do Nothing\n                } else {\n                  formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey).setValue(formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey).value.trim());\n                }\n              }\n            } else{\n              if(cleaningStuff[key][nestedKey] === null){\n                formGroup.get(key+'.'+nestedKey).setValue('');\n            } else if(cleaningStuff[key][nestedKey] === true || cleaningStuff[key][nestedKey] === false) {\n              // DO Nothhing\n            } else {\n              formGroup.get(key+'.'+nestedKey).setValue(formGroup.get(key+'.'+nestedKey).value.trim());\n            }\n            }\n        }\n      } else{\n        if(cleaningStuff[key] === null){\n          formGroup.get(key).setValue('');\n        } else if (cleaningStuff[key] === true || cleaningStuff[key] === false){\n          // Do Nothing\n        } else {\n          formGroup.get(key).setValue(formGroup.get(key).value.trim());\n        }\n      }\n\n  }\n  return formGroup;\n  } catch(err){\n    console.log(err);\n  }\n\n}\n\npublic cleanFormLevelOne(formGroup: FormGroup) {\n  try{\n      let cleaningStuff = formGroup.value;\n  for(var key in cleaningStuff){\n    if(typeof(cleaningStuff[key]) === 'object'){\n      for(var nestedKey in cleaningStuff[key]){\n        if(cleaningStuff[key][nestedKey] === null){\n          formGroup.get(key+'.'+nestedKey).setValue('');\n      } else if(cleaningStuff[key][nestedKey] === true || cleaningStuff[key][nestedKey] === false) {\n        // DO Nothing\n      } else {\n        formGroup.get(key+'.'+nestedKey).setValue(formGroup.get(key+'.'+nestedKey).value.trim());\n      }\n    }\n  } else {\n    if(cleaningStuff[key] === null){\n      formGroup.get(key).setValue('');\n    } else if(cleaningStuff[key] === true || cleaningStuff[key] === false) {\n      // DO Nothing\n    } else {\n      formGroup.get(key).setValue(formGroup.get(key).value.trim());\n\n    }\n  }\n}\n  return formGroup;\n  } catch(err){\n    console.log(err);\n  }\n\n}\n\n // Clean Form or clear unwanted values\n public cleanFormLevelThree(formGroup: FormGroup) {\n  try{\n    let cleaningStuff = formGroup.value;\n    for(var key in cleaningStuff){\n          if(typeof(cleaningStuff[key]) === 'object'){\n          for(var nestedKey in cleaningStuff[key]){\n              if(typeof(cleaningStuff[key][nestedKey]) === 'object'){\n              for(var nestedNestedKey in cleaningStuff[key][nestedKey]){\n                if(typeof(cleaningStuff[key][nestedKey][nestedNestedKey]) === 'object'){\n                  for(var nestedNestedNestedKey in cleaningStuff[key][nestedKey][nestedNestedKey]){\n                    if(cleaningStuff[key][nestedKey][nestedNestedKey][nestedNestedNestedKey] === null){\n                      formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey+'.'+nestedNestedNestedKey).setValue('');\n                    } else if(cleaningStuff[key][nestedKey][nestedNestedKey][nestedNestedNestedKey] === true || cleaningStuff[key][nestedKey][nestedNestedKey][nestedNestedNestedKey] === false) {\n                      // Do Nothing\n                    } else {\n                      formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey+'.'+nestedNestedNestedKey).setValue(formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey+'.'+nestedNestedNestedKey).value.trim());\n                    }\n                  }\n                } else {\n                  if(cleaningStuff[key][nestedKey][nestedNestedKey] === null){\n                    formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey).setValue('');\n                  } else if(cleaningStuff[key][nestedKey][nestedNestedKey] === true || cleaningStuff[key][nestedKey][nestedNestedKey] === false) {\n                    // Do Nothing\n                  } else {\n                    formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey).setValue(formGroup.get(key+'.'+nestedKey+'.'+nestedNestedKey).value.trim());\n                  }\n                }\n              }\n            } else{\n              if(cleaningStuff[key][nestedKey] === null){\n                formGroup.get(key+'.'+nestedKey).setValue('');\n            } else if(cleaningStuff[key][nestedKey] === true || cleaningStuff[key][nestedKey] === false) {\n              // DO Nothhing\n            } else {\n              formGroup.get(key+'.'+nestedKey).setValue(formGroup.get(key+'.'+nestedKey).value.trim());\n            }\n            }\n        }\n      } else{\n        if(cleaningStuff[key] === null){\n          formGroup.get(key).setValue('');\n        } else if (cleaningStuff[key] === true || cleaningStuff[key] === false){\n          // Do Nothing\n        } else {\n          formGroup.get(key).setValue(formGroup.get(key).value.trim());\n        }\n      }\n\n  }\n  return formGroup;\n  } catch(err){\n    console.log(err);\n  }\n\n}\n\n// Check Module Exists\nmoduleExists(moduleId,type): Observable<any>{\n  try{\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/company/check-module-exist/${moduleId}/${companyId}/${type}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path:'users',\n    loadChildren:() => import('../app/users/users.module')\n    .then(m => m.UsersModule),\n  },\n  {\n    path: 'pages',\n    loadChildren:() => import ('../app/pages/pages.module')\n    .then(m=>m.PagesModule),\n  },\n  {\n    path:'',\n    redirectTo:'users',\n    pathMatch:'full',\n  },\n  {\n    path: '',\n    redirectTo: 'pages',\n    pathMatch:'full',\n  },\n//   {\n//     path: \"**\",\n//     component: PageNotFoundComponent,\n// }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    onSameUrlNavigation : 'reload'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}