{"version":3,"sources":["./src/app/pages/company/company.component.ts","./src/app/pages/company/company.component.html","./src/app/pages/company/company-routing.module.ts","./src/app/pages/company/update-company-list/update-company-list.component.ts","./src/app/pages/company/update-company-list/update-company-list.component.html","./src/app/pages/company/company-report/company-report.component.ts","./src/app/pages/company/company-report/company-report.component.html","./src/app/pages/company/company.module.ts","./src/app/pages/company/add-company/add-company.component.ts","./src/app/pages/company/add-company/add-company.component.html"],"names":[],"mappings":"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","file":"company-company-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.scss']\n})\nexport class CompanyComponent implements OnInit {\n\n  constructor(){\n  }\n  ngOnInit(){\n  }\n\n}\n","\n<router-outlet></router-outlet>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CompanyComponent } from './company.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { AddCompanyComponent } from './add-company/add-company.component';\nimport { UpdateCompanyListComponent } from './update-company-list/update-company-list.component';\nimport { CompanyReportComponent } from './company-report/company-report.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : CompanyComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'add-company',\n        component: AddCompanyComponent,\n      },\n      {\n        path: 'update-company-list/:companyId',\n        component:UpdateCompanyListComponent,\n      },\n      {\n        path: 'company-report',\n        component: CompanyReportComponent,\n      },\n      {\n        path:'',\n        redirectTo :'company-list',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class CompanyRoutingModule { }\n","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CompanyListComponent } from '../../dashboard/company-list/company-list.component';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-company-list',\n  templateUrl: './update-company-list.component.html',\n  styleUrls: ['./update-company-list.component.scss'],\n  providers: [CompanyListComponent],\n})\nexport class UpdateCompanyListComponent implements OnInit,OnDestroy {\n  ngOnDestroy(): void {\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).removeAttribute('disabled');\n  }\n\n  updateCompanyForm: any;\n  addCurrencyForm:FormGroup;\n  successMsg: String;\n  successMessage: Boolean = false;\n  errMsg: String;\n  errorMsg: Boolean = false;\n  snapshotParam: String;\n  listCompanyData: any;\n  url: any;\n  updateCompanyLogoForm: any;\n  existingUrl: any;\n  permissionInfo: any;\n  // currency: any;\n  // currencyOptionValue = 'Please Add Currency';\n\n\n  constructor(private route: ActivatedRoute,\n     private api: ApiService,\n     public fb: FormBuilder,\n     private ngZone: NgZone,\n     private router: Router,\n     private util: UtilitiesService,\n    ) { }\n\n  ngOnInit() { //Calling methods for validation\n    this.permissionInfo = this.util.permissionRoleInfo;\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).setAttribute('disabled','disabled');\n    this.snapshotParam = this.route.snapshot.paramMap.get(\"companyId\");\n    // this.listCurrency();\n    // this.addCurrencyFormValidation();\n    this.formValidation();\n    this.existingCompanyDataValues();\n    this.updateComapnyLogo();\n    if(this.permissionInfo.search('Edit Company') === -1){\n      this.updateCompanyForm.disable();\n    }\n  }\n\n// List Currency Information\n// listCurrency(){\n//   try{\n//     this.api.listCurrency().subscribe((data) =>{\n//       if(data.status === 'success'){\n//         if(data.data.length == 0){\n//           this.currencyOptionValue = 'Please Add Currency';\n//         } else {\n//           this.currency = data.data;\n//           this.currencyOptionValue = 'Select Currency';\n//         }\n\n//       }\n//     })\n//   } catch(err){}\n//   }\n\n  // addCurrencyFormValidation() {\n  //   try {\n  //     this.addCurrencyForm = this.fb.group({\n  //       name: new FormControl('', Validators.required),\n  //       code: new FormControl('',Validators.required)\n  //     });\n  //   }\n  //   catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n   // Reset PopUp Currency Window\n  //  resetForm(){\n  //   try{\n  //     this.addCurrencyForm.reset();\n  //   } catch(err){\n  //     console.log(err);\n  //   }\n  // }\n\n  // addCurrency(){\n  //   try{\n  //     let cleanCurrencyForm = this.util.cleanFormLevelOne(this.addCurrencyForm);\n  //     this.api.submitCurrency(cleanCurrencyForm.value).subscribe((data) => {\n  //       if(data.status === \"success\"){\n  //         this.successMessage = true ;\n  //         this.errorMsg = false ;\n  //         this.successMsg = data.message;\n  //         setTimeout(() => {\n  //           this.listCurrency();\n  //           this.handleErrors();\n  //           (document.getElementById('dismiss') as HTMLElement).click();\n  //         },1500);\n  //       } else {\n  //         this.errorMsg = true;\n  //         this.successMessage = false;\n  //         this.errMsg = data.message;\n  //         setTimeout(() => {\n  //           this.handleErrors();\n  //         },1500);\n  //       }\n  //     })\n  //   } catch(err){\n  //     console.log(err);\n  //   }\n  // }\n\n  //Method for show currency validdation message\n// currencyValidationMessage = {\n//   'name': [\n//     { type: 'required', message: 'Currency Name is required' },\n//   ],\n//   'code': [\n//     { type: 'required', message: 'Currency Code is required' },\n//   ]\n// }\n  //Method for form validation\n  formValidation() {\n    try {\n      this.updateCompanyForm = this.fb.group({\n        name: new FormControl(\"\",Validators.required),\n        officialNumber: new FormControl(\"\", Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$')\n        ])),\n        email: new FormControl(\"\", Validators.compose([\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n        fax: new FormControl(\"\", Validators.compose([\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ])),\n\n        address: new FormControl(\"\",Validators.required),\n        domicile: new FormControl(\"\", Validators.pattern('^[a-zA-Z]*$')),\n        outGoingMails: new FormControl(\"\", Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')),\n        taxationNumber: new FormControl(''),\n        panNumber: new FormControl('', Validators.pattern('(^[A-Za-z]{5}[0-9]{4}[A-Za-z]$)')),\n        bankName: new FormControl(''),\n        bankAccNum: new FormControl('',Validators.compose([Validators.maxLength(16),\n          Validators.pattern(/^[0-9]*$/)])),\n        bankType: new FormControl('')\n\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //Method for set existing value in the form\n  existingCompanyDataValues() {\n    try {\n      this.api.getIndividualData(this.snapshotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          console.log(data);\n          this.url = data.data.logoUrl;\n          this.existingUrl = data.data.logoUrl;\n          this.listCompanyData = data.data;\n          this.updateCompanyForm = this.fb.group({\n            name: new FormControl(this.listCompanyData.name,Validators.required),\n            officialNumber: new FormControl(this.listCompanyData.officialNumber, Validators.compose([\n              Validators.required,\n              Validators.minLength(10),\n              Validators.maxLength(15),\n              Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$')\n            ])),\n            email: new FormControl(this.listCompanyData.email, Validators.compose([\n              Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n            ])),\n            fax: new FormControl(this.listCompanyData.fax, Validators.compose([\n              Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n              Validators.minLength(10),\n              Validators.maxLength(10),\n            ])),\n\n            address: new FormControl(this.listCompanyData.address,Validators.required),\n            domicile: new FormControl(this.listCompanyData.domicile, Validators.pattern('^[a-zA-Z]*$')),\n            taxationNumber: new FormControl(this.listCompanyData.taxationNumber),\n            panNumber: new FormControl(this.listCompanyData.panNumber, Validators.pattern('(^[A-Za-z]{5}[0-9]{4}[A-Za-z]$)')),\n            bankName: new FormControl(this.listCompanyData.bankName),\n            bankAccNum: new FormControl(this.listCompanyData.bankAccNum,Validators.compose([Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            bankType: new FormControl(this.listCompanyData.bankType)\n          })\n        }\n      })\n\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  //Method for Update Data\n  updateCompanyFormData() {\n    try{\n      let cleanCompanyUpdateForm = this.util.cleanFormLevelOne(this.updateCompanyForm);\n      if (this.updateCompanyForm.valid) {\n        this.api.submitUpdateCompanyData(cleanCompanyUpdateForm.value, this.snapshotParam).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n\n            // Upload Company Logo\n          let isCompanyLogo;\n          if((document.getElementById('updateCompanyLogo') as HTMLInputElement).value.length === 0){\n           isCompanyLogo = false;\n          } else {\n            isCompanyLogo = true;\n          }\n          this.api.uploadCompanyLogo(this.updateCompanyLogoForm,'Update CompanyLogo',isCompanyLogo).subscribe((responseData) => {\n            if(responseData.status === 'success'){\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n\n              setTimeout(() => {\n                this.handleErrors();\n                window.location.replace('/pages/dashboard/company-list');\n              },2000);\n            }\n          })\n          }\n          else if (data.status == \"error\") {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            },2000);\n          }\n        })\n      }\n    } catch(err){\n      console.log(err);\n    }\n\n  }\n\n  //Onclick scrolling on div and  show message div\n  scroll(element) {\n    element.scrollIntoView();\n  }\n\n\n\n  //Method for show validation message\n  validationMessage = {\n    'name': [\n      { type: 'required', message: 'Name is required' },\n    ],\n    'address': [\n      { type: 'required', message: 'Address is required' }\n    ],\n    'officialNumber': [\n      { type: 'required', message: 'Official Number is required' },\n      { type: 'minlength', message: 'Number too short ' },\n      { type: 'maxlength', message: 'Number is too large' },\n      { type: 'pattern', message: 'Company Number not valid' },\n    ],\n    'fax': [\n      { type: 'minlength', message: 'Fax number too short ' },\n      { type: 'maxlength', message: 'Fax no. is too large' },\n      { type: 'pattern', message: 'Fax Number not valid' },\n    ],\n    'domicile': [\n      { type: 'pattern', message: 'Invalid Domicile' },\n    ],\n    'outGoingMails': [\n      { type: 'pattern', message: 'Invalid Mail' },\n    ],\n    'taxNumber':[\n      { type: 'pattern', message: 'Invalid Taxation No.'},\n    ],\n    'panNo':[\n      { type: 'pattern', message: 'Invalid PAN No.'},\n    ],\n    'bankAccNum':[\n      { type: 'maxlength', message: 'Account No. limit exceeded'},\n      { type: 'pattern', message: 'Invalid Account No.'},\n    ],\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n\n// When User Select the file\nonSelectFile(event) {\n  if (event.target.files && event.target.files[0]) {\n    var reader = new FileReader();\n\n    reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n    reader.onload = (event: any) => { // called once readAsDataURL is completed\n      this.url = event.target.result;\n    }\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.updateCompanyLogoForm.get('companyLogo').setValue(file);\n    }\n  }\n}\n\n// update Company Logo\nupdateComapnyLogo(){\n  try{\n    this.updateCompanyLogoForm = this.fb.group({\n      companyLogo: ['']\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\nreset(){\n  try {\n    this.url = this.existingUrl;\n  } catch (error) {\n    console.log(error);\n\n  }\n}\n\n}\n","<div class=\"card card-user\">\n  <div class=\"card-header\" #target>\n    <h2 class=\"card-title\" style=\"text-align: center\">Update Company Details</h2>\n  </div>\n\n\n  <div class=\"col-sm-offset-2\">\n    <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n      <strong>{{ errMsg }}</strong>\n    </p>\n  </div>\n\n  <div class=\"col-sm-offset-2\">\n    <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n      <strong>{{ successMsg }}</strong>\n    </p>\n  </div>\n  <div class=\"card-body\">\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateCompanyForm\" (ngSubmit)=\"updateCompanyFormData()\"\n      novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-sm-6 control-label\"><b>Name (to appear on reports):&nbsp;<span\n              style=\"color: darkred\">*</span></b></label>\n        <div class=\"col-sm-offset-2\">\n          <input class=\"form-control\" type=\"text\" placeholder=\"Enter Company Name\" formControlName=\"name\">\n          <div *ngFor=\"let validation of validationMessage.name\">\n            <div style=\"color: red;margin-left: 14px;\"\n              *ngIf=\"updateCompanyForm.get('name').hasError(validation.type) && (updateCompanyForm.get('name').dirty || updateCompanyForm.get('name').touched)\">\n              {{ validation.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"col-sm-6 control-label\"><b>Address:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n        <div class=\"col-sm-offset-2\">\n          <textarea class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" formControlName=\"address\"></textarea>\n          <div *ngFor=\"let validation of validationMessage.address\">\n            <div style=\"color: red;margin-left: 14px;\"\n              *ngIf=\"updateCompanyForm.get('address').hasError(validation.type) && (updateCompanyForm.get('address').dirty || updateCompanyForm.get('address').touched)\"\n              >\n              {{ validation.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Domicile:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" id=\"inputDomiclie\" placeholder=\"Enter Domicile\"\n                formControlName=\"domicile\">\n              <div *ngFor=\"let validation of validationMessage.domicile\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"updateCompanyForm.get('domicile').hasError(validation.type) && (updateCompanyForm.get('domicile').dirty || updateCompanyForm.get('domicile').touched)\"\n                  >\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Bank Name:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"Enter Bank Name:\" formControlName=\"bankName\">\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"Enter Account Type:\" formControlName=\"bankType\">\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Account Number:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"Enter Account Number:\" formControlName=\"bankAccNum\">\n              <div *ngFor=\"let validation of validationMessage.bankAccNum\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"updateCompanyForm.get('bankAccNum').hasError(validation.type) && (updateCompanyForm.get('bankAccNum').dirty || updateCompanyForm.get('bankAccNum').touched)\"\n                  >\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"form-row\">\n\n        <div class=\"form-group col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Official Company Number:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" id=\"inputCompanyNo\" placeholder=\"Enter Official Company Number\"\n                formControlName=\"officialNumber\">\n              <div *ngFor=\"let validation of validationMessage.officialNumber\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"updateCompanyForm.get('officialNumber').hasError(validation.type) && (updateCompanyForm.get('officialNumber').dirty || updateCompanyForm.get('officialNumber').touched)\"\n                 >\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Fax Number:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" id=\"inputFax\" placeholder=\"Enter Fax Number:\" formControlName=\"fax\">\n              <div *ngFor=\"let validation of validationMessage.fax\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"updateCompanyForm.get('fax').hasError(validation.type) && (updateCompanyForm.get('fax').dirty || updateCompanyForm.get('fax').touched)\"\n                  >\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Taxation No:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" id=\"inputTaxationno.\" placeholder=\"Enter Taxation Number\"\n                formControlName=\"taxationNumber\">\n              <div *ngFor=\"let validation of validationMessage.taxNumber\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"updateCompanyForm.get('taxationNumber').hasError(validation.type) && (updateCompanyForm.get('taxationNumber').dirty || updateCompanyForm.get('taxationNumber').touched)\"\n                  style=\"color: red;margin-left: 14px;\">\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n              <label class=\"col-sm-6 control-label\"><b>PAN (Permanent Account Number):</b></label>\n              <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" onkeyup=\"this.value = this.value.toUpperCase();\" type=\"text\" id=\"inputPanno.\" placeholder=\"Enter PAN Number\"\n                  formControlName=\"panNumber\">\n                <div *ngFor=\"let validation of validationMessage.panNo\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                    *ngIf=\"updateCompanyForm.get('panNumber').hasError(validation.type) && (updateCompanyForm.get('panNumber').dirty || updateCompanyForm.get('panNumber').touched)\"\n                    style=\"color: red;margin-left: 14px;\">\n                    {{ validation.message }}\n                  </div>\n                </div>\n              </div>\n          </div>\n        </div>\n     </div>\n     <div class=\"row\">\n      <div class=\"col-lg-6 col-md-6 col-sm-6\">\n    <div class=\"row\">\n     <div class=\"col-lg-10 col-md-6 col-sm-6\">\n       <div class=\"form-group\">\n\n          <label class=\"control-label\"><b>Company Logo:</b></label><br>\n           <img [src]=\"url\" height=\"70\">\n           <input type=\"file\" class=\"form-control-file border\" id=\"updateCompanyLogo\" (change)=\"onSelectFile($event)\" accept=\"image/*\">\n         </div>\n\n     </div>\n     <div class=\"col-lg-2 col-md-6 col-sm-6\">\n       <div class=\"delete-button\">\n       <button class=\"btn btn-danger\" type=\"button\" (click)=\"reset()\" ><i class=\"fa fa-trash\"></i>&nbsp; Reset</button>\n     </div>\n     </div>\n\n    </div>\n   </div>\n   <div class=\"col-lg-6 col-md-6 col-sm-6\"></div>\n   </div>\n\n\n      <!-- <div class=\"form-group\">\n        <label class=\"col-sm-6 control-label\"><b>GST No:</b></label>\n        <div class=\"col-sm-offset-2\">\n          <input class=\"form-control\" type=\"text\" id=\"inputGstno.\" placeholder=\"Enter GSTNo\"\n            formControlName=\"gstNumber\">\n          <div *ngFor=\"let validation of validationMessage.gstNumber\">\n            <div style=\"color: red;margin-left: 14px;\"\n              *ngIf=\"updateCompanyForm.get('gstNumber').hasError(validation.type) && (updateCompanyForm.get('gstNumber').dirty || updateCompanyForm.get('gstNumber').touched)\"\n              >\n              {{ validation.message }}\n            </div>\n          </div>\n        </div>\n      </div> -->\n\n      <!-- <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label class=\"col-sm-4 control-label\"><b>Home Currency:</b></label>\n          <select class=\"dropdown dropdown-toggle form-control\" Name=\"HomeCurrency\" formControlName=\"currency\">\n            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------{{currencyOptionValue}}----------</option>\n            <option [ngValue]=\"homeCurrency.code\" *ngFor=\"let homeCurrency of currency\"> {{ homeCurrency.code }}</option>\n          </select>\n        </div>\n          <div class=\"form-group col-md-4\" style=\"margin-top: 13px;\">\n              <button type=\"button\" style=\"float: left;\" class=\"btn btn-primary\" data-toggle=\"modal\" (click)=resetForm() data-target=\"#myModal\">\n               <i class=\"fa fa-plus-square\"></i> Add Currency\n              </button>\n              <button type=\"button\" class=\"btn btn-danger\" style=\"float: left;\" >\n                  <i class=\"fa fa-trash\"></i> Delete Currency\n                 </button>\n                </div>\n        </div> -->\n        <!-- <div class=\"modal\" id=\"myModal\">\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n\n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Add Currency</h4>\n              </div>\n              <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                  <strong>{{ errMsg }}</strong>\n                </p>\n              </div>\n\n              <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                  <strong>{{ successMsg }}</strong>\n                </p>\n              </div>\n              <div class=\"modal-body\">\n                <form role=\"form\" [formGroup]=\"addCurrencyForm\" (ngSubmit)=\"addCurrency()\">\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Currency Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <input type=\"text\" formControlName=\"name\" placeholder=\"Enter Currency Name\" class=\"form-control\" />\n                    <div *ngFor=\"let validation of currencyValidationMessage.name\">\n                      <div style=\"color: red;margin-left: 14px;\"\n                        *ngIf=\"addCurrencyForm.get('name').hasError(validation.type) && (addCurrencyForm.get('name').dirty || addCurrencyForm.get('name').touched)\"\n                        >\n                        {{ validation.message }}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Currency Code:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <input type=\"text\" formControlName=\"code\" placeholder=\"Enter Currency Code\" class=\"form-control\" />\n                    <div *ngFor=\"let validation of currencyValidationMessage.code\">\n                      <div style=\"color: red;margin-left: 14px;\"\n                        *ngIf=\"addCurrencyForm.get('code').hasError(validation.type) && (addCurrencyForm.get('code').dirty || addCurrencyForm.get('code').touched)\"\n                       >\n                        {{ validation.message }}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"form-group\">\n                      <button type=\"button\" class=\"btn btn-danger\" id=\"dismiss\" style=\"float:right;\" data-dismiss=\"modal\">Close</button>\n                      <button type=\"submit\" class=\"btn btn-success\" style=\"float:right;\" [disabled]='addCurrencyForm.invalid'>Submit</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n       </div> -->\n\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]='updateCompanyForm.invalid || permissionInfo.search(\"Edit Company\") === -1' (click)=\"scroll(target)\">Update Company</button>\n          <button type=\"button\" class=\"btn btn-danger\"  routerLink=\"/pages/dashboard/company-list\" >Cancel</button>\n\n\n        </div>\n      </div>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { ApiService } from 'src/app/services/api.service';\nimport { GraderuleApiService } from '../../graderule/graderule-service/graderule-api.service';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport { NotifierService } from 'angular-notifier';\nimport moment from 'moment';\nimport { BsDatepickerConfig, BsDatepickerViewMode } from 'ngx-bootstrap/datepicker';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-company-report',\n  templateUrl: './company-report.component.html',\n  styleUrls: ['./company-report.component.scss']\n})\nexport class CompanyReportComponent implements OnInit {\n\n  earningDetails = [];\n  deductionDetails = [];\n  headerData = [];\n  viewData = [];\n  empData = [];\n  gradeDetails = [];\n  tableData: any;\n  disableFilter = true;\n  cellValues: string;\n  excelHeader = [];\n  minMode: BsDatepickerViewMode = 'month'; // change for month:year\n  sortMonthTabs = [];\n\n  currentPage = 1;\n  excelViewData = [];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  requestDatePicker = {\n    startDate: '',\n    endDate: ''\n  }\n\n  constructor(\n    private datePipe: DatePipe,\n    public gradeApi: GraderuleApiService,\n    public apiService: ApiService,\n    public notifier: NotifierService,\n    private spinner: NgxSpinnerService,\n\n\n\n  ) {\n    this.bsConfig = Object.assign({}, {\n      minMode : this.minMode,\n      rangeInputFormat: 'MM-YYYY',\n      dateInputFormat: 'MM-YYYY'\n    });\n  }\n\n  ngOnInit() {\n    this.gradeApi.getGradeRuleList().subscribe(response => {\n      if (response.status === 'success') {\n        this.gradeDetails = response.data;\n      }\n    });\n    this.getAllFilterValues();\n  }\n\n  getCompanyReport(tableData) {\n    try {\n      this.headerData = [];\n      const header = [\n        'Sr No.',\n        'Name',\n        'Date of Joining',\n        'In Hand(P/M)',\n        'Bonus',\n        'Incentives',\n        'Gross',\n        'PresentDays',\n        'Absent Days',\n        'Working Days',\n        'Adjust Leave',\n        'Per day Salary',\n        'Net Salary',\n        'Pay Mode'\n      ];\n\n\n      // FOR EARNING INFO\n      if (tableData.gradeRuleInfo.earningsInfo.length !== 0) {\n        this.earningDetails = [];\n        for (let earning of tableData.gradeRuleInfo.earningsInfo) {\n          if (earning.type === 'Percent') {\n            let earningString = `${earning.name}(${earning.value}%)`;\n            this.earningDetails.push(earningString);\n          }\n\n          if (earning.type === 'Fixed') {\n            let earningString = `${earning.name}(₹ ${earning.value})`;\n            this.earningDetails.push(earningString);\n          }\n\n          if ((earning.type).trim().length === 0) {\n            let earningString = `${earning.name}`;\n            this.earningDetails.push(earningString);\n          }\n\n        }\n      }\n\n      // FOR DEDUCTION INFO\n      if (tableData.gradeRuleInfo.deductionInfo.length !== 0) {\n        this.deductionDetails = [];\n        for (let deduction of tableData.gradeRuleInfo.deductionInfo) {\n          if (deduction.type === 'Percent') {\n            let deductionString = `${deduction.name}(${deduction.value}%)`;\n            this.deductionDetails.push(deductionString);\n          }\n\n          if (deduction.type === 'Fixed') {\n            let deductionString = `${deduction.name}(₹ ${deduction.value})`;\n            this.deductionDetails.push(deductionString);\n          }\n          if ((deduction.type).trim().length === 0) {\n            let deductionString = `${deduction.name}`;\n            this.deductionDetails.push(deductionString);\n          }\n        }\n      }\n      // FOR MANAGE HEADER DATA\n      this.headerData = header.concat(this.earningDetails.concat(this.deductionDetails));\n      this.viewData = [];\n      for (let j = 0; j < tableData.employeeSheetDetails.length; j++) {\n        this.returnSheetValue(tableData.employeeSheetDetails[j], j + 1, this.headerData, 'companyReport');\n      }\n     } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // FOR MANAGE TABLE DATA ACCORDING TO HEADER DATA\n  returnSheetValue(employeeData, srNo, headers, type) {\n    let viewData = [\n      srNo,\n      employeeData.name,\n      this.datePipe.transform(employeeData.doj, 'dd-MM-yyyy'),\n      employeeData.inHand,\n      employeeData.bonus,\n      employeeData.incentives,\n      employeeData.gross,\n      employeeData.presentDays,\n      employeeData.absentDays,\n      employeeData.workingDays,\n      employeeData.adjustLeave,\n      employeeData.everyDaySalary,\n      employeeData.netSalary,\n      employeeData.payMode,\n\n    ];\n    for (let k = headers.indexOf(\"Pay Mode\") + 1; k < headers.length; k++) {\n\n      let empDedEarHeader = headers[k].substr(0, headers[k].indexOf('(')).trim();\n      empDedEarHeader.trim().length === 0 ? empDedEarHeader = headers[k].trim() : '';\n\n      let empDedEarIndex = employeeData.deductions.map((amount) => {\n        return (amount.label).trim();\n      }).indexOf(empDedEarHeader);\n\n      if (empDedEarIndex === -1) {\n        empDedEarIndex = employeeData.earnings.map((amount) => {\n          return (amount.label).trim();\n        }).indexOf(empDedEarHeader);\n\n        viewData.push(employeeData.earnings[empDedEarIndex]['amt'])\n      } else {\n        viewData.push(employeeData.deductions[empDedEarIndex]['amt'])\n      }\n    }\n    return type === 'excelReport' ? this.excelViewData.push(viewData) : this.viewData.push(viewData);\n  }\n\n  // CHECK ALL FILTER BLANK OR NOT\n  getAllFilterValues() {\n    try {\n      let grade = (document.getElementById('gradeOptions') as HTMLInputElement).value;\n      if (grade !== '' && this.requestDatePicker.startDate.trim().length > 0  && this.requestDatePicker.endDate.trim().length > 0) {\n        this.disableFilter = false;\n      } else {\n        this.disableFilter = true;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // CHECK DROPDOWN VALUES\n  selectGrade() {\n    try {\n      this.getAllFilterValues();\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n\n\n  // FOR FILTER DATA AND GET COMPANY REPORT\n  filterData() {\n    try {\n      this.spinner.show();\n      let grade = (document.getElementById('gradeOptions') as HTMLInputElement).value;\n      this.apiService.getCompanyReport(this.requestDatePicker.startDate, this.requestDatePicker.endDate, grade).subscribe(response => { \n      this.spinner.hide();\n          if (response.status === 'success') {\n          if(response.data.length === 0){\n            this.notifier.notify('info', 'Company Report Not Available')\n          }\n          if(response.data.length !== 0){\n            this.sortMonthTabs = response.sortingCriteria;\n            this.tableData = response.data;\n\n            let tabIndex = this.tableData.map((monthObj) => {\n              return monthObj.sheetId;\n            }).indexOf(this.sortMonthTabs[0].sortingId);\n\n          this.getCompanyReport(this.tableData[tabIndex]);\n          }\n        } else if (response.status === 'error') {\n          this.tableData = [];\n          this.notifier.notify(response.status, response.message);\n        }\n      }, error => {\n      this.spinner.hide();\n        console.log(error);\n      });\n    } catch (error) {\n      this.spinner.hide();\n      console.log(error);\n    }\n  }\n\n  // FOR RESET FILTER VALUES\n  reset() {\n    try {\n      (document.getElementById('gradeOptions') as HTMLInputElement).value = '';\n      (document.getElementById('rangeDate') as HTMLInputElement).value = '';\n      this.disableFilter  = true;\n      this.headerData = [];\n      this.excelHeader = [];\n      this.viewData = [];\n      this.sortMonthTabs = [];\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n// FOR GENERATE COMPANY REPORT SHEET\n  async generateExcelSheet() {\n    try {\n      const workbook = new Workbook();\n      for(let tableData of this.tableData) { \n        \n      const worksheet = workbook.addWorksheet(`${tableData.showMonthName} ${tableData.showYear}`);\n      worksheet.addRow([]);\n      // FOR MANAGE COMPANY NAME\n      worksheet.mergeCells('L2:R2');\n      worksheet.getCell('L2').value = `${tableData.companyExpen.name}, ${tableData.month} ${tableData.year}`;\n      worksheet.getCell('L2').fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: '7B7B7B' }, };\n      worksheet.getCell('L2').font = { name: 'Trebuchet MS', family: 4, size: 20, bold: true, };\n      worksheet.getCell('L2').alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n\n      worksheet.addRow([]);\n      worksheet.addRow([]);\n      const header = [\n        'Sr No.',\n        'Name',\n        'Date of Joining',\n        'In Hand(P/M)',\n        'Bonus',\n        'Incentives',\n        'Gross',\n        'PresentDays',\n        'Absent Days',\n        'Working Days',\n        'Adjust Leave',\n        'Per day Salary',\n        'Net Salary',\n        'Pay Mode'\n\n      ];\n\n      worksheet.mergeCells('A4:M4');\n      worksheet.getCell('A4:M4').value = 'Employee Details';\n      worksheet.getCell('A4:M4').fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFE1EFDA' } };\n      worksheet.getCell('A4:M4').alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      worksheet.getCell('A4:M4').font = { name: 'Arial', family: 4, size: 12, bold: true, };\n      worksheet.getCell('A4:M4').border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n\n      const  earnings = [];\n      if (tableData.gradeRuleInfo.earningsInfo.length !== 0) {\n        this.cellValues = `${this.sheetAlgo(14 + tableData.gradeRuleInfo.earningsInfo.length)}4`;\n        worksheet.mergeCells(`N4:${this.cellValues}`);\n        worksheet.getCell('N4').value = 'Total Earnings';\n        worksheet.getCell('N4').fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFE1EFDA' } };\n        worksheet.getCell('N4').alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n        worksheet.getCell('N4').font = { name: 'Arial', family: 4, size: 12, bold: true, };\n        worksheet.getCell('N4').border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n        for (let earning of tableData.gradeRuleInfo.earningsInfo) {\n          if (earning.type === 'Percent') {\n            let earningString = `${earning.name}(${earning.value}%)`;\n            earnings.push(earningString);\n          }\n\n          if (earning.type === 'Fixed') {\n            let earningString = `${earning.name}(₹ ${earning.value})`;\n            earnings.push(earningString);\n          }\n\n          if ((earning.type).trim().length === 0) {\n            let earningString = `${earning.name}`;\n            earnings.push(earningString);\n          }\n        }\n      }\n      const deductions = [];\n      if (tableData.gradeRuleInfo.deductionInfo.length !== 0) {\n        let cell = `${this.sheetAlgo((14 + tableData.gradeRuleInfo.earningsInfo.length + 1))}4:${this.sheetAlgo((14 + tableData.gradeRuleInfo.earningsInfo.length + tableData.gradeRuleInfo.deductionInfo.length))}4`;\n        worksheet.mergeCells(cell);\n        worksheet.getCell(`${this.sheetAlgo(14 + tableData.gradeRuleInfo.earningsInfo.length + 1)}4`).value = 'Total Deduction';\n        worksheet.getCell(`${this.sheetAlgo(14 + tableData.gradeRuleInfo.earningsInfo.length + 1)}4`).fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFE1EFDA' } };\n        worksheet.getCell(`${this.sheetAlgo(14 + tableData.gradeRuleInfo.earningsInfo.length + 1)}4`).alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n        worksheet.getCell(`${this.sheetAlgo(14 + tableData.gradeRuleInfo.earningsInfo.length + 1)}4`).font = { name: 'Arial', family: 4, size: 12, bold: true, };\n        worksheet.getCell(`${this.sheetAlgo(14 + tableData.gradeRuleInfo.earningsInfo.length + 1)}4`).border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n        for (let deduction of tableData.gradeRuleInfo.deductionInfo) {\n          if (deduction.type === 'Percent') {\n            let deductionString = `${deduction.name}(${deduction.value}%)`;\n           deductions.push(deductionString);\n          }\n\n          if (deduction.type === 'Fixed') {\n            let deductionString = `${deduction.name}(₹ ${deduction.value} )`;\n           deductions.push(deductionString);\n          }\n\n          if ((deduction.type).trim().length === 0) {\n            let deductionString = `${deduction.name}`;\n           deductions.push(deductionString);\n          }\n        }\n      }\n\n\n       this.excelHeader = header.concat(earnings.concat(deductions));\n\n      worksheet.addRow(this.excelHeader).eachCell(cell => {\n        cell.fill = {\n          type: 'pattern',\n          pattern: 'solid',\n          fgColor: { argb: 'FFE1EFDA' },\n        }\n        cell.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n        cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n      });\n\n      for (let i = 0; i < this.excelHeader.length; i++) {\n        worksheet.getColumn(i + 1).width = 20;\n      }\n\n      this.excelViewData = [];\n      for (let j = 0; j < tableData.employeeSheetDetails.length; j++) {\n        this.returnSheetValue(tableData.employeeSheetDetails[j], j + 1, this.excelHeader, 'excelReport');\n\n      }\n\n      this.excelViewData.forEach(d => {\n        const row = worksheet.addRow(d);\n        row.eachCell((cell, number) => {\n          cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n          cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n        });\n      });\n\n      worksheet.addRow([]);\n      worksheet.addRow([]);\n\n\n      const monthHeading = ['', '', 'Monthly Paid', ''];\n      worksheet.addRow(monthHeading).eachCell(cell => {\n        cell.font = { name: 'Arial', family: 4, size: 14, bold: true, };\n        cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFFDF2CC' } };\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n        cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      });\n\n      const monthSubHeader = ['Company Name', 'Cash', 'Cheque', 'Account Transfer'];\n      worksheet.addRow(monthSubHeader).eachCell(cell => {\n        cell.font = { name: 'Arial', family: 4, size: 10, bold: true, };\n        cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFE1EFDA' } };\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n        cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n      });\n\n      const monthlyData = [[tableData.companyExpen.name, tableData.companyExpen.cash, tableData.companyExpen.cheque, tableData.companyExpen.bankTransfer]]\n\n      monthlyData.forEach(d => {\n        const row = worksheet.addRow(d);\n        row.eachCell((cell, number) => {\n          cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n          cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\n        });\n      });\n\n    }\n\n      // Generate Excel sheet\n      workbook.xlsx.writeBuffer().then((data) => {\n        const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        fs.saveAs(blob, `${this.tableData[0].companyExpen.name}-report.xlsx`);\n        this.excelHeader = [];\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  sheetAlgo(cellValue) {\n\n    let basicVertCellVal = {\n      1: 'A', 2: 'B', 3: 'C', 4: 'D', 5: 'E', 6: 'F', 7: 'G', 8: 'H', 9: 'I', 10: 'J',\n      11: 'K', 12: 'L', 13: 'M', 14: 'N', 15: 'O', 16: 'P', 17: 'Q', 18: 'R', 19: 'S', 20: 'T',\n      21: 'U', 22: 'V', 23: 'W', 24: 'X', 25: 'Y', 26: 'Z',\n    }\n    let value = Number(cellValue);\n\n    if (value > 26) {\n      let remainder = (value % 26).toString();\n      let quotient = parseInt((value / 26).toString());\n      let returnCellValue = remainder === '0' ? `${basicVertCellVal[Number(quotient) - 1]}Z` : `${basicVertCellVal[quotient]}${basicVertCellVal[remainder]}`;\n\n      return returnCellValue;\n    } else {\n      return `${basicVertCellVal[cellValue]}`;\n    }\n  }\n\n\n// ON DATE SELECT CHECK VALIDATION\n  rangeDatesUpdated(dateValues){\n    try {\n\n      if (dateValues === null || dateValues === 'Invalid Date' || dateValues === [null] || dateValues[0] === null || dateValues[1] === null || dateValues.length < 2) {\n        this.requestDatePicker = {\n          startDate: '',\n          endDate: '',\n        }\n      } else{\n        this.requestDatePicker = {\n          startDate: moment(dateValues[0]).format('YYYY-MM'),\n          endDate: moment(dateValues[1]).format('YYYY-MM'),\n        }\n      }\n     \n      this.getAllFilterValues();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  // FOR FILTER MONTH DATA\n  changeTabData(sortingId){\n    try { \n      let tabIndex = this.tableData.map((monthObj) => {\n        return monthObj.sheetId\n      }).indexOf(sortingId);\n      \n      this.getCompanyReport(this.tableData[tabIndex]);\n      this.currentPage = 1;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n   // on page change events\n   onPageChange(page: number) {\n    this.currentPage = page;\n  }\n}\n","<notifier-container></notifier-container>\n<ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"large\" color=\"#fff\" type=\"square-jelly-box\">\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n</ngx-spinner>\n<div class=\"card card-user\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title text-center\">Company Report</h2>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"gradeOptions\" (change)=\"selectGrade()\">\n          <option class=\"dropdown-item\" ng-selected=\"true\" value=\"\" selected>Select Grade</option>\n          <option class=\"dropdown-item\" *ngFor='let list of gradeDetails'  value=\"{{list._id}}\">{{ list.title }}</option>\n       </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-12\">\n                <div class=\"form-group\">\n\n                    <input type=\"text\" class=\"form-control\" [bsConfig]=\"bsConfig\" placeholder=\"Select Months\" id=\"rangeDate\" bsDaterangepicker (bsValueChange)=\"rangeDatesUpdated($event)\">\n\n                </div>\n            </div>\n            <div class=\"col-lg-6 col-md-6 col-sm-12\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary btn-margin\" [disabled]=\"disableFilter\" (click)=\"filterData()\"><i  class=\"fa fa-filter\"></i>Filter</button>\n                    <button class=\"btn btn-danger btn-margin\" (click)=\"reset()\"><i  class=\"fa fa-trash\"></i>Reset</button>\n                    <button *ngIf=\"viewData.length !== 0\" style=\"float: right;\" class=\"btn btn-success btn-round btn-margin\" (click)=\"generateExcelSheet()\"><i class=\"fas fa-download\"></i>Sheet</button>\n                </div>\n            </div>\n        </div>\n\n\n\n\n        <div *ngIf=\"viewData.length === 0\">\n            <p style=\"font-size: 16px;\" class=\"text-center\">Please fill sufficient data for the view of company reports</p>\n        </div>\n        <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" #target>\n            <li class=\"nav-item\" *ngFor=\"let monthTab of sortMonthTabs, let i = index ;\">\n                <a class=\"nav-link\" [ngClass]=\" i === 0 ? 'active': ''\" data-toggle=\"tab\" [attr.href]=\" '#' + monthTab.showMonthName + monthTab.showYear \" role=\"tab\" [attr.aria-controls]=\"monthTab.showMonthName\" (click)=\"changeTabData(monthTab.sortingId)\">{{  monthTab.showMonthName }} - {{ monthTab.showYear }}</a>\n            </li>\n        </ul>\n\n\n        <div class=\"tab-content\">\n            <div class=\"tab-pane\" *ngFor=\"let monthTab of sortMonthTabs, let i = index ;\" id=\"{{ monthTab.showMonthName }}{{ monthTab.showYear }}\" role=\"tabpanel\" [ngClass]=\" i === 0 ? 'active': ''\">\n                <div *ngIf=\"viewData.length !== 0\">\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead class=\"text-primary\">\n                                <th class=\"text-center\" *ngFor=\"let list of headerData, let i = index;\" [ngClass]=\"i === 0  ? 'sticky-col first-col': i === 1 ? 'sticky-col second-col' : '' \">{{ list }}</th>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let emp of viewData | paginate: { itemsPerPage: 5, currentPage: currentPage }\">\n                                    <td *ngFor=\"let empDet of emp, let  i = index; \" class=\"text-center\" [ngClass]=\"i === 0  ? 'sticky-col first-col': i === 1 ? 'sticky-col second-col' : '' \">{{ empDet }}</td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n\n                    </div>\n                    <div class=\"pagination-outer\">\n                        <pagination-controls (pageChange)=\"onPageChange($event)\" previousLabel=\"\" nextLabel=\"\"></pagination-controls>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddCompanyComponent } from './add-company/add-company.component';\nimport { CompanyRoutingModule } from './company-routing.module';\nimport { CompanyComponent } from './company.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UpdateCompanyListComponent } from './update-company-list/update-company-list.component';\nimport { CompanyReportComponent } from './company-report/company-report.component';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n    horizontal: {\n      position: 'right',\n      distance: 12\n    },\n    vertical: {\n      position: 'top',\n      distance: 12,\n      gap: 10\n    }\n  },\n  theme: 'material',\n  behaviour: {\n    autoHide: 5000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n@NgModule({\n  declarations: [\n    AddCompanyComponent,\n    CompanyComponent,\n     UpdateCompanyListComponent,\n     CompanyReportComponent\n    ],\n  imports: [\n    CommonModule,\n    CompanyRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgxPaginationModule,\n    NotifierModule.withConfig(customNotifierOptions),\n    BsDatepickerModule.forRoot(),\n    NgxSpinnerModule\n\n  ]\n})\nexport class CompanyModule { }\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\nimport { Router } from '@angular/router';\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\ndeclare var populateCountries: any ;\n\n@Component({\n  selector: 'app-add-company',\n  templateUrl: './add-company.component.html',\n  styleUrls: ['./add-company.component.scss']\n})\nexport class AddCompanyComponent implements OnInit {\n\n  companyForm: FormGroup;\n  addCurrencyForm:FormGroup;\n  companyLogoForm: FormGroup\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  countryMsg: any;\n  stateOption = false;\n  selectCountryName: any;\n  selectStateName: any;\n  url: any;\n  imageError = 'Image Size should be less than 2MB';\n  imageFlag = false;\n  imageErrorMsg: any;\n  permissionsInfo: any;\n\n  // currency: any;\n  // currencyOptionValue = 'Please Add Currency';\n\n  constructor(private api: ApiService, public fb: FormBuilder, private ngZone: NgZone,\n     private router: Router,\n     private util: UtilitiesService) {\n  }\n\n  ngOnInit() {\n    this.permissionsInfo = this.util.permissionRoleInfo;\n    this.companyDataValidate();\n    populateCountries(\"country\", \"state\");\n    this.uploadCompanyLogo();\n    if(this.permissionsInfo.search('Create Company') === -1){\n      this.companyForm.disable();\n    }\n    // this.addCurrencyFormValidation();\n    // this.listCurrency();\n  }\n  // addCurrencyFormValidation() {\n  //   try {\n  //     this.addCurrencyForm = this.fb.group({\n  //       name: new FormControl('', Validators.required),\n  //       code: new FormControl('',Validators.required)\n  //     });\n  //   }\n  //   catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n   // Reset PopUp Currency Window\n  //  resetForm(){\n  //   try{\n  //     this.addCurrencyForm.reset();\n  //   } catch(err){\n  //     console.log(err);\n  //   }\n  // }\n\n  // Add Currency Value\n  // addCurrency(){\n  //   try{\n  //     let cleanCurrencyForm = this.util.cleanFormLevelOne(this.addCurrencyForm);\n  //     this.api.submitCurrency(cleanCurrencyForm.value).subscribe((data) => {\n  //       if(data.status === \"success\"){\n  //         this.successMessage = true ;\n  //         this.errorMsg = false ;\n  //         this.successMsg = data.message;\n  //         setTimeout(() => {\n  //           // this.listCurrency();\n  //           this.handleErrors();\n  //           (document.getElementById('dismiss') as HTMLElement).click();\n  //         },1500);\n  //       } else {\n  //         this.errorMsg = true;\n  //         this.successMessage = false;\n  //         this.errMsg = data.message;\n  //         setTimeout(() => {\n  //           this.handleErrors();\n  //         },1500);\n  //       }\n  //     })\n  //   } catch(err){\n  //     console.log(err);\n  //   }\n  // }\n\n//Method for show currency validdation message\ncurrencyValidationMessage = {\n  'name': [\n    { type: 'required', message: 'Currency Name is required' },\n  ],\n  'code': [\n    { type: 'required', message: 'Currency Code is required' },\n  ]\n}\n\n// List Currency Information\n// listCurrency(){\n// try{\n//   this.api.listCurrency().subscribe((data) =>{\n//     if(data.status === 'success'){\n//       if(data.data.length == 0){\n//         this.currencyOptionValue = 'Please Add Currency';\n//       } else {\n//         this.currency = data.data;\n//         this.currencyOptionValue = 'Select Currency';\n//       }\n\n//     }\n//   })\n// } catch(err){\n//   console.log(err);\n// }\n// }\n\n\n  //Method for Validation\n\n  companyDataValidate() {\n    try {\n      this.companyForm = this.fb.group({\n        name: new FormControl('', Validators.compose([\n          Validators.required,\n        ])),\n        officialNumber: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$')\n        ])),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n        fax: new FormControl('', Validators.compose([\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ])),\n        address: new FormControl('', Validators.required),\n        domicile: new FormControl('', Validators.pattern('^[a-zA-Z]*$')),\n        outGoingMails: new FormControl('', Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')),\n        taxationNumber: new FormControl(''),\n        panNumber: new FormControl('', Validators.pattern('(^[A-Za-z]{5}[0-9]{4}[A-Za-z]$)')),\n        bankName: new FormControl(''),\n        bankAccNum: new FormControl('',Validators.compose([Validators.maxLength(16),\n          Validators.pattern(/^[0-9]*$/)])),\n        bankType: new FormControl('')\n      })\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  scroll(element) {\n    element.scrollIntoView();\n}\n\n//Method for submit new company list data\n  companyFormData() {\n    try{\n      let cleanCompanyForm = this.util.cleanFormLevelOne(this.companyForm);\n    if (this.companyForm.valid) {\n      this.api.submitCompanyData(cleanCompanyForm.value,this.selectCountryName,this.selectStateName).subscribe((data) => {\n        if(data.status == \"success\"){\n          sessionStorage.setItem('companyId',data.company._id);\n\n          // Upload Company Logo\n          let isCompanyLogo;\n          if((document.getElementById('companyLogo') as HTMLInputElement).value.length === 0){\n           isCompanyLogo = false;\n          } else {\n            isCompanyLogo = true;\n          }\n\n          this.api.uploadCompanyLogo(this.companyLogoForm,'Add CompanyLogo',isCompanyLogo).subscribe((responseData) => {\n            if(responseData.status === 'success'){\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n\n              setTimeout(() => {\n                this.handleErrors();\n                window.location.replace('/pages/dashboard/company-list');\n              },2000);\n            }\n          })\n\n        }\n        else if(data.status === \"error\"){\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrors();\n          },2000)\n        }\n      })\n    }\n  }\n  catch(err){\n    console.log(err);\n  }\n  }\n\n//Method for show validdation message\n  validationMessage = {\n    'name': [\n      { type: 'required', message: 'Name is required' },\n    ],\n    'email': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Enter a valid email' }\n    ],\n    'address':[\n      { type: 'required', message: 'Address is required' },\n    ],\n    'officialNumber': [\n      { type: 'required', message: 'Number is required' },\n      { type: 'minlength', message: 'Number too short ' },\n      { type: 'maxlength', message: 'Number is too large' },\n      { type: 'pattern', message: 'Company Number not valid' },\n    ],\n    'fax': [\n      { type: 'minlength', message: 'Fax number too short ' },\n      { type: 'maxlength', message: 'Fax no. is too large' },\n      { type: 'pattern', message: 'Fax Number not valid' },\n    ],\n    'domicile':[\n      { type: 'pattern', message: 'Invalid Domicile'},\n    ],\n    'outGoingMails':[\n      { type: 'pattern', message: 'Invalid Mail'},\n    ],\n    'taxNumber':[\n      { type: 'pattern', message: 'Invalid Taxation No.'},\n    ],\n    'panNo':[\n      { type: 'pattern', message: 'Invalid PAN No.'},\n    ],\n    'bankAccNum':[\n      { type: 'maxlength', message: 'Account No. limit exceeded'},\n      { type: 'pattern', message: 'Invalid Account No.'},\n    ],\n  }\n\n handleErrors(){\n          this.errorMsg = false;\n          this.successMessage = false;\n          this.errMsg = '';\n          this.successMsg = '';\n }\n\n // Country Option Functionality\n countryName(){\n   if((document.getElementById('country')as HTMLInputElement).value === '-1'){\n    this.countryMsg = \"Country Name is Required\";\n    this.stateOption = false;\n   } else {\n     this.selectCountryName = (document.getElementById('country')as HTMLInputElement).value\n     this.countryMsg = '';\n     this.stateOption = true;\n     this.stateName();\n   }\n }\n\n // State Option Functionality\nstateName(){\n  if((document.getElementById('state')as HTMLInputElement) === null){\n    this.selectStateName = '';\n  } else if((document.getElementById('state')as HTMLInputElement).value === ''){\n    this.selectStateName = '';\n  } else {\n    this.selectStateName = (document.getElementById('state')as HTMLInputElement).value\n  }\n}\n\n// Upload company Logo form\nuploadCompanyLogo(){\n  try{\n    this.companyLogoForm = this.fb.group({\n      companyLogo: ['']\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\nonSelectFile(event) {\n  if (event.target.files && event.target.files[0]) {\n    var reader = new FileReader();\n\n    reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n    reader.onload = (event: any) => { // called once readAsDataURL is completed\n      this.url = event.target.result;\n    }\n    if(event.target.files[0].size > 2000000){\n      this.imageFlag = true;\n      this.imageErrorMsg = \"File Size Exceeded than 2MB\";\n    } else {\n      if (event.target.files.length > 0) {\n        this.imageFlag = false;\n        this.imageError = '';\n        this.imageErrorMsg = '';\n        const file = event.target.files[0];\n        this.companyLogoForm.get('companyLogo').setValue(file);\n      }\n    }\n  }\n}\n\n// Reset Image\nreset(){\n  try {\n    (document.getElementById('companyLogo') as HTMLInputElement).value = '';\n    this.url = '';\n    this.imageError = 'Image Size should be less than 2MB';\n    this.imageFlag = false;\n  } catch (error) {\n    console.log(error);\n\n  }\n}\n\n}\n","<div class=\"card card-user\">\n  <div class=\"card-header\">\n    <h2 class=\"card-title\" #target>Company Details</h2>\n  </div>\n\n  <div class=\"card-body\" >\n    <div class=\"col-sm-offset-2\" >\n      <p class=\"alert alert-danger\" *ngIf=\"errorMsg\" >\n        <strong>{{ errMsg }}</strong>\n      </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n      <p class=\"alert alert-success\" *ngIf=\"successMessage\" >\n        <strong>{{ successMsg }}</strong>\n      </p>\n    </div>\n\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"companyForm\" (ngSubmit)=\"companyFormData()\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-sm-6 control-label\"><b>Name (to appear on reports):&nbsp;<span style=\"color: darkred\">*</span></b></label>\n        <div class=\"col-sm-offset-2\">\n          <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Company Name\" formControlName=\"name\">\n          <div *ngFor=\"let validation of validationMessage.name\">\n            <div style=\"color: red;margin-left: 14px;\"\n              *ngIf=\"companyForm.get('name').hasError(validation.type) && (companyForm.get('name').dirty || companyForm.get('name').touched)\"\n              style=\"color: red;margin-left: 14px;\">\n              {{ validation.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group\">\n        <label class=\"col-sm-6 control-label\"><b>Address:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n        <div class=\"col-sm-offset-2\">\n          <textarea class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" formControlName=\"address\"\n          ></textarea>\n          <div *ngFor=\"let validation of validationMessage.address\">\n            <div style=\"color: red;margin-left: 14px;\"\n              *ngIf=\"companyForm.get('address').hasError(validation.type) && (companyForm.get('address').dirty || companyForm.get('address').touched)\"\n              style=\"color: red;margin-left: 14px;\">\n              {{ validation.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-4 control-label\"><b>Country:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <select class=\"dropdown dropdown-toggle form-control\" id=\"country\" name =\"country\" (change)=\"countryName()\">\n            </select>\n            <div [ngStyle]=\"{display: countryMsg === undefined?'none':'block'}\" ><p style=\"color:red;\">{{countryMsg}}</p></div>\n          </div>\n          <div class=\"form-group col-md-6\" *ngIf=\"stateOption\">\n            <label class=\"col-sm-4 control-label\"><b>State:</b></label>\n            <select class=\"dropdown dropdown-toggle form-control\" name =\"state\" id =\"state\" (change)=\"stateName()\"></select>\n          </div>\n          <div class=\"form-group col-md-6\" *ngIf=\"!stateOption\">\n            <label class=\"col-sm-4 control-label\"><b>State:</b></label>\n            <select class=\"dropdown dropdown-toggle form-control\" disabled>\n              <option class=\"drop-down\">----Country Not Selected----</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <div class=\"form-group\">\n              <label class=\"col-sm-6 control-label\"><b>Domicile:</b></label>\n              <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"text\" id=\"inputDomiclie\" placeholder=\"Enter Domicile\"\n                  formControlName=\"domicile\">\n                <div *ngFor=\"let validation of validationMessage.domicile\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                    *ngIf=\"companyForm.get('domicile').hasError(validation.type) && (companyForm.get('domicile').dirty || companyForm.get('domicile').touched)\"\n                    style=\"color: red;margin-left: 14px;\">\n                    {{ validation.message }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <div class=\"form-group\">\n              <label class=\"col-sm-6 control-label\"><b>Fax Number:</b></label>\n              <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"text\" id=\"inputFax\" placeholder=\"Enter Fax Number:\" formControlName=\"fax\">\n                <div *ngFor=\"let validation of validationMessage.fax\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                    *ngIf=\"companyForm.get('fax').hasError(validation.type) && (companyForm.get('fax').dirty || companyForm.get('fax').touched)\"\n                    style=\"color: red;margin-left: 14px;\">\n                    {{ validation.message }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>Email Address:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n          <div class=\"col-sm-offset-2\">\n            <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Email \" formControlName=\"email\"\n            >\n            <div *ngFor=\"let validation of validationMessage.email\">\n              <div style=\"color: red;margin-left: 14px;\"\n                *ngIf=\"companyForm.get('email').hasError(validation.type) && (companyForm.get('email').dirty || companyForm.get('email').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>BCC Address for all outgoing mails:</b></label>\n          <div class=\"col-sm-offset-2\">\n            <input class=\"form-control\" type=\"email\" id=\"inputBcc\" placeholder=\"Enter BCC Address\"\n              formControlName=\"outGoingMails\">\n            <div *ngFor=\"let validation of validationMessage.outGoingMails\">\n              <div style=\"color: red;margin-left: 14px;\"\n                *ngIf=\"companyForm.get('outGoingMails').hasError(validation.type) && (companyForm.get('outGoingMails').dirty || companyForm.get('outGoingMails').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>Bank Name:</b></label>\n          <div class=\"col-sm-offset-2\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"Enter Bank Name \" formControlName=\"bankName\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n          <div class=\"col-sm-offset-2\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"Enter Account Type\"\n              formControlName=\"bankType\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"form-row\">\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Account Number:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" placeholder=\"Enter Account Number\"\n                formControlName=\"bankAccNum\">\n              <div *ngFor=\"let validation of validationMessage.bankAccNum\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"companyForm.get('bankAccNum').hasError(validation.type) && (companyForm.get('bankAccNum').dirty || companyForm.get('bankAccNum').touched)\"\n                  style=\"color: red;margin-left: 14px;\">\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>Official Company Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n          <div class=\"col-sm-offset-2\">\n            <input class=\"form-control\" type=\"text\" id=\"inputCompanyNo\" placeholder=\"Enter Official Company Number\"\n              formControlName=\"officialNumber\">\n            <div *ngFor=\"let validation of validationMessage.officialNumber\">\n              <div style=\"color: red;margin-left: 14px;\"\n                *ngIf=\"companyForm.get('officialNumber').hasError(validation.type) && (companyForm.get('officialNumber').dirty || companyForm.get('officialNumber').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Taxation No:</b></label>\n            <div class=\"col-sm-offset-2\">\n              <input class=\"form-control\" type=\"text\" id=\"inputTaxationno.\" placeholder=\"Enter Taxation Number\"\n                formControlName=\"taxationNumber\">\n              <div *ngFor=\"let validation of validationMessage.taxNumber\">\n                <div style=\"color: red;margin-left: 14px;\"\n                  *ngIf=\"companyForm.get('taxationNumber').hasError(validation.type) && (companyForm.get('taxationNumber').dirty || companyForm.get('taxationNumber').touched)\"\n                  style=\"color: red;margin-left: 14px;\">\n                  {{ validation.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n              <label class=\"col-sm-6 control-label\"><b>PAN (Permanent Account Number):</b></label>\n              <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" onkeyup=\"this.value = this.value.toUpperCase().trim();\" type=\"text\" id=\"inputPanno.\" placeholder=\"Enter PAN Number\"\n                  formControlName=\"panNumber\">\n                <div *ngFor=\"let validation of validationMessage.panNo\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                    *ngIf=\"companyForm.get('panNumber').hasError(validation.type) && (companyForm.get('panNumber').dirty || companyForm.get('panNumber').touched)\"\n                    style=\"color: red;margin-left: 14px;\">\n                    {{ validation.message }}\n                  </div>\n                </div>\n              </div>\n          </div>\n        </div>\n      </div>\n\n     <div class=\"row\">\n       <div class=\"col-lg-6 col-md-6 col-sm-6\">\n     <div class=\"row\">\n      <div class=\"col-lg-10 col-md-6 col-sm-6\">\n        <div class=\"form-group\">\n           <label class=\"control-label\"><b>Company Logo:</b></label><br>\n            <img [src]=\"url\" height=\"70\">\n            <input type=\"file\" class=\"form-control-file border\" id=\"companyLogo\" (change)=\"onSelectFile($event)\" accept=\"image/*\">\n            <div *ngIf=\"!imageFlag\">\n              <p class=\"imageError\">{{ imageError }}</p>\n            </div>\n            <div *ngIf=\"imageFlag\">\n              <p class=\"imageError\">{{ imageErrorMsg }}</p>\n            </div>\n          </div>\n      </div>\n      <div class=\"col-lg-2 col-md-6 col-sm-6\">\n        <div class=\"delete-button\">\n        <button class=\"btn btn-danger\" type=\"button\" (click)=\"reset()\" ><i class=\"fa fa-trash\"></i>&nbsp; Reset</button>\n      </div>\n      </div>\n     </div>\n    </div>\n    <div class=\"col-lg-6 col-md-6 col-sm-6\"></div>\n    </div>\n\n      <!-- <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label class=\"col-sm-4 control-label\"><b>Home Currency:</b></label>\n        <select class=\"dropdown dropdown-toggle form-control\" Name=\"HomeCurrency\" formControlName=\"currency\">\n          <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------{{currencyOptionValue}}----------</option>\n          <option [ngValue]=\"homeCurrency.code\" *ngFor=\"let homeCurrency of currency\"> {{ homeCurrency.code }}</option>\n        </select>\n      </div>\n        <div class=\"form-group col-md-4\" style=\"margin-top: 13px;\">\n            <button type=\"button\" style=\"float: left;\" class=\"btn btn-primary\" data-toggle=\"modal\" (click)=resetForm() data-target=\"#myModal\">\n             <i class=\"fa fa-plus-square\"></i> Add Currency\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\" style=\"float: left;\" >\n                <i class=\"fa fa-trash\"></i> Delete Currency\n               </button>\n              </div>\n      </div> -->\n            <!-- <div class=\"modal\" id=\"myModal\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n\n\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\">Add Currency</h4>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                      <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                        <strong>{{ errMsg }}</strong>\n                      </p>\n                    </div>\n\n                    <div class=\"col-sm-offset-2\">\n                      <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                        <strong>{{ successMsg }}</strong>\n                      </p>\n                    </div>\n\n                    <div class=\"modal-body\">\n                      <form role=\"form\" [formGroup]=\"addCurrencyForm\" (ngSubmit)=\"addCurrency()\">\n                        <div class=\"form-group\">\n                          <label class=\"col-sm-6 control-label\"><b>Currency Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                          <input type=\"text\" formControlName=\"name\" placeholder=\"Enter Currency Name\" class=\"form-control\" />\n                          <div *ngFor=\"let validation of currencyValidationMessage.name\">\n                            <div style=\"color: red;margin-left: 14px;\"\n                              *ngIf=\"addCurrencyForm.get('name').hasError(validation.type) && (addCurrencyForm.get('name').dirty || addCurrencyForm.get('name').touched)\"\n                              style=\"color: red;margin-left: 14px;\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                          <label class=\"col-sm-6 control-label\"><b>Currency Code:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                          <input type=\"text\" formControlName=\"code\" placeholder=\"Enter Currency Code\" class=\"form-control\" />\n                          <div *ngFor=\"let validation of currencyValidationMessage.code\">\n                            <div style=\"color: red;margin-left: 14px;\"\n                              *ngIf=\"addCurrencyForm.get('code').hasError(validation.type) && (addCurrencyForm.get('code').dirty || addCurrencyForm.get('code').touched)\"\n                              style=\"color: red;margin-left: 14px;\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <button type=\"button\" class=\"btn btn-danger\" id=\"dismiss\" style=\"float:right;\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"submit\" class=\"btn btn-success\" style=\"float:right;\" [disabled]='addCurrencyForm.invalid'>Submit</button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n             </div> -->\n             <!-- <div class=\"form-group\">\n              <div class=\"col-sm-offset-2 col-sm-10\">\n                <img [src]=\"url\" height=\"200\">\n                <input type=\"file\" class=\"form-control-file border\" (change)=\"onSelectFile($event)\" accept=\"image/*\">\n              </div>\n            </div> -->\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"companyForm.invalid || countryMsg || countryMsg === undefined || imageFlag\" (click)=\"scroll(target)\">Add Company</button>\n          <button type=\"submit\" class=\"btn btn-danger\" routerLink=\"/pages/dashboard/company-list\">Cancel</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}