{"version":3,"sources":["webpack:///src/app/pages/employee-wizard/employee-list/employee-list.component.ts","webpack:///src/app/pages/employee-wizard/employee-list/employee-list.component.html","webpack:///src/app/pages/employee-wizard/employee-wizard.module.ts","webpack:///src/app/pages/employee-wizard/employee-wizard-routing.module.ts","webpack:///src/app/pages/employee-wizard/employee-profile/employee-profile.component.html","webpack:///src/app/pages/employee-wizard/employee-profile/employee-profile.component.ts","webpack:///src/app/pages/employee-wizard/employee-wizard.component.ts","webpack:///src/app/pages/employee-wizard/employee-wizard.component.html"],"names":["EmployeeListComponent","fb","api","ngZone","router","route","uploadAvatarAPI","util","employeeList","Array","filterEmployeeDataMsg","minPasswordLength","maxPasswordLength","status","employeeLabelName","activeStatus","filterEmployeeList","statusStatus","validationErrorMessage","type","message","assignTLValidation","assignTLForm","getEmployeeListData","passwordFormValidation","getTlList","userProfileForm","permissionInfo","permissionRoleInfo","search","document","getElementById","classList","add","remove","error","console","log","getEmployeeList","subscribe","data","length","value","click","employeeCount","navigateByUrl","err","setPasswordForm","group","password","compose","minLength","maxLength","required","pattern","passwordConfirmation","compare","fieldName","employeeId","resetModal","companyTlList","setTimeout","fire","employeeTlList","valid","setPassword","successFlag","successMsg","passwordFlag","run","handleErrroMessage","errMessage","filterEmployeeDetails","assignTlForm","parentIdsData","userId","parentUserId","tlId","get","setValue","assignTl","reset","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","title","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","allowOutsideClick","then","result","unassignTl","dismiss","DismissReason","cancel","parentUsersIds","companyEmployeeTlList","push","updateEmployeeStatus","filterFunctionality","event","target","files","reader","FileReader","readAsDataURL","onload","i","_id","url","avatar","file","userAvatar","uploadProfileImage","employeeFilter","changeStatus","resetFunctionality","setPasswordFormData","actionOnTl","selector","templateUrl","styleUrls","EmployeeWizardModule","declarations","imports","providers","path","component","canActivate","children","redirectTo","pathMatch","EmployeeWizardRouitngModule","forChild","EmployeeProfileComponent","docApi","skillApi","http","companyListData","branchList","departmentList","jobProfileList","successMessage","errorMsg","address","familyType","familyDetailsList","divShow","formShow","showAddFamilyButton","educationBtn","imageSrc","actionBox","relivingIs","basicDetail","checkbox","relation","items","openval","shown","show","addAddess","buttonName","button","addressMsg","EducationForm","addessBtn","listMesg","workExperience","listExprience","addExpbtn","showCard","bankList","bankForm","payrollList","payrollForm","paymentType","bioForm","bioList","languageSkillList","lsnguageSkillForm","addLanguageBtn","percentErrorMsg","basicDetailsData","educationalStatus","employeeLeaveList","employeeLeaveForm","leaveSettingButton","idProofsList","idProofsForm","idProofsSettingButton","bannBtn","experienceBtn","educationBtnadd","addfamilyBtn","skillLanguageBtn","payrollButton","leaveButton","idProofsButton","bioValidationMessage","validationMessageZip","validationMessageEducation","validationMessage","validationMessageFamily","validationMessageExper","validationMessageBank","payrollValidations","validationMessageLeaveSettings","validationMessageIdProofsSettings","uploadedDocumentDetails","employeeDocumentsDetails","removeAttribute","snapShotParam","snapshot","paramMap","existingBasicDetails","formDataValidation","listDocument","getList","addressValidation","educationDetailsValidation","empBioValidation","bankDataValidation","experienceValidation","skillCate","addMemberValidation","payrollValidation","languageSkillValidation","leaveSettingForm","uploadImageForm","idProofsSettingForm","setAttribute","employeeBasicForm","departmentId","branchId","companyId","jobProfileId","name","dob","contactDetails","personal","phone","landLineNum","email","official","officialEmailAsLoginEmail","isTL","onSelect","getDepartmentListData","employeeName","personalContactNum","personalPhoneNum","personalEmail","officialContactNum","officialPhoneNum","officialEmail","cleanBasicDetailForm","cleanFormLevelTwo","submitData","hidden","employeeDetails","errMsg","updateEmployeeBasicDetails","action","existingPersonalDetails","employeeBioForm","bio","height","weight","color","moleIdentification","bloodGroup","eyePower","handicapped","handicappedPercent","multipleHandicapped","multipleHandicappedPercent","illness","physical","physicalIllnessName","treatmentName","hospitalName","treatmentDuration","illnessStatus","mental","mentalIllnessName","biodata","bioDataList","Object","keys","employeeBioButton","of","cleanBioData","cleanFormLevelThree","submitBioData","bioListData","updateBio","dynamicValidation","setValidators","updateValueAndValidity","clearValidators","employeeAddressForm","doorNum","streetName1","streetName2","landmark","zipcode","district","state","addressType","oldAddress","titleName","addressList","addressId","cleanAddressForm","cleanFormLevelOne","undefined","submitAddress","showAddress","updateAddess","previousValue","id","deleteAddress","getJobProfileListData","empEducationForm","educationalDetails","courseName","instituteName","passOutYear","description","scoredPercent","getCompanyData","company","getBranchListData","branch","showBranchList","getJobProfile","element","scrollIntoView","getDepartmentData","department","documentData","docData","e","dataTransfer","match","alert","_handleReaderLoaded","bind","imagePath","skillCategoryData","skillValue","skillCategory","showForm","addRelationForm","family","members","age","occupation","education","income","familyId","familyIdValue","familyTypeList","cleanFamilyForm","nativeElement","addFamilyMember","getFamilyDetails","updateFamilyDetails","getFamilyData","response","familyDetails","showAddFamilyForm","removeFamilyDetails","educationDetails","educationData","inputValue","errorMsgg","toString","eduBtn","educationCurentId","removeEducation","showEducationDetails","cleanEducationalFormData","submitEducationalData","updateEducation","workExprience","exprienceTitle","exprienceListData","expCurentId","workExperienceForm","workExperiences","companyName","designation","experienceYears","max","jobDescription","relivingReason","remarks","removeExprience","showWorkList","cleanWorkExperienceForm","experiAdd","updateWokExprience","bankDetailsList","lenthoffical","lenthperosnal","bankDetailsForm","bankListData","bankDetails","accountNum","accountPlace","accountType","debitCardNum","debitCardType","existingBankDetails","cleanBankForm","employBank","payrollDetailsForm","payroll","ctc","ctcEffectiveFromDate","ctcEffectiveToDate","paidLeaveBalance","earnedLeaveBalance","gradeRule","basicPay","mode","payrollDataSubmit","payrollListData","updatePayrollSettings","payollDataList","gradeRuleList","payollDataLength","payrollData","payrollGradeRuleList","substring","leaveEmployeeDataList","leaveSettings","leaveSettingHeadingButton","employeeLeaveData","cleanLeaveSettingForm","employeeLeaveDetailsForm","addLeaveSettings","employeeLeaveDataList","updateLeaveSettings","leaveSettingId","startDate","endDate","leavePerMonth","reason","employeeIdProofsDataList","idProofsHeadingButton","idProofsData","cleanIdProofsSettingForm","idProofsDetailsForm","addEmployeeIdProofs","getEmployeeIdProofsList","updateIdProofsSettings","idProofsSettingId","proofsId","identityProofs","identityName","identityNum","authorityName","issuePlace","expiryDate","proofId","removeIdProofsDetails","LanguageSkill","addLanguageSkillList","LanguageData","languageSkillEditId","languageSkillTitle","languageSkillForm","languageSkills","toSpeak","toRead","toWrite","cleanLaungugeSkillForm","addLanguageSkill","listSkillLanguage","updateLanguageSkill","uploadedDocuments","employeeDocumentList","uploadForm","documentTypeId","index","uploadDocuments","uploadedDocumentList","imageUrl","window","open","deleteEmployeeDocument","employeeForm","onClick","sameAsPersonalDetails","scroll","onFileSelect","uploadDocs","EmployeeWizardComponent"],"mappings":"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","file":"employee-wizard-employee-wizard-module-es5.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\nimport { state } from '@angular/animations';\nimport { ApiService } from 'src/app/services/api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employeeList = new Array();\n  filterEmployeeDataMsg = '';\n  setPasswordForm: any;\n  passwordFlag: Boolean;\n  errMessage: String;\n  successFlag: Boolean;\n  successMsg: String;\n  employeeId: String;\n  minPasswordLength: number = 8;\n  maxPasswordLength: number = 14;\n  companyTlList: any;\n  companyEmployeeTlList: any;\n  assignTlForm: any;\n  status = \"Active\";\n  employeeLabelName = 'Active Employees';\n  activeStatus = 'Inactive';\n  url: any;\n  userAvatar: any;\n  filterEmployeeList = [];\n  statusStatus = false;\n  permissionInfo: any;\n\n  constructor(public fb: FormBuilder,\n    private api: EmployeeService,\n    public ngZone: NgZone,\n    private router: Router,\n    private route: ActivatedRoute,\n    private uploadAvatarAPI: ApiService,\n    private util: UtilitiesService\n    ) { }\n\n  ngOnInit() {\n    this.assignTLForm();\n    this.getEmployeeListData();\n    this.passwordFormValidation();\n    this.getTlList();\n    this.userProfileForm();\n    this.permissionInfo = this.util.permissionRoleInfo;\n\n  }\n\n  updateFunction(){\n    try {\n      if(this.permissionInfo.search('Create Employees') === -1){\n        (document.getElementById('updateEmployeePermission')as HTMLAnchorElement).classList.add('disabled');\n      } else {\n        (document.getElementById('updateEmployeePermission')as HTMLAnchorElement).classList.remove('disabled');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getEmployeeListData() {\n    try {\n      this.api.getEmployeeList(this.status).subscribe(data => {\n          if (data.status === \"success\") {\n            if(data.data.length === 0){\n              if(this.status === 'Active'){\n                (document.getElementById('employeeStatus')as HTMLInputElement).value = \"Inactive\";\n                (document.getElementById('filterClick')as HTMLElement).click();\n              } else if(this.status === 'Inactive'){\n                this.api.employeeCount().subscribe((data)=>{\n                  if(data.status === 'success'){\n                    if(data.data === 0){\n                      this.router.navigateByUrl(\"/pages/employee-wizard/employee-profile\");\n                    } else {\n                      this.filterEmployeeDataMsg = 'No Data Found';\n                      this.employeeList = [];\n                      this.filterEmployeeList = [];\n                    }\n                  }\n                })\n              }\n            } else {\n              this.employeeList = data.data;\n              this.filterEmployeeList = data.data;\n              this.filterEmployeeDataMsg = '';\n            }\n        }\n      })\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  passwordFormValidation() {\n    try {\n      this.setPasswordForm = this.fb.group({\n        password: new FormControl(null, Validators.compose([\n          Validators.minLength(8),\n          Validators.maxLength(14),\n          Validators.required,\n          Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8}$') //this is for the letters both uppercase & lowercase and numbers.\n        ])),\n        passwordConfirmation: new FormControl(null, Validators.compose([\n          Validators.required,\n          RxwebValidators.compare({ fieldName: 'password' })\n        ]))\n      });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSelect(value: String, type) {\n    try {\n      this.employeeId = value;\n      if(type === 'Assign'){\n        this.resetModal('Assign');\n        if(this.companyTlList.length === 0){\n          setTimeout(()=>{\n          (document.getElementById('dismissTLModal')as HTMLElement).click();\n          },0)\n          Swal.fire('Add TL/Manager First');\n        }\n      } else if(type === 'setPassword'){\n        this.resetModal('setPassword');\n      } else if(type === 'UnAssign'){\n        this.employeeTlList();\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n  }\n\n  setPasswordFormData() {\n    try {\n      if (this.setPasswordForm.valid) {\n        this.api.setPassword(this.setPasswordForm.value, this.employeeId).subscribe(data => {\n          if (data.status === \"success\" || data.status === 200) {\n            this.successFlag = true;\n            this.successMsg = data.message;\n            this.passwordFlag = false;\n            setTimeout(() => {\n              this.ngZone.run(() => this.router.navigateByUrl('/pages/employee-wizard/employee-list'));\n              this.handleErrroMessage();\n              (document.getElementById('dismissSetPassword')as HTMLElement).click();\n            }, 2000)\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.passwordFlag = true;\n            this.successFlag = false;\n            this.errMessage = data.message;\n            setTimeout(()=>{\n              this.handleErrroMessage();\n              (document.getElementById('dismissSetPassword')as HTMLElement).click();\n            },3000)\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  //For resetFunctionality of employee fields\n  resetFunctionality(){\n    (document.getElementById('listEmployee') as HTMLInputElement).value = \"\";\n    (document.getElementById('employeeStatus') as HTMLInputElement).value = \"Active\";\n    this.status = 'Active';\n    this.activeStatus = 'Inactive';\n    this.filterEmployeeDataMsg = '';\n    this.statusStatus = false;\n    this.getEmployeeListData();\n  }\n\n  // filterFunctionality of employee fields list\n  filterFunctionality(){\n    try{\n\n      let employeeId = (document.getElementById('listEmployee') as HTMLInputElement).value;\n      let status = (document.getElementById('employeeStatus') as HTMLInputElement).value;\n\n      if(employeeId.length != 0){\n        status = '';\n        this.filterEmployeeDetails(employeeId);\n      }\n      if(status === \"Active\"){\n        this.status = 'Active';\n        this.activeStatus = 'Inactive';\n        this.employeeLabelName = 'Active Employees';\n        this.getEmployeeListData();\n      } else if(status === 'Inactive'){\n        this.status = 'Inactive';\n        this.activeStatus = 'Active';\n        this.employeeLabelName = 'Inactive Employees';\n        this.getEmployeeListData();\n      }\n\n    }catch(err){\n      console.log(err);\n    }\n\n  }\n\n  //For print Validation and error message.\n  validationErrorMessage = {\n    'password': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minlength', message: `Password must be at least ${this.minPasswordLength} characters long` },\n      { type: 'maxlength', message: `Password should not be greater than ${this.maxPasswordLength} characters` },\n      { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, one digit and one special characters' }\n    ],\n    'passwordConfirmation': [\n      { type: 'required', message: 'Confirm Password is required' },\n      { type: 'compare', message: 'Passwords do not match' },\n    ],\n  }\n\n  // Company Tl List\n  getTlList(){\n    try{\n      this.api.getTlList().subscribe((data)=>{\n        if(data.status === 'success'){\n          this.companyTlList = data.data;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n// Assign Tl list form\nassignTLForm(){\n  try{\n    this.assignTlForm = this.fb.group({\n      parentIdsData: new FormGroup({\n        userId: new FormControl(''),\n        parentUserId: new FormControl('',Validators.required)\n      })\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\nassignTLValidation = {\n  'parentUserId': [\n    { type: 'required', message: 'TL/Manager Name is Required' }\n  ]\n}\n\n// Assign And Unassign TL ID\nactionOnTl(tlId,type){\ntry{\n  if(type === 'Assign'){\n    this.assignTlForm.get('parentIdsData.userId').setValue(this.employeeId);\n    this.assignTlForm.get('parentIdsData.parentUserId').setValue(tlId);\n  }\n} catch(err){\n  console.log(err);\n}\n}\n\n// Submit Assign TL Form\nassignTl(){\n  try{\n      this.api.assignTl(this.assignTlForm.value,this.employeeId).subscribe((data)=>{\n        if(data.status === \"success\"){\n          this.successFlag = true;\n          this.successMsg = data.message;\n          this.passwordFlag = false;\n          setTimeout(() => {\n            this.ngZone.run(() => this.router.navigateByUrl('/pages/employee-wizard/employee-list'));\n            (document.getElementById('dismissTLModal')as HTMLElement).click();\n            this.handleErrroMessage();\n          }, 2000)\n        } else if(data.status === 'error'){\n          this.passwordFlag = true;\n          this.successFlag = false;\n          this.errMessage = data.message;\n          setTimeout(()=>{\n            (document.getElementById('dismissTLModal')as HTMLElement).click();\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Error Handling Message\nhandleErrroMessage(){\n  this.successFlag = false;\n  this.passwordFlag = false;\n  this.successMsg = '';\n  this.errMessage = '';\n}\n\nresetModal(type){\n  try{\n    if(type === 'Assign'){\n      this.assignTlForm.reset();\n    } else if(type === 'setPassword'){\n      this.setPasswordForm.reset();\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Unassign TL\nunassignTL(tlId){\n  try{\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to UnAssign TL/Manager\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.value) {\n        this.api.unassignTl(this.employeeId,tlId).subscribe((data)=>{\n          if(data.status === \"success\"){\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          data.message,\n          'success'\n        )\n        setTimeout(()=>{\n          (document.getElementById('dismissUnAssignTLModal') as HTMLElement).click();\n        },0)\n          }\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          \"Didn't UnAssign TL/Manager\",\n          'error'\n        )\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n//Employee TL List\nemployeeTlList(){\n  try{\n    this.api.employeeTlList(this.employeeId).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.parentUsersIds.length === 0){\n          setTimeout(()=>{\n            (document.getElementById('dismissUnAssignTLModal') as HTMLElement).click();\n          },0)\n          Swal.fire('Nothing to UnAssign');\n        } else {\n          this.companyEmployeeTlList = data.data.parentUsersIds;\n        }\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Change Status\nchangeStatus(){\n  try{\n    (document.getElementById('listEmployee') as HTMLInputElement).value = \"\";\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Get Employee Details\nfilterEmployeeDetails(employeeId){\n  try{\n    this.api.filterEmployeeList(employeeId).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeList = [];\n        this.employeeList.push(data.data);\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\nstatusConfirmationMessage(value: String){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: 'btn btn-success',\n      cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: `You want to ${this.activeStatus} the employee status`,\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true,\n    allowOutsideClick: false,\n  }).then((result) => {\n    if (result.value) {\n      this.api.updateEmployeeStatus(value,this.activeStatus).subscribe((data)=>{\n        if(data.status === \"success\"){\n      swalWithBootstrapButtons.fire(\n        'Employee Status!',\n        data.message,\n        'success'\n      )\n      this.filterFunctionality();\n        }\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        \"Employee Status didn't changed\",\n        'error'\n      )\n    }\n  })\n}\n\nonSelectFile(event,employeeId) {\n  if (event.target.files && event.target.files[0]) {\n    var reader = new FileReader();\n\n    reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n    reader.onload = (event: any) => { // called once readAsDataURL is completed\n      for(var i=0; i<this.employeeList.length; i++){\n        if(this.employeeList[i]._id == employeeId){\n          this.url = this.employeeList[i].avatar;\n          this.employeeList[i].avatar = event.target.result;\n          break;\n        }\n      }\n    }\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.userAvatar.get('avatar').setValue(file);\n      // Open Modal\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to change your profile picture\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true,\n        allowOutsideClick: false,\n      }).then((result) => {\n        if (result.value) {\n        this.uploadAvatarAPI.uploadProfileImage(this.userAvatar,'Employee',employeeId).subscribe((data)=>{\n          if(data.status === 'success'){\n            swalWithBootstrapButtons.fire(\n              'Uploaded!',\n              data.message,\n              'success'\n            )\n          }\n        })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your profile not changed',\n            'error'\n          )\n          for(var i = 0; i<this.employeeList.length;i++){\n            if(this.employeeList[i]._id == employeeId){\n              this.employeeList[i].avatar = this.url;\n              break;\n            }\n          }\n        }\n      })\n\n    }\n  }\n}\n\n// Profile Image Form\nuserProfileForm(){\n  try {\n    this.userAvatar = this.fb.group({\n      avatar: ['']\n    })\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Update the filter functionality\nemployeeFilter(){\n  try {\n    if((document.getElementById('listEmployee')as HTMLInputElement).value.length !==0){\n      this.statusStatus = true;\n    } else {\n      this.statusStatus = false;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n}\n\n\n\n","<div class=\"card\">\n  <div class=\"card-header\">\n    <h2 class=\"text-center\">Employee List</h2>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"form-row\">\n      <div class=\"col-lg-3 col-md-3 col-sm-4\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>{{ employeeLabelName }}</b></label>\n          <select class=\"dropdown dropdown-toggle form-control\" id=\"listEmployee\" (change)=\"employeeFilter()\">\n            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee</option>\n            <option class=\"dropdown-item\" *ngFor=\"let employee of filterEmployeeList\" value=\"{{employee._id}}\">\n              {{employee.name}}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-4\">\n        <div class=\"form-group\">\n          <label class=\"col-sm-6 control-label\"><b>Status:</b></label>\n          <select class=\"dropdown dropdown-toggle form-control\" id=\"employeeStatus\" (change)=\"changeStatus()\"\n            [disabled]=\"statusStatus\">\n            <option class=\"dropdown-item\" ng-selected=\"true\" value=\"Active\" selected>Active</option>\n            <option class=\"dropdown-item\" ng-selected=\"true\" value=\"Inactive\">Inactive</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"col-lg-3 col-md-3 col-sm-4\">\n        <div class=\"form-group right-buttongroup\">\n        <button class=\"btn btn-primary\" id=\"filterClick\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp; Filter</button>\n        <button class=\"btn btn-danger\"  (click)=\"resetFunctionality()\"><i class=\"fas fa-trash-restore\"></i>&nbsp; Reset</button>\n      </div>\n    </div>\n\n\n    <div class=\"col-lg-3 col-md-3 col-sm-3\">\n      <div class=\"form-group right-buttongroup\" >\n          <a [class.disabled]=\"permissionInfo.search('Create Employees') === -1\" class=\"btn btn-primary\" routerLink=\"../employee-profile\" style=\"float: right;\" ><i class=\"fa fa-plus-square\"></i>&nbsp; Add Employee</a>\n      </div>\n    </div>\n    </div>\n\n\n  \n\n   \n\n  </div>\n\n  <div class=\"panel-body\">\n    <ul class=\"list-group\">\n        <table class=\"table\" style=\"text-align: center;\">\n          <thead class=\" text-primary\">\n            <tr>\n              <th> Profile </th>\n              <th>Employee Name</th>\n              <th>Department</th>\n              <th>Job Profile</th>\n              <th>Contact Info</th>\n              <th>Age</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody *ngFor=\"let list of employeeList\">\n            <tr>\n              <!-- <td><img style=\"height: 50px; width: 50px;\"\n                  src=\"{{ list.avatar }}\">\n\n              </td> -->\n              <td>\n                <div class=\"image-container\">\n                  <img [src]='list.avatar' id=\"imgProfile\" style=\"width: 60px; height: 50px\" class=\"rounded-circle\" />\n                  <div class=\"middle\">\n                    <input type=\"file\" style=\"display: none;\" accept=\"image/*\" id=\"profilePicture\" #file\n                      (change)=\"onSelectFile($event,list._id)\" />\n                    <input type=\"button\" id=\"btnChangePicture\" value=\"Change\" (click)=\"file.click()\" />\n                  </div>\n                </div>\n              </td>\n              <td> {{ list.name }} </td>\n              <td> {{list.departmentName}}</td>\n              <td> {{ list.jobProfile }}</td>\n              <td> {{ list.email}} </td>\n              <td> {{ list.age }}</td>\n              <td>\n                <div class=\"dropdown\">\n                  <a class=\"text-secondary\" href=\"javascript:void(0);\" (click)=\"updateFunction() \"\n                    id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i\n                      class=\"fa fa-ellipsis-h\"></i> </a>\n                  <div class=\"dropdown-menu dropdown-menu-right\" style=\"background-color: rgb(190, 230, 231)\"\n                    aria-labelledby=\"dropdownMenuButton\">\n                    <a class=\"dropdown-item\" id=\"updateEmployeePermission\"\n                      routerLink=\"../employee-profile/{{ list._id }}\"><i\n                        class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</a>\n\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\" data-toggle=\"modal\" data-target=\"#myModal\"\n                      data-backdrop=\"static\" (click)=\"onSelect(list._id,'setPassword')\"><i\n                        class=\"fa fa-key\"></i>&nbsp;Set Password</a>\n\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\" data-toggle=\"modal\" data-target=\"#assignTL\"\n                      data-backdrop=\"static\" (click)=\"onSelect(list._id,'Assign')\"><i\n                        class=\"fas fa-user-plus\"></i>&nbsp;Assign TL/Manager</a>\n\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\" data-toggle=\"modal\" data-target=\"#unAssignTL\"\n                      data-backdrop=\"static\" (click)=\"onSelect(list._id,'UnAssign')\"><i\n                        class=\"fas fa-user-slash\"></i>&nbsp;UnAssign TL/Manager</a>\n\n                    <a *ngIf=\"activeStatus === 'Inactive' \" href=\"javascript:void(0);\" class=\"dropdown-item\"\n                      (click)=\"statusConfirmationMessage(list._id)\">\n                      <i class=\"fas fa-battery-half\"></i>&nbsp;{{ activeStatus }}</a>\n                    <a *ngIf=\"activeStatus === 'Active' \" href=\"javascript:void(0);\" class=\"dropdown-item\"\n                      (click)=\"statusConfirmationMessage(list._id)\">\n                      <i class=\"fas fa-battery-full\"></i>&nbsp;{{ activeStatus }}</a>\n                  </div>\n                </div>\n              </td>\n            </tr>\n        </table>\n\n    </ul>\n  </div>\n  <div *ngIf=\"filterEmployeeDataMsg.length != 0\">\n    <h3 style=\"text-align: center;\">{{ filterEmployeeDataMsg }}</h3>\n  </div>\n</div>\n\n<!-- The Modal -->\n<div class=\"modal\" id=\"myModal\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Set Password</h4>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\n      </div>\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"passwordFlag\">\n          <strong>{{ errMessage }}</strong>\n        </p>\n      </div>\n\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n          <strong>{{ successMsg }}</strong>\n        </p>\n      </div>\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <form role=\"form\" [formGroup]=\"setPasswordForm\" (ngSubmit)=\"setPasswordFormData()\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Password:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n\n            <input type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" class=\"form-control\" />\n            <div *ngFor=\"let validation of validationErrorMessage.password\">\n              <div\n                *ngIf=\"setPasswordForm.get('password').hasError(validation.type) && (setPasswordForm.get('password').dirty || setPasswordForm.get('password').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-sm-8 control-label\"><b>Confirm Password:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n            <input type=\"password\" formControlName=\"passwordConfirmation\" placeholder=\"Confirm Password\"\n              class=\"form-control\" />\n            <div *ngFor=\"let validation of validationErrorMessage.passwordConfirmation\">\n              <div\n                *ngIf=\"setPasswordForm.get('passwordConfirmation').hasError(validation.type) && (setPasswordForm.get('passwordConfirmation').dirty || setPasswordForm.get('passwordConfirmation').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <!-- <div class=\"col-sm-10\"> -->\n            <button type=\"submit\" class=\"btn btn-success\" style=\"float:right;\"\n              [disabled]=!setPasswordForm.valid>Submit</button>\n            <button type=\"button\" id=\"dismissSetPassword\" class=\"btn btn-danger\" style=\"float:right;\"\n              data-dismiss=\"modal\">Close</button>\n            <!-- </div> -->\n          </div>\n        </form>\n      </div>\n\n      <!-- Modal footer -->\n      <!-- <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n      </div> -->\n\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" id=\"assignTL\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Assign TL/Manager</h4>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\n      </div>\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"passwordFlag\">\n          <strong>{{ errMessage }}</strong>\n        </p>\n      </div>\n\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n          <strong>{{ successMsg }}</strong>\n        </p>\n      </div>\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <form role=\"form\" [formGroup]=\"assignTlForm.get('parentIdsData')\" (ngSubmit)=\"assignTl()\">\n          <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>TL/Manager Name:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n            <select class=\"dropdown dropdown-toggle form-control\" Name=\"AssignTL\" formControlName=\"parentUserId\"\n              (change)=\"actionOnTl($event.target.value,'Assign')\">\n              <option class=\"dropdown-item\" value=\"null\" selected disabled>-----Select TL/Manager-----</option>\n              <option class=\"dropdown-item\" *ngFor=\"let companyTL of companyTlList\" selected=\"{{ companyTL.name }}\"\n                value=\"{{ companyTL._id }}\">\n                {{ companyTL.name }}\n              </option>\n            </select>\n            <div *ngFor=\"let validation of assignTLValidation.parentUserId\">\n              <div\n                *ngIf=\"assignTlForm.get('parentIdsData.parentUserId').hasError(validation.type) && (assignTlForm.get('parentIdsData.parentUserId').dirty || assignTlForm.get('parentIdsData.parentUserId').touched)\"\n                style=\"color: red;margin-left: 14px;\">\n                {{ validation.message }}\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <!-- <div class=\"col-sm-10\"> -->\n            <button type=\"submit\" class=\"btn btn-success\" style=\"float:right;\"\n              [disabled]=!assignTlForm.valid>Submit</button>\n            <button type=\"button\" id=\"dismissTLModal\" class=\"btn btn-danger\" style=\"float:right;\"\n              data-dismiss=\"modal\">Close</button>\n            <!-- </div> -->\n          </div>\n        </form>\n      </div>\n      <!-- Modal footer -->\n      <!-- <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n      </div> -->\n\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" id=\"unAssignTL\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">UnAssign TL/Manager</h4>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\n      </div>\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"passwordFlag\">\n          <strong>{{ errMessage }}</strong>\n        </p>\n      </div>\n\n      <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successFlag\">\n          <strong>{{ successMsg }}</strong>\n        </p>\n      </div>\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <div class=\"card-body\">\n          <!-- for show earned leave list  -->\n          <div class=\"card\" style=\"background-color:whitesmoke;\">\n            <div class=\"panel-body\">\n              <ul class=\"list-group\">\n                <div class=\"card-body\">\n                  <table class=\"table\" style=\"text-align: center;\">\n                    <thead class=\" text-primary\">\n                      <tr>\n                        <th>Employee Name </th>\n                        <th> Action </th>\n                      </tr>\n                    </thead>\n                    <tbody *ngFor=\"let employeeTL of companyEmployeeTlList\">\n                      <tr>\n                        <td> {{employeeTL.displayName}} </td>\n                        <td>\n                          <button title=\"UnAssign\" class=\"btn btn-danger\" (click)=\"unassignTL(employeeTL._id)\"\n                            style=\"color: white;\"><i class=\"fa fa-trash\"></i>\n                          </button>\n                        </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                </div>\n              </ul>\n            </div>\n          </div>\n          <!-- show earned leave list end -->\n        </div>\n        <button type=\"button\" id=\"dismissUnAssignTLModal\" class=\"btn btn-danger\" style=\"float:right;\"\n          data-dismiss=\"modal\">Close</button>\n      </div>\n      <!-- Modal footer -->\n      <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n        </div> -->\n\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { EmployeeWizardComponent } from './employee-wizard.component';\nimport { EmployeeProfileComponent } from './employee-profile/employee-profile.component';\nimport { EmployeeWizardRouitngModule } from './employee-wizard-routing.module';\nimport { EmployeeService } from './services/employee.service';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\n\n\n@NgModule({\n    declarations: [EmployeeWizardComponent, EmployeeProfileComponent, EmployeeListComponent],\n    imports: [\n      CommonModule,\n      RouterModule,\n      EmployeeWizardRouitngModule,\n      ReactiveFormsModule,\n      FormsModule,\n      HttpClientModule\n    ],\n    providers:[EmployeeService,AuthGuard],\n  })\n  \n  export class EmployeeWizardModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { EmployeeWizardComponent } from './employee-wizard.component';\nimport { EmployeeProfileComponent } from './employee-profile/employee-profile.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\nconst route : Routes = [\n    {\n      path :'',\n      component : EmployeeWizardComponent,\n      canActivate:[AuthGuard],\n      children :[\n        {\n          path:'employee-profile',\n          component:EmployeeProfileComponent,\n        },\n        {\n          path:'employee-profile/:employeeId',\n          component:EmployeeProfileComponent,\n        },\n        {\n          path:'employee-list',\n          component:EmployeeListComponent,\n        },\n        {\n          path:'',\n          redirectTo:'employee-list',\n          pathMatch:'full',\n        },\n      ],\n    }\n  ];\n\n@NgModule({\n    declarations: [],\n    imports: [\n      CommonModule,\n      RouterModule.forChild(route),\n    ]\n  })\n\n  export class EmployeeWizardRouitngModule{}","<div class=\"card card-body\">\n    <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" #target>\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#basicDetails\" role=\"tab\" aria-controls=\"basic details\">Basic\n        Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#bio\" role=\"tab\" (click)=\"bioListData()\" aria-controls=\"bio\">Employee Bio</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link addesstab\" data-toggle=\"tab\" (click)=\"showAddress()\" href=\"#address\" role=\"tab\" aria-controls=\"address\">Address</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"showEducationDetails()\" href=\"#educationDetails\" role=\"tab\" aria-controls=\"educationDetails\">Education Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"uploadedDocumentList()\" href=\"#uploadDocument\" role=\"tab\" aria-controls=\"uploadDocument\">Upload\n        Document</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"bankDetails()\" href=\"#bankDetails\" role=\"tab\" aria-controls=\"bankDetails\">Bank Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#workExperience\" (click)=\"showWorkList()\" role=\"tab\" aria-controls=\"workExperience\">Work Experience</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#skillCat\" role=\"tab\" aria-controls=\"skillCat\">Skill Category</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#addFamily\" role=\"tab\" (click)=\"getFamilyDetails()\" aria-controls=\"addFamily\">Family Details</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#profilePayroll\" role=\"tab\" (click)=\"payrollListData()\" aria-controls=\"profilePayroll\">Payroll Settings</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#languageSkill\" role=\"tab\" (click)=\"listSkillLanguage()\" aria-controls=\"languageSkill\">Language Skills</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#leaveSetting\" role=\"tab\" (click)=\"employeeLeaveDataList()\" aria-controls=\"leaveSetting\">Leave Settings</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"snapShotParam\">\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#identityproofs\" role=\"tab\" (click)=\"getEmployeeIdProofsList()\" aria-controls=\"identityproofs\">Identity Proofs</a>\n        </li>\n    </ul>\n    <br />\n    <br />\n    <div class=\"tab-content\">\n        <!-- basicDetails are start here -->\n        <div class=\"tab-pane active\" id=\"basicDetails\" role=\"tabpanel\">\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                </p>\n            </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeBasicForm\" (ngSubmit)=\"employeeForm()\" novalidate>\n                <h4>Basic Details</h4>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Company Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"Company\" formControlName=\"companyId\" (change)=\"onSelect($event.target.value)\">\n                    <option class=\"dropdown-item\" value=\"\" selected disabled>-----Select a Company-----</option>\n                    <option class=\"dropdown-item\" *ngFor=\"let company of companyListData\" selected=\"{{ company.name }}\"\n                        value=\"{{ company._id }}\">\n                        {{ company.name }}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.companyId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('companyId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('companyId').dirty ||\n                        employeeBasicForm.get('companyId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Branch Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"branchId\" formControlName=\"branchId\" (change)=\"onClick($event.target.value)\">\n                    <option class=\"dropdown-item\" value='' disabled>-----\n                        Select A Branch-----\n                    </option>\n                    <option class=\"dropdown-item\" *ngFor=\"let branch of branchList\" value=\"{{ branch._id }}\">\n                        {{ branch.name }}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.branchId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('branchId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('branchId').dirty ||\n                        employeeBasicForm.get('branchId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Department Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"departmentId\" formControlName=\"departmentId\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select A Department-----\n                      </option>\n                    <option class=\"dropdown-item\" *ngFor=\"let department of departmentList\" value=\"{{ department._id }}\">\n                        {{ department.title }}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.departmentId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('departmentId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('departmentId').dirty ||\n                        employeeBasicForm.get('departmentId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>JobProfile Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <select class=\"dropdown dropdown-toggle form-control\" Name=\"jobProfileId\" formControlName=\"jobProfileId\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select A JobProfile-----\n                      </option>\n                    <option class=\"dropdown-item\" *ngFor=\"let jobProfile of jobProfileList\" value=\"{{ jobProfile._id }}\">\n                        {{ jobProfile.positionName }} - {{jobProfile.payBasis}}\n                    </option>\n                  </select>\n                            <div *ngFor=\"let validation of validationMessage.jobProfileId\">\n                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                        employeeBasicForm\n                        .get('jobProfileId')\n                        .hasError(validation.type) &&\n                        (employeeBasicForm.get('jobProfileId').dirty ||\n                        employeeBasicForm.get('jobProfileId').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>Employee Name :&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Employee Name\" formControlName=\"name\" />\n                                <div *ngFor=\"let validation of validationMessage.name\">\n                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBasicForm.get('name').hasError(validation.type) &&\n                          (employeeBasicForm.get('name').dirty ||\n                          employeeBasicForm.get('name').touched)\n                          \" style=\"color: red;margin-left: 14px;\">\n                                        {{ validation.message }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>DOB :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"date\" placeholder=\"Enter Employee DOB\" formControlName=\"dob\" />\n                                <div *ngFor=\"let validation of validationMessage.dob\">\n                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBasicForm.get('dob').hasError(validation.type) &&\n                          (employeeBasicForm.get('dob').dirty ||\n                          employeeBasicForm.get('dob').touched)\n                          \" style=\"color: red;margin-left: 14px;\">\n                                        {{ validation.message }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h4>Contact Details</h4>\n                <div class=\"form-group\" [formGroup]=\"employeeBasicForm.get('contactDetails.personal')\">\n                    <h6>Personal Details :-</h6>\n                    <label class=\"col-sm-6 control-label\"><b>Phone No. :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Phone No.\" formControlName=\"phone\" />\n                        <div *ngFor=\"let validation of validationMessage.phone\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                  employeeBasicForm\n                  .get('contactDetails.personal.phone')\n                  .hasError(validation.type) &&\n                  (employeeBasicForm.get('contactDetails.personal.phone')\n                  .dirty ||\n                  employeeBasicForm.get('contactDetails.personal.phone')\n                  .touched)\n                  \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Landline No. :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Landline No.\" formControlName=\"landLineNum\" />\n                        <div *ngFor=\"let validation of validationMessage.landLineNum\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                  employeeBasicForm\n                  .get('contactDetails.personal.landLineNum')\n                  .hasError(validation.type) &&\n                  (employeeBasicForm.get('contactDetails.personal.landLineNum')\n                  .dirty ||\n                  employeeBasicForm.get('contactDetails.personal.landLineNum')\n                  .touched)\n                  \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Email :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Email Id\" formControlName=\"email\" />\n                        <div *ngFor=\"let validation of validationMessage.email\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                  employeeBasicForm\n                  .get('contactDetails.personal.email')\n                  .hasError(validation.type) &&\n                  (employeeBasicForm.get('contactDetails.personal.email')\n                  .dirty ||\n                  employeeBasicForm.get('contactDetails.personal.email')\n                  .touched)\n                  \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <br />\n                </div>\n\n                <input type=\"checkbox\" name=\"vehicle2\" (change)=\"sameAsPersonalDetails(actionBox)\"> Same as Personal Details<br><br>\n\n                <h6>Official Details :-</h6>\n                <div class=\"form-group\" [formGroup]=\"employeeBasicForm.get('contactDetails.official')\">\n                    <label class=\"col-sm-6 control-label\"><b>Phone No. :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Phone No.\" formControlName=\"phone\" />\n                        <div *ngFor=\"let validation of validationMessage.phone\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                    employeeBasicForm\n                    .get('contactDetails.official.phone')\n                    .hasError(validation.type) &&\n                    (employeeBasicForm.get('contactDetails.official.phone')\n                    .dirty ||\n                    employeeBasicForm.get('contactDetails.official.phone')\n                    .touched)\n                    \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Landline No. :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Landline No.\" formControlName=\"landLineNum\" />\n                        <div *ngFor=\"let validation of validationMessage.landLineNum\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                    employeeBasicForm\n                    .get('contactDetails.official.landLineNum')\n                    .hasError(validation.type) &&\n                    (employeeBasicForm.get('contactDetails.official.landLineNum')\n                    .dirty ||\n                    employeeBasicForm.get('contactDetails.official.landLineNum')\n                    .touched)\n                    \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                    <label class=\"col-sm-6 control-label\"><b>Email :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Email Id\" formControlName=\"email\" />\n                        <div *ngFor=\"let validation of validationMessage.email\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                    employeeBasicForm\n                    .get('contactDetails.official.email')\n                    .hasError(validation.type) &&\n                    (employeeBasicForm.get('contactDetails.official.email')\n                    .dirty ||\n                    employeeBasicForm.get('contactDetails.official.email')\n                    .touched)\n                    \" style=\"color: red;margin-left: 14px;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"height:30px\">\n                    <div class=\"form-group col-sm-offset-2 col-md-5\">\n                        <input type=\"checkbox\" formControlName=\"officialEmailAsLoginEmail\">&nbsp; Do You Want Official Email as Login Email\n                    </div>\n                    <!-- <div class=\"form-group col-sm-offset-2 col-md-5\"> -->\n                    <div *ngIf=\"basicDetail === 'Submit'\">\n                        <input type=\"checkbox\" (click)=\"oncheck()\" style=\"margin-top:5px\">&nbsp; Assign TL/Manager\n                    </div>\n                    <div class=\"form-group col-sm-offset-2 col-md-2\" *ngIf=\"checkbox\">\n                        <select class=\"dropdown dropdown-toggle form-control\" Name=\"Company\" formControlName=\"tlId\" (change)=\"onSelect($event.target.value)\">\n            <option class=\"dropdown-item\" ng-selected=\"true\" value=\"\" selected disabled>Select TL/Manager</option>\n            <option class=\"dropdown-item\" *ngFor=\"let tl of companyTlList\" selected=\"{{ tl.name }}\"\n                value=\"{{ tl._id }}\">\n                {{ tl.name }}\n            </option>\n          </select>\n                    </div>\n                    <div *ngFor=\"let validation of validationMessage.companyId\">\n                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                employeeBasicForm\n                .get('companyId')\n                .hasError(validation.type) &&\n                (employeeBasicForm.get('companyId').dirty ||\n                employeeBasicForm.get('companyId').touched)\n                \" style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                    <!-- </div> -->\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"col-sm-offset-2 col-sm-10\">\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"employeeBasicForm.invalid\" (click)=\"scroll(target)\">\n              {{ basicDetail }}\n              </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <!-- basicDetails end here -->\n\n        <!-- Bio details start  -->\n        <div class=\"tab-pane \" id=\"bio\" role=\"tabpanel\" #target>\n            <!-- list bio details -->\n            <div class=\"card\" *ngIf=\"bioList\">\n\n                <div class=\"panel-body\">\n                    <ul class=\"list-group\">\n                        <li class=\"list-group-item\" *ngFor=\"let list of biodata\">\n                            <div class=\"card\" style=\"background-color:ghostwhite\">\n                                <h5 style=\"text-align: center;\">Employee Bio Details </h5>\n                                <table class=\"table\" style=\"margin: auto\">\n                                    <tr>\n                                        <th>Height:</th>\n                                        <td>{{ list.height }}</td>\n                                        <th>Weight:</th>\n                                        <td>{{ list.weight}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Color:</th>\n                                        <td>{{ list.color}}</td>\n                                        <th>Mole Identification:</th>\n                                        <td>{{ list.moleIdentification}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Multiple Handicapped:</th>\n                                        <td>{{ list.multipleHandicapped}}</td>\n                                        <th>Multiple Handicapped Percent:</th>\n                                        <td>{{ list.multipleHandicappedPercent}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Eye Power:</th>\n                                        <td>{{ list.eyePower}}</td>\n                                        <th>Blood Group:</th>\n                                        <td>{{ list.bloodGroup}}</td>\n\n                                    </tr>\n                                </table>\n                                <h5 style=\"text-align: center;\">Physical Description Details</h5>\n                                <table class=\"table\" style=\"margin: auto\">\n                                    <tr>\n                                        <th>Hospital Name:</th>\n                                        <td>{{ list.illness.mental.hospitalName }}</td>\n                                        <th>Mental Illness Name:</th>\n                                        <td>{{ list.illness.mental.mentalIllnessName}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Treatment Duration:</th>\n                                        <td>{{ list.illness.mental.treatmentDuration}}</td>\n                                        <th>Treatment Name:</th>\n                                        <td>{{ list.illness.mental.treatmentName}}</td>\n                                    </tr>\n                                </table>\n                                <h5 style=\"text-align: center;\">Mental Description Details</h5>\n                                <table class=\"table\" style=\"margin: auto\">\n                                    <tr>\n                                        <th>Hospital Name:</th>\n                                        <td>{{ list.illness.physical.hospitalName }}</td>\n                                        <th>Account Number:</th>\n                                        <td>{{ list.illness.physical.illnessStatus}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Physical Illness Name:</th>\n                                        <td>{{ list.illness.physical.physicalIllnessName}}</td>\n                                        <th>Treatment Duration:</th>\n                                        <td>{{ list.illness.physical.treatmentDuration}}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Treatment Name:</th>\n                                        <td>{{ list.illness.physical.treatmentName}}</td>\n                                    </tr>\n                                </table>\n                                <div>\n                                    <button style=\"float: right\" (click)=\"bioEdit()\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- list bio details -->\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                </p>\n            </div>\n            <div class=\"col-sm-offset-2\">\n                <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                </p>\n            </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeBioForm\" (ngSubmit)=\"employeeBioFormData()\" novalidate *ngIf=\"bioForm\">\n                <h3>Employee Bio</h3>\n                <br />\n                <div [formGroup]=\"employeeBioForm.get('bio')\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>HEIGHT:&nbsp;(In Feet and Inches)&nbsp;(for eg: 3'11\")</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Height\" formControlName=\"height\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.height\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.height').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.height').dirty ||\n                            employeeBioForm.get('bio.height').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>WEIGHT:&nbsp;(In Kgs only)&nbsp;(for eg: 30kg)</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Weight\" formControlName=\"weight\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.weight\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.weight').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.weight').dirty ||\n                            employeeBioForm.get('bio.weight').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"form-group col-md-4\">\n                <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>SKIN COMPLEXION:&nbsp;</b></label>\n                  <div class=\"col-sm-offset-2\">\n                      <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Skin Complexion\"\n                        formControlName=\"color\" />\n                  </div>\n                </div>\n            </div> -->\n                        <div class=\"form-group col-md-4\">\n\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>SKIN COMPLEXION:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"color\">\n                        <option class=\"dropdown-item\" value='' disabled>-----\n                            Select Skin Complexion-----\n                        </option>\n                      <optgroup label=\"Pale White\">\n                          <option class=\"dropdown-item\" value=\"Light\">Light</option>\n                      </optgroup>\n                      <optgroup label=\"Fair\">\n                          <option class=\"dropdown-item\" value=\"White\">White</option>\n                      </optgroup>\n                      <optgroup label=\"White to Light Brown\">\n                          <option class=\"dropdown-item\" value=\"Medium\">Medium</option>\n                      </optgroup>\n                      <optgroup label=\"Moderate Brown\">\n                          <option class=\"dropdown-item\" value=\"Olive\">Olive</option>\n                      </optgroup>\n                      <optgroup label=\"Dark Brown\">\n                          <option class=\"dropdown-item\" value=\"Brown\">Brown</option>\n                      </optgroup>\n                      <optgroup label=\"Brown to Black\">\n                          <option class=\"dropdown-item\" value=\"Very Dark\">Very Dark</option>\n                      </optgroup>\n                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-6\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>MOLE IDENTIFICATION OR OTHER MARKS:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Mole Identification\" formControlName=\"moleIdentification\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>BLOOD GROUP:&nbsp;(for eg: AB-)</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Blood Group\" formControlName=\"bloodGroup\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.bloodGroup\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                            employeeBioForm.get('bio.bloodGroup').hasError(validation.type) &&\n                              (employeeBioForm.get('bio.bloodGroup').dirty ||\n                              employeeBioForm.get('bio.bloodGroup').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>EYE POWER:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Employee Eye Power\" formControlName=\"eyePower\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>HANDICAPPED:&nbsp;</b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" (change)=\"check($event.target.value)\" formControlName=\"handicapped\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select Option-----\n                      </option>\n                      <option class=\"dropdown-item\" value=\"false\">No</option>\n                      <option class=\"dropdown-item\" value=\"true\">Yes</option>\n                  </select>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4\" *ngIf=\"show\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>HANDICAPPED PERCENTAGE:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Percenatge\" formControlName=\"handicappedPercent\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.handicappedPercent\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.handicappedPercent').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.handicappedPercent').dirty ||\n                            employeeBioForm.get('bio.handicappedPercent').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-6\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>MULTIPLE HANDICAPPED:&nbsp;</b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"multipleHandicapped\" (change)=\"checked($event.target.value)\">\n                      <option class=\"dropdown-item\" value='' disabled>-----\n                          Select Option-----\n                      </option>\n                      <option class=\"dropdown-item\" value=\"false\">No</option>\n                      <option class=\"dropdown-item\" value=\"true\">Yes</option>\n                  </select>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\" *ngIf=\"shown\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-8 control-label\"><b>MULTIPLE HANDICAPPED PERCENTAGE:&nbsp;</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter Percenatge\" formControlName=\"multipleHandicappedPercent\" />\n                                    <div *ngFor=\"let validation of bioValidationMessage.multipleHandicappedPercent\">\n                                        <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          employeeBioForm.get('bio.multipleHandicappedPercent').hasError(validation.type) &&\n                            (employeeBioForm.get('bio.multipleHandicappedPercent').dirty ||\n                            employeeBioForm.get('bio.multipleHandicappedPercent').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                            {{ validation.message }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h6>Physical Description</h6>\n                <div class=\"form-row\" [formGroup]=\"employeeBioForm.get('bio.illness.physical')\">\n                    <div class=\"form-group col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-10 control-label\"><b>PHYSICHAL ILLNESS IF ANY PROLONG MORE THAN A WEEK :&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Physical Illness\" formControlName=\"physicalIllnessName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>NAME OF THE TREATMENT TAKEN:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment\" formControlName=\"treatmentName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>HOSPITAL NAME:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Hospital Name\" formControlName=\"hospitalName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>DURATION OF TREATMENT:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment Duration\" formControlName=\"treatmentDuration\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>CURRENT STATUS OF ILLNESS:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Illness Status\" formControlName=\"illnessStatus\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h6>Mental Description</h6>\n                <div class=\"form-row\" [formGroup]=\"employeeBioForm.get('bio.illness.mental')\">\n                    <div class=\"form-group col-md-8\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>MENTAL ILLNESS IF ANY PROLONG MORE THAN A WEEK :&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Mental Illness\" formControlName=\"mentalIllnessName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>NAME OF THE TREATMENT TAKEN:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment Name\" formControlName=\"treatmentName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-6 control-label\"><b>HOSPITAL NAME:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Hospital name\" formControlName=\"hospitalName\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>DURATION OF TREATMENT:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Treatment Duration\" formControlName=\"treatmentDuration\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-8 control-label\"><b>CURRENT STATUS OF ILLNESS:&nbsp;</b></label>\n                            <div class=\"col-sm-offset-2\">\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Illness Status\" formControlName=\"illnessStatus\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-offset-2 col-sm-10\">\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]='employeeBioForm.invalid' (click)=\"scroll(target)\">\n            {{ employeeBioButton }}\n            </button>\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"bioCancel()\">Cancel</button>\n\n                    </div>\n                </div>\n            </form>\n        </div>\n        <!-- Bio details end  -->\n\n        <!-- address section ui start -->\n        <div class=\"tab-pane\" id=\"address\" role=\"tabpanel\">\n            <div class=\"card-body\">\n                <input type=\"hidden\" id=\"employeeId\" #employeeId value=\"{{ hidden }}\" />\n                <!-- for show address list  -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"addressMsg\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Door Number </th>\n                                            <th>Zip code </th>\n                                            <th>Street Name 1 </th>\n                                            <th>Address Type</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of addressList\">\n                                        <tr>\n                                            <td> {{list.doorNum}} </td>\n                                            <td> {{list.zipcode}} </td>\n                                            <td> {{list.streetName1}}</td>\n                                            <td> {{list.addressType}}</td>\n                                            <td>\n                                                <button (click)=\"addressEdit(list._id)\" class=\"btn btn-primary\" style=\"color: white;\"><i class=\"fa fa-pencil-square-o\"></i>\n                                  </button>&nbsp;\n                                                <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeAddess(list._id)\"><i class=\"fa fa-trash\"></i>\n                                  </button >\n                              </td>\n                            </tr>\n                        </tbody>\n                      </table>\n                  </div>\n                </ul>\n            </div>\n          </div>\n          <!-- show address list end -->\n          <div *ngIf=\"addAddess\">\n              <div class=\"col-sm-offset-2\">\n                  <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                    <strong>{{ errMsg }}</strong>\n                  </p>\n              </div>\n              <div class=\"col-sm-offset-2\">\n                  <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                    <strong>{{ successMsg }}</strong>\n                  </p>\n              </div>\n            <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeAddressForm\" (ngSubmit)=\"addressForm()\"\n            novalidate>\n            <h3>{{titleName}}</h3>\n            <div class=\"form-group\" [formGroup]=\"employeeAddressForm.get('address')\">\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>DOOR NO :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Door No.\" value=\"\"\n                            formControlName=\"doorNum\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>LANDMARK :&nbsp;<span\n                        style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Landmark\" formControlName=\"landmark\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>ADDRESS TYPE :</b></label>\n                      <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"addressType\">\n                        <option class=\"dropdown-item\" value='null' disabled>-----\n                            Choose Address Type-----\n                        </option>\n                        <option [ngValue]=\"addressType\" value=\"\" *ngFor=\"let addressType of address\">\n                        {{ addressType }}\n                        </option>\n                      </select>\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-6\">\n                      <label class=\"col-sm-6 control-label\"><b>STREET NAME 1 :&nbsp;<span\n                        style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Street Name 1\"\n                            formControlName=\"streetName1\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                      <label class=\"col-sm-6 control-label\"><b>STREET NAME 2 :&nbsp;<span\n                        style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Street Name 2\"\n                            formControlName=\"streetName2\" />\n                      </div>\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>ZIPCODE :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Zipcode\" formControlName=\"zipcode\" />\n\n                        <div *ngFor=\"let validation of validationMessageZip.zipcode\">\n                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              employeeAddressForm\n                              .get('address.zipcode')\n                              .hasError(validation.type) &&\n                              (employeeAddressForm.get('address.zipcode')\n                              .dirty ||\n                              employeeAddressForm.get('address.zipcode')\n                              .touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                              {{ validation.message }}\n                            </div>\n                        </div>\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>CITY :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter City\" formControlName=\"district\" />\n                      </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                      <label class=\"col-sm-6 control-label\"><b>STATE :&nbsp;<span style=\"color: darkred\"></span></b></label>\n                      <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter State\" formControlName=\"state\" />\n                      </div>\n                  </div>\n                </div>\n            </div>\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"employeeAddressForm.invalid\" >\n                {{buttonName}}\n                </button>\n                                                <button type=\"submit\" (click)=\"cancleAddForm()\" class=\"btn btn-danger\">\n                  Cancel\n                </button>\n                            </div>\n                            </form>\n                    </div>\n                </div>\n                <button (click)=\"addNewAddress()\" *ngIf=\"addessBtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Address</button>\n            </div>\n            <!-- address seccion ui end -->\n\n            <!-- education ui stat -->\n            <div class=\"tab-pane\" id=\"educationDetails\" role=\"tabpanel\">\n                <!-- education list start -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"listMesg\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Course Name </th>\n                                            <th>Institute Name </th>\n                                            <th>Pass Out Year </th>\n                                            <th>Scored Percentage </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of educationData\">\n                                        <tr>\n                                            <td> {{list?.courseName}} </td>\n                                            <td> {{list?.instituteName}} </td>\n                                            <td> {{list?.passOutYear}}</td>\n                                            <td> {{list?.scoredPercent}}</td>\n                                            <td>\n                                                <!-- <a (click)=\"educationEdit(list._id)\" style=\"float: right;color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i></a>&nbsp; -->\n                                                <button (click)=\"educationEdit(list._id)\" style=\"color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>\n                              </button>&nbsp;\n                                                <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeEducation(list._id)\"><i class=\"fa fa-trash\"></i>\n                              </button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <!-- education list end -->\n                <div *ngIf=\"EducationForm\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"empEducationForm\" (ngSubmit)=\"educationForm()\" novalidate>\n                        <h3>{{education}}</h3>\n                        <div class=\"form-group\" [formGroup]=\"empEducationForm.get('educationalDetails')\">\n                            <div class=\"form-row\">\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>COURSE NAME:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Course name\" formControlName=\"courseName\" />\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>INSTITUTE NAME:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Name of the INSTITUTE\" formControlName=\"instituteName\" />\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>PASS OUT YEAR:&nbsp;<span\n                      style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Year\" formControlName=\"passOutYear\" />\n                                        <div *ngFor=\"let validation of validationMessageEducation.passOutYear\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          empEducationForm\n                          .get('educationalDetails.passOutYear')\n                          .hasError(validation.type) &&\n                          (empEducationForm.get('educationalDetails.passOutYear')\n                          .dirty ||\n                          empEducationForm.get('educationalDetails.passOutYear')\n                          .touched)\n                          \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>STATUS:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"status\">\n                            <option class=\"dropdown-item\" value='null' disabled>-----\n                                Select Course Status-----\n                            </option>\n                            <option *ngFor=\"let courseStatus of educationalStatus\" [ngValue]=\"courseStatus\" >\n                            {{ courseStatus }}\n                            </option>\n                          </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>DESCRIPTION OF COURSE:&nbsp;<span\n                      style=\"color: darkred\"></span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Description\" formControlName=\"description\" />\n                                    </div>\n                                </div>\n\n\n                                <div class=\"form-group col-md-4\">\n                                    <label class=\"col-sm-6 control-label\"><b>SCORED PERCENTAGE:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Enter Percenatge\" formControlName=\"scoredPercent\" />\n\n                                        <div *ngFor=\"let validation of validationMessageEducation.scoredPercent\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                            empEducationForm\n                            .get('educationalDetails.scoredPercent')\n                            .hasError(validation.type) &&\n                            (empEducationForm.get('educationalDetails.scoredPercent')\n                            .dirty ||\n                            empEducationForm.get('educationalDetails.scoredPercent')\n                            .touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"col-sm-offset-2 col-sm-10\">\n                                        <button type=\"submit\" class=\"btn btn-success\" [disabled]='empEducationForm.invalid'>\n                      {{educationBtnadd}}\n                      </button>\n                                        <button type=\"submit\" class=\"btn btn-danger\" (click)=\"cancleEducation()\" style=\"margin-top:-45%;margin-left:72%;\">\n                        Cancel\n                      </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <a (click)=\"addNewEducation()\" *ngIf=\"educationBtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Education</a>\n            </div>\n            <!-- education ui end -->\n\n            <!-- upload Document html code start here  -->\n            <div class=\"tab-pane\" id=\"uploadDocument\" role=\"tabpanel\">\n                <div class=\"card-body\">\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"uploadedDocumentDetails.length > 0\">\n                        <h4 style=\"text-align: center;\"><strong>Upload Employee Enlisted Documents</strong></h4>\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Document Name </th>\n                                                <th>Required </th>\n                                                <th>Upload Doc Image</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\"let uploadedDocuments of uploadedDocumentDetails; index as i\">\n                                            <tr>\n                                                <td> {{uploadedDocuments.title}} </td>\n                                                <td *ngIf=\"uploadedDocuments.isRequired\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                                                <td *ngIf=\"!uploadedDocuments.isRequired\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n                                                <td> <input type=\"file\" class=\"form-control-file border\" id=\"documnetDocImage{{i+1}}\" (change)=\"onFileSelect($event)\" accept=\"image/*\"> </td>\n                                                <td>\n                                                    <button class=\"btn btn-outline-primary btn-round\" (click)=\"uploadDocs(uploadedDocuments._id,i+1,'Add')\">\n                                <i class=\"fas fa-camera-retro\"></i> Submit\n                              </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"employeeDocumentsDetails.length > 0\">\n                        <h4 style=\"text-align: center;\"><strong>Uploaded Documents Enlisted</strong></h4>\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Document Name </th>\n                                                <th>Required </th>\n                                                <th>File Size</th>\n                                                <th>Uploaded At</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\"let existingDocuments of employeeDocumentsDetails; index as i\">\n                                            <tr>\n                                                <td> {{existingDocuments.documentTypeName}} </td>\n                                                <td *ngIf=\"existingDocuments.isRequired\"><i class=\"fa fa-check\" style=\"color: green; font-size: 25px;\"></i></td>\n                                                <td *ngIf=\"!existingDocuments.isRequired\"><i class=\"fa fa-times\" style=\"color: red; font-size: 25px;\"></i></td>\n                                                <td> {{existingDocuments.fileSize}} </td>\n                                                <td>{{ existingDocuments.metaData.createdAt | date:'fullDate' }} {{ existingDocuments.metaData.createdAt | date:'shortTime' }}</td>\n                                                <td>\n                                                    <button title=\"Update\" class=\"btn btn-primary\" style=\"color: white;\" data-toggle=\"modal\" data-target=\"#updateDocument\" data-backdrop=\"static\" (click)=\"updateDocuments(existingDocuments.documentTypeId)\"><i class=\"fa fa-pencil-square-o\"></i>\n                                  </button>&nbsp;\n                                                    <button title=\"Info\" class=\"btn btn-info\" style=\"color: white;\" (click)=\"openImage(existingDocuments.file)\"><i class=\"fas fa-file-alt\"></i>\n                                  </button>&nbsp;\n                                                    <button title=\"Delete\" class=\"btn btn-danger\" (click)=\"deleteDocument(existingDocuments.documentTypeId)\"><i class=\"fa fa-trash\"></i></button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- upload document html code end here -->\n\n            <!-- upload bank details html ui start -->\n            <div class=\"tab-pane\" id=\"bankDetails\" role=\"tabpanel\">\n                <!-- list bank details -->\n                <div class=\"card\" *ngIf=\"bankList\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <li class=\"list-group-item\" *ngFor=\"let list of bankListData\">\n                                <div class=\"card\" style=\"background-color:ghostwhite\">\n                                    <h5 style=\"text-align: center;\">Offical Bank Details </h5>\n                                    <table class=\"table\" style=\"margin: auto\">\n                                        <tr>\n                                            <th>Bank Name:</th>\n                                            <td>{{ list.official.name }}</td>\n                                            <th>Account Number:</th>\n                                            <td>{{ list.official.accountNum}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Account Place:</th>\n                                            <td>{{ list.official.accountPlace}}</td>\n                                            <th>Account Type:</th>\n                                            <td>{{ list.official.accountType}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Remarks:</th>\n                                            <td>{{ list.official.remarks}}</td>\n                                        </tr>\n                                    </table>\n                                    <h5 style=\"text-align: center;\">Personal Bank Details</h5>\n                                    <table class=\"table\" style=\"margin: auto\">\n                                        <tr>\n                                            <th>Bank Name:</th>\n                                            <td>{{ list.personal.name }}</td>\n                                            <th>Account Number:</th>\n                                            <td>{{ list.personal.accountNum}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Account Place:</th>\n                                            <td>{{ list.personal.accountPlace}}</td>\n                                            <th>Account Type:</th>\n                                            <td>{{ list.personal.accountType}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Remarks:</th>\n                                            <td>{{ list.personal.remarks}}</td>\n                                        </tr>\n                                    </table>\n                                    <div>\n                                        <button style=\"float: right\" (click)=\"editBankDetails()\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</button>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list banki details -->\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                        <strong>{{ errMsg }}</strong>\n                    </p>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                        <strong>{{ successMsg }}</strong>\n                    </p>\n                </div>\n                <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"bankDetailsForm\" (ngSubmit)=\"bankDetailsAdd()\" novalidate *ngIf=\"bankForm\">\n                    <h5 class=\"text-center\"><b>Official Details</b></h5>\n                    <div [formGroup]=\"bankDetailsForm.get('bankDetails.official')\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"inputName\" placeholder=\"Enter Bank Name\" formControlName=\"name\">\n                                        <div *ngFor=\"let validation of validationMessageBank.name\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                bankDetailsForm.get('bankDetails.official.name').hasError(validation.type) &&\n                                (bankDetailsForm.get('bankDetails.official.name').dirty ||\n                                bankDetailsForm.get('bankDetails.official.name').touched)\n                                \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"acountnumber\" placeholder=\"Enter Account Number\" formControlName=\"accountNum\">\n                                        <div *ngFor=\"let validation of validationMessageBank.accountNum\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                bankDetailsForm.get('bankDetails.official.accountNum').hasError(validation.type) &&\n                                (bankDetailsForm.get('bankDetails.official.accountNum').dirty ||\n                                bankDetailsForm.get('bankDetails.official.accountNum').touched)\n                                \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Origin:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"acountplace\" placeholder=\"Enter Account Origin\" formControlName=\"accountPlace\">\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Remarks:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"remark\" placeholder=\"Enter Remarks\" formControlName=\"remarks\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"acountType\" placeholder=\"Enter Account Type\" formControlName=\"accountType\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr>\n\n\n                    <input type=\"checkbox\" name=\"vehicle2\" (change)=\"sameAsOfficialDetails(actionBox)\" [checked]='actionBox'> Same as Official Details <br><br>\n\n\n\n                    <div [formGroup]=\"bankDetailsForm.get('bankDetails.personal')\">\n                        <h5 class=\"text-center\"><b>Personal Details</b></h5>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pinputName\" placeholder=\"Enter Bank Name\" formControlName=\"name\">\n                                        <div *ngFor=\"let validation of validationMessageBank.name\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              bankDetailsForm.get('bankDetails.personal.name').hasError(validation.type) &&\n                              (bankDetailsForm.get('bankDetails.personal.name').dirty ||\n                              bankDetailsForm.get('bankDetails.personal.name').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Number:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pacountnumber\" placeholder=\"Enter Account Number\" formControlName=\"accountNum\">\n                                        <div *ngFor=\"let validation of validationMessageBank.accountNum\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              bankDetailsForm.get('bankDetails.personal.accountNum').hasError(validation.type) &&\n                              (bankDetailsForm.get('bankDetails.personal.accountNum').dirty ||\n                              bankDetailsForm.get('bankDetails.personal.accountNum').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Origin:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pacountplace\" placeholder=\"Enter Account Origin\" formControlName=\"accountPlace\">\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Remarks:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"premark\" placeholder=\"Enter Remarks\" formControlName=\"remarks\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Account Type:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"pacountType\" placeholder=\"Enter Account Type\" formControlName=\"accountType\">\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"bankDetailsForm.invalid\" (click)=\"scroll(target)\">{{bannBtn}}</button>\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"bankDetailsCancel()\">Cancel</button>\n\n                    </div>\n\n                </form>\n            </div>\n            <!-- upload bank details html ui end-->\n\n            <!-- upload Work Experience ui start-->\n            <div class=\"tab-pane\" id=\"workExperience\" role=\"tabpanel\">\n                <!-- list of experience -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"listExprience\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Company Name </th>\n                                            <th>Experience Years </th>\n                                            <th>Designation </th>\n                                            <th>Remarks </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of exprienceListData\">\n                                        <tr>\n                                            <td> {{list?.companyName}} </td>\n                                            <td> {{list?.experienceYears}} </td>\n                                            <td> {{list?.designation}}</td>\n                                            <td> {{list?.remarks}}</td>\n                                            <td>\n                                                <button (click)=\"expriceneEdit(list._id)\" style=\"color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i> </button>&nbsp;\n                                                <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeExpeience(list._id)\"><i class=\"fa fa-trash\"></i></button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list of experience -->\n                <div *ngIf=\"workExperience\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"workExperienceForm\" (ngSubmit)=\"addWorkExp()\" novalidate>\n                        <h3>{{exprienceTitle}}</h3>\n                        <div class=\"row\" [formGroup]=\"workExperienceForm.get('workExperiences')\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Company Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Enter Company Name\" formControlName=\"companyName\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Designation:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"designation\" placeholder=\"Enter Designation\" formControlName=\"designation\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Experience Years:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"experience\" placeholder=\"Enter Experience Years\" formControlName=\"experienceYears\">\n\n                                        <div *ngFor=\"let validation of validationMessageExper.experienceYears\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                            workExperienceForm.get('workExperiences.experienceYears').hasError(validation.type) &&\n                              (workExperienceForm.get('workExperiences.experienceYears').dirty ||\n                              workExperienceForm.get('workExperiences.experienceYears').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Job Description:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Enter Job Description\" formControlName=\"jobDescription\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Reliving Reason:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"relivingre\" placeholder=\"Enter Reliving Reason\" formControlName=\"relivingReason\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Reliving Is:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"relivingIs\">\n                      <option [ngValue]=\"null\" disabled>-----Choose Reliving Status-----</option>\n                      <option *ngFor= 'let reliving of relivingIs' [ngValue]=\"reliving\" > {{ reliving }} </option>\n                    </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Remarks:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"remark\" placeholder=\"Enter Remarks\" formControlName=\"remarks\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"workExperienceForm.invalid\" (click)=\"scroll(target)\">{{experienceBtn}}</button>\n                        <button class=\"btn btn-danger\" (click)=\"cancleExperience()\">Cancel</button>\n                    </form>\n                </div>\n                <a (click)=\"addExperience()\" *ngIf=\"addExpbtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Experience</a>\n\n            </div>\n            <!-- upload work Experience ui end-->\n\n            <!-- upload skill category  -->\n            <div class=\"tab-pane\" id=\"skillCat\" role=\"tabpanel\">\n                <!-- <tag-input [(ngModel)]='items'></tag-input> -->\n                <!-- <tag-input [ngModel]=\"itemsAsObjects\"></tag-input> -->\n            </div>\n            <!-- upload skill category -->\n\n            <!-- Employee Family add  -->\n            <div class=\"tab-pane\" id=\"addFamily\" role=\"tabpanel\">\n                <input type=\"hidden\" id=\"familyId\" #familyId value=\"{{ familyIdValue }}\">\n                <div class=\"card\" style=\"background-color:whitesmoke;\" id=\"hide\" *ngIf=\"divShow\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Relation </th>\n                                            <th>Name</th>\n                                            <th>Education</th>\n                                            <th>Occupation</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of familyDetailsList\">\n                                        <tr>\n                                            <td> {{list.relation}} </td>\n                                            <td> {{list.name}} </td>\n                                            <td> {{list.education}}</td>\n                                            <td> {{list.occupation}}</td>\n                                            <td>\n                                                <button class=\"btn btn-primary\" (click)=\"updateValidation(list._id)\"><i\n                                  class=\"fa fa-pencil-square-o\"></i>\n                              </button>&nbsp;\n                                                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteFamilyDetails(list._id)\"><i\n                                  class=\"fa fa-trash\"></i></button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <div *ngIf=\"formShow\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <h3 style=\"text-align: center\">{{ title }} Family Details</h3>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addRelationForm\" (ngSubmit)=\"addFamilyDetails()\" novalidate>\n                        <div [formGroup]=\"addRelationForm.get('family')\">\n                            <div [formGroup]=\"addRelationForm.get('family.members')\">\n                                <label class=\"col-sm-6 control-label\"><b>Select Relation:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n                                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"relation\">\n                    <option class=\"dropdown-item\" value='null' disabled>-----Choose Relation Type-----</option>\n                  <option class=\"dropdown-item\" *ngFor=\"let relationMember of relation\" value=\"{{relationMember}}\">\n                      {{ relationMember}}\n                  </option>\n                </select>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Name:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Enter Name\" formControlName=\"name\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Age:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"age\" placeholder=\"Enter Age\" formControlName=\"age\">\n                                                <div *ngFor=\"let validation of validationMessageFamily.age\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                  addRelationForm.get('family.members.age').hasError(validation.type) &&\n                                    (addRelationForm.get('family.members.age').dirty ||\n                                    addRelationForm.get('family.members.age').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Occupation:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"occupation\" placeholder=\"Enter Occupation\" formControlName=\"occupation\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Education:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"education\" placeholder=\"Enter education\" formControlName=\"education\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Annually Income:</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" id=\"income\" placeholder=\"Enter Income\" formControlName=\"income\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <label class=\"col-sm-6 control-label\"><b>Family Type:</b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" name=\"familyType\" formControlName=\"familyType\">\n          <option class=\"dropdown-item\" value='null' disabled>-----Choose Family Type-----</option>\n          <option [ngValue]=\"list\" *ngFor=\"let list of familyType\" selected>{{ list }}</option>\n          </select>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addRelationForm.invalid\" (click)=\"scroll(target)\">{{addfamilyBtn}}</button>\n                        <button class=\"btn btn-danger\" (click)=\"cancelValue()\">Cancel</button>\n                    </form>\n                </div>\n                <button type=\"button\" *ngIf=\"showAddFamilyButton\" style=\"float: right\" class=\"btn btn-primary\" (click)=\"showAddFamilyForm()\"><i class=\"fa fa-plus-square\"></i>&nbsp;Add Family</button>\n            </div>\n            <!-- Employee Family add  -->\n\n            <!--Profile payroll setting start-->\n            <div class=\"tab-pane\" id=\"profilePayroll\" role=\"tabpanel\">\n                <!-- list payroll setting  -->\n                <div class=\"card\" *ngIf=\"payrollList\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <li class=\"list-group-item\" *ngFor=\"let list of payrollData\">\n                                <div class=\"card\" style=\"background-color:ghostwhite\">\n                                    <h5 style=\"text-align: center;\">Payroll Details </h5>\n                                    <table class=\"table\" style=\"margin: auto\">\n                                        <tr>\n                                            <th>CTC:</th>\n                                            <td>{{ list.ctc }}</td>\n                                            <th>CTC Effective From Date:</th>\n                                            <td>{{ list.ctcEffectiveFromDate | date}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>CTC Effective To Date:</th>\n                                            <td>{{ list.ctcEffectiveToDate | date}}</td>\n                                            <th>Earned Leave Balance:</th>\n                                            <td>{{ list.earnedLeaveBalance}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Grade Rule:</th>\n                                            <td>{{ list.gradeRuleName}}</td>\n                                            <th>Paid Leave Balance:</th>\n                                            <td>{{ list.paidLeaveBalance}}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Basic Pay</th>\n                                            <td>{{ list.basicPay}}</td>\n                                            <th>Payment Mode</th>\n                                            <td>{{ list.mode}}</td>\n                                        </tr>\n                                    </table>\n\n                                    <div>\n                                        <button style=\"float: right\" (click)=\"payrollSettingEdit()\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp;Update</button>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list payroll setting -->\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                        <strong>{{ errMsg }}</strong>\n                    </p>\n                </div>\n                <div class=\"col-sm-offset-2\">\n                    <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                        <strong>{{ successMsg }}</strong>\n                    </p>\n                </div>\n                <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"payrollDetailsForm\" (ngSubmit)=\"payrollAdd()\" *ngIf=\"payrollForm\" novalidate>\n                    <div [formGroup]=\"payrollDetailsForm.get('payroll')\">\n                        <h5 class=\"text-center\"><b>Payroll Details</b></h5>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>CTC:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"ctc\" placeholder=\"Enter CTC\" formControlName=\"ctc\">\n                                        <div *ngFor=\"let validation of payrollValidations.ctc\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.ctc').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.ctc').dirty ||\n                            payrollDetailsForm.get('payroll.ctc').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>CTC Effective From Date:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"date\" id=\"ctcEffectiveFromDate\" placeholder=\"Enter CTC Effective From Date\" formControlName=\"ctcEffectiveFromDate\">\n                                        <div *ngFor=\"let validation of payrollValidations.ctcEffectiveFromDate\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.ctcEffectiveFromDate').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.ctcEffectiveFromDate').dirty ||\n                            payrollDetailsForm.get('payroll.ctcEffectiveFromDate').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>CTC Effective To Date:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"date\" id=\"ctcEffectiveToDate\" placeholder=\"Enter CTC Effective To Date\" formControlName=\"ctcEffectiveToDate\">\n                                        <div *ngFor=\"let validation of payrollValidations.ctcEffectiveToDate\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.ctcEffectiveToDate').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.ctcEffectiveToDate').dirty ||\n                            payrollDetailsForm.get('payroll.ctcEffectiveToDate').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Paid Leave Balance:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"paidLeaveBalance\" placeholder=\"Enter Paid Leave Balance\" formControlName=\"paidLeaveBalance\">\n                                        <div *ngFor=\"let validation of payrollValidations.paidLeaveBalance\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.paidLeaveBalance').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.paidLeaveBalance').dirty ||\n                            payrollDetailsForm.get('payroll.paidLeaveBalance').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Earned Leave Balance:</b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"earnedLeaveBalance\" formControlName=\"earnedLeaveBalance\" disabled>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Grade Rule:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <select class=\"dropdown dropdown-toggle form-control\" name=\"familyType\" formControlName=\"gradeRule\">\n                      <option class=\"dropdown-item\" value='' disabled>-----Choose Grade Rule Name-----</option>\n                      <option  *ngFor=\"let gradeRule of payrollGradeRuleList\" [ngValue]=\"gradeRule._id\" selected>{{ gradeRule.title }}</option>\n                    </select>\n                                        <div *ngFor=\"let validation of payrollValidations.gradeRule\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                      payrollDetailsForm.get('payroll.gradeRule').hasError(validation.type) &&\n                        (payrollDetailsForm.get('payroll.gradeRule').dirty ||\n                        payrollDetailsForm.get('payroll.gradeRule').touched)\n                        \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Basic Pay:&nbsp;<span\n                    style=\"color: darkred\">*</span></b></label>\n                                    <div class=\"col-sm-offset-2\">\n                                        <input class=\"form-control\" type=\"text\" id=\"basicPay\" placeholder=\"Enter Basic Pay\" formControlName=\"basicPay\">\n                                        <div *ngFor=\"let validation of payrollValidations.paidLeaveBalance\">\n                                            <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                          payrollDetailsForm.get('payroll.basicPay').hasError(validation.type) &&\n                            (payrollDetailsForm.get('payroll.basicPay').dirty ||\n                            payrollDetailsForm.get('payroll.basicPay').touched)\n                            \" style=\"color: red;margin-left: 14px;\">\n                                                {{ validation.message }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-6 control-label\"><b>Payment Mode:&nbsp;<span\n                  style=\"color: darkred\">*</span></b></label>\n                                    <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"mode\">\n                    <option class=\"dropdown-item\" value='null' disabled>-----\n                        Choose Payment Mode-----\n                    </option>\n                    <option [ngValue]=\"paymentMode\" value=\"\" *ngFor=\"let paymentMode of paymentType\">\n                    {{ paymentMode }}\n                    </option>\n                  </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"payrollDetailsForm.invalid\" (click)=\"scroll(target)\">{{ payrollButton }}</button>\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"backPayrollBtn()\">Cancel</button>\n                </form>\n            </div>\n            <!-- profile payroll setting end -->\n\n            <!-- list of langulae skills starts -->\n            <div class=\"tab-pane\" id=\"languageSkill\" role=\"tabpanel\">\n                <!-- list of language skills -->\n                <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"languageSkillList\">\n                    <div class=\"panel-body\">\n                        <ul class=\"list-group\">\n                            <div class=\"card-body\">\n                                <table class=\"table\" style=\"text-align: center;\">\n                                    <thead class=\" text-primary\">\n                                        <tr>\n                                            <th>Read </th>\n                                            <th>Speak </th>\n                                            <th>Write </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody *ngFor=\" let list of LanguageData\">\n                                        <tr>\n                                            <td> {{list.toRead}} </td>\n                                            <td> {{list.toSpeak}} </td>\n                                            <td> {{list.toWrite}}</td>\n                                            <td>\n                                                <button (click)=\"languageSkillEdit(list._id)\" style=\"color: white;\" class=\"btn btn-primary\"><i class=\"fa fa-pencil-square-o\"></i> </button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <!-- list of language skills -->\n                <div *ngIf=\"lsnguageSkillForm\">\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                            <strong>{{ errMsg }}</strong>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-offset-2\">\n                        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                            <strong>{{ successMsg }}</strong>\n                        </p>\n                    </div>\n                    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"languageSkillForm\" (ngSubmit)=\"addLanguageSkill()\" novalidate>\n                        <h3>{{languageSkillTitle}} Language</h3>\n                        <div [formGroup]=\"languageSkillForm.get('languageSkills')\">\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Speak:</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"toSpeak\" placeholder=\"Enter Speak Language\" formControlName=\"toSpeak\">\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Read:</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"toRead\" placeholder=\"Enter Read Language\" formControlName=\"toRead\">\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"col-sm-6 control-label\"><b>Write:</b></label>\n                                <div class=\"col-sm-offset-2\">\n                                    <input class=\"form-control\" type=\"text\" id=\"toWrite\" placeholder=\"Enter Write Language\" formControlName=\"toWrite\">\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"languageSkillForm.invalid\" (click)=\"scroll(target)\">{{skillLanguageBtn}}</button>\n                        <button class=\"btn btn-danger\" (click)=\"cancelLanguageSkill()\">Cancel</button>\n                    </form>\n                </div>\n                <button (click)=\"addLanguageSkillList()\" *ngIf=\"addLanguageBtn\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Language</button>\n            </div>\n            <!-- list of langulae skills end -->\n\n            <!-- Employee leave setting start-->\n            <div class=\"tab-pane\" id=\"leaveSetting\" role=\"tabpanel\">\n                <div class=\"card-body\">\n                    <input type=\"hidden\" id=\"employeeId\" #employeeId value=\"{{ hidden }}\" />\n                    <!-- for show leave list  -->\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"employeeLeaveList\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Start Date </th>\n                                                <th>End Date </th>\n                                                <th>Leave Per Month </th>\n                                                <th>Reason</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\" let list of employeeLeaveData\">\n                                            <tr>\n                                                <td> {{list.startDate | date}} </td>\n                                                <td> {{list.endDate | date}} </td>\n                                                <td> {{list.leavePerMonth}}</td>\n                                                <td> {{list.reason}}</td>\n                                                <td>\n                                                    <button (click)=\"leaveSettingUpdateDetails(list._id)\" class=\"btn btn-primary\" style=\"color: white;\"><i class=\"fa fa-pencil-square-o\"></i>\n                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <!-- show leave list end -->\n                    <div *ngIf=\"employeeLeaveForm\">\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                                <strong>{{ errMsg }}</strong>\n                            </p>\n                        </div>\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                                <strong>{{ successMsg }}</strong>\n                            </p>\n                        </div>\n                        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"employeeLeaveDetailsForm\" (ngSubmit)=\"addLeaveSetting()\" novalidate>\n                            <h3 style=\"text-align: center;\">{{leaveSettingHeadingButton}}</h3>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>Start Date :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"date\" placeholder=\"Enter Start Date\" value=\"\" formControlName=\"startDate\" />\n                                            <div *ngFor=\"let validation of validationMessageLeaveSettings.startDate\">\n                                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                    employeeLeaveDetailsForm.get('startDate').hasError(validation.type) &&\n                                    (employeeLeaveDetailsForm.get('startDate').dirty ||\n                                    employeeLeaveDetailsForm.get('startDate').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                    {{ validation.message }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>Leave Per Month :&nbsp;<span\n                          style=\"color: darkred\">*</span></b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Leave Per Month\" formControlName=\"leavePerMonth\" />\n                                            <div *ngFor=\"let validation of validationMessageLeaveSettings.leavePerMonth\">\n                                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                employeeLeaveDetailsForm.get('leavePerMonth').hasError(validation.type) &&\n                                (employeeLeaveDetailsForm.get('leavePerMonth').dirty ||\n                                employeeLeaveDetailsForm.get('leavePerMonth').touched)\n                                \" style=\"color: red;margin-left: 14px;\">\n                                                    {{ validation.message }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>End Date :&nbsp;<span\n                          style=\"color: darkred\">*</span></b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"date\" value=\"\" placeholder=\"Enter End Date\" formControlName=\"endDate\" />\n                                            <div *ngFor=\"let validation of validationMessageLeaveSettings.endDate\">\n                                                <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                    employeeLeaveDetailsForm.get('endDate').hasError(validation.type) &&\n                                    (employeeLeaveDetailsForm.get('endDate').dirty ||\n                                    employeeLeaveDetailsForm.get('endDate').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                    {{ validation.message }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label class=\"col-sm-6 control-label\"><b>Reason :</b></label>\n                                        <div class=\"col-sm-offset-2\">\n                                            <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Reason\" formControlName=\"reason\" />\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                            <div class=\"col-sm-offset-2 col-sm-10\">\n                                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"employeeLeaveDetailsForm.invalid\">\n                  {{leaveButton}}\n                  </button>\n                                <button type='button' (click)=\"leaveSettingCancel()\" class=\"btn btn-danger\">\n                    Cancel\n                  </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <button (click)=\"addNewLeaveSettings()\" *ngIf=\"leaveSettingButton\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Leave Settings</button>\n            </div>\n            <!-- Employee leave setting end -->\n            <!--Employee Identity Proofs Panel Start-->\n            <div class=\"tab-pane\" id=\"identityproofs\" role=\"tabpanel\">\n                <div class=\"card-body\">\n                    <input type=\"hidden\" id=\"employeeId\" #employeeId value=\"{{ hidden }}\" />\n                    <!-- for show Identity Proofs list  -->\n                    <div class=\"card\" style=\"background-color:whitesmoke;\" *ngIf=\"idProofsList\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Identity Name </th>\n                                                <th>Identity Number</th>\n                                                <th>Expiry Date</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody *ngFor=\" let list of idProofsData\">\n                                            <tr>\n                                                <td> {{list.identityName}} </td>\n                                                <td> {{list.identityNum}} </td>\n                                                <td> {{list.expiryDate | date}}</td>\n                                                <td>\n\n                                                    <button (click)=\"idProofsSettingUpdateDetails(list._id)\" class=\"btn btn-primary\" style=\"color: white;\"><i\n                                  class=\"fa fa-pencil-square-o\"></i>\n                                </button>&nbsp;\n                                                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteIdentityProofs(list._id)\"><i\n                                  class=\"fa fa-trash\"></i></button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <!-- show Identity Proofs list end -->\n                    <div *ngIf=\"idProofsForm\">\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n                                <strong>{{ errMsg }}</strong>\n                            </p>\n                        </div>\n                        <div class=\"col-sm-offset-2\">\n                            <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n                                <strong>{{ successMsg }}</strong>\n                            </p>\n                        </div>\n                        <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"idProofsDetailsForm\" (ngSubmit)=\"addIdProofs()\" novalidate>\n                            <div [formGroup]=\"idProofsDetailsForm.get('identityProofs')\">\n                                <h3 style=\"text-align: center;\">{{idProofsHeadingButton}}</h3>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Identity Name :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" placeholder=\"Enter Identity Name\" value=\"\" formControlName=\"identityName\" />\n                                                <div *ngFor=\"let validation of validationMessageIdProofsSettings.identityName\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                  idProofsDetailsForm.get('identityProofs.identityName').hasError(validation.type) &&\n                                  (idProofsDetailsForm.get('identityProofs.identityName').dirty ||\n                                  idProofsDetailsForm.get('identityProofs.identityName').touched)\n                                  \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Identity Number :&nbsp;<span\n                        style=\"color: darkred\">*</span></b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Identity Number\" formControlName=\"identityNum\" />\n                                                <div *ngFor=\"let validation of validationMessageIdProofsSettings.identityNum\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                              idProofsDetailsForm.get('identityProofs.identityNum').hasError(validation.type) &&\n                              (idProofsDetailsForm.get('identityProofs.identityNum').dirty ||\n                              idProofsDetailsForm.get('identityProofs.identityNum').touched)\n                              \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Authority Name :&nbsp;</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Authority Name\" formControlName=\"authorityName\" />\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Issue Place :&nbsp;</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Issue Place\" formControlName=\"issuePlace\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Expiry Date :&nbsp;<span\n                          style=\"color: darkred\">*</span></b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"date\" value=\"\" placeholder=\"Enter Expiry Date\" formControlName=\"expiryDate\" />\n                                                <div *ngFor=\"let validation of validationMessageIdProofsSettings.expiryDate\">\n                                                    <div style=\"color: red;margin-left: 14px;\" *ngIf=\"\n                                    idProofsDetailsForm.get('identityProofs.expiryDate').hasError(validation.type) &&\n                                    (idProofsDetailsForm.get('identityProofs.expiryDate').dirty ||\n                                    idProofsDetailsForm.get('identityProofs.expiryDate').touched)\n                                    \" style=\"color: red;margin-left: 14px;\">\n                                                        {{ validation.message }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-6 control-label\"><b>Remarks :&nbsp;</b></label>\n                                            <div class=\"col-sm-offset-2\">\n                                                <input class=\"form-control\" type=\"text\" value=\"\" placeholder=\"Enter Remarks\" formControlName=\"remarks\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row col-sm-offset-2 col-sm-10\">\n                                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"idProofsDetailsForm.invalid\">\n                {{idProofsButton}}\n                </button>\n                                <button type='button' (click)=\"idProofsSettingsCancel()\" class=\"btn btn-danger\">\n                  Cancel\n                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <button (click)=\"addNewIdProofsSettings()\" *ngIf=\"idProofsSettingButton\" class=\"btn btn-info\" style=\"color: white; float: right;\">Add Identity Proofs</button>\n            </div>\n            <!--Employee Identity Proofs Panel End-->\n\n        </div>\n    </div>\n\n    <div class=\"modal\" id=\"updateDocument\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Update Document</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"card\" style=\"background-color:whitesmoke;\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group\">\n                                <div class=\"card-body\">\n                                    <table class=\"table\" style=\"text-align: center;\">\n                                        <thead class=\" text-primary\">\n                                            <tr>\n                                                <th>Update Doc Image</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td> <input type=\"file\" class=\"form-control-file border\" id=\"updateExistingDocument\" (change)=\"onFileSelect($event)\" accept=\"image/*\"> </td>\n                                                <td>\n                                                    <button class=\"btn btn-outline-primary btn-round\" (click)=\"uploadDocs(documentTypeId,'updateExistingDocument','Update')\">\n                                <i class=\"fas fa-camera-retro\"></i> Submit\n                              </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"button\" id=\"dismissUpdateDocuments\" class=\"btn btn-danger\" style=\"float:right;\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>","import { DocumentServices } from '../../document-types/document-services/document.services';\nimport { Component, OnInit, NgZone, ViewChild,ElementRef, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { skillCategoryApiService } from '../../skill-category/skillCategory-service/skillCategory-api.service';\nimport Swal from 'sweetalert2';\nimport { HttpClient } from '@angular/common/http';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-profile',\n  templateUrl: './employee-profile.component.html',\n  styleUrls: ['./employee-profile.component.scss']\n})\n\nexport class EmployeeProfileComponent implements OnInit,OnDestroy{\n  ngOnDestroy(): void {\n    (document.getElementById('headerCompanyDropDown')as HTMLInputElement).removeAttribute('disabled');\n  }\n\n  @ViewChild('familyId', { static: false }) familyId: ElementRef;\n  // @ViewChild('proofsId', { static: false }) proofsId: ElementRef;\n\n  employeeBasicForm: any;\n  employeeAddressForm: any;\n  empEducationForm: any;\n  employeeBioForm: any;\n  companyTlList: any;\n  updateRelationForm:any;\n  companyListData = new Array();\n  branchList = new Array();\n  departmentList = new Array();\n  jobProfileList = new Array();\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  branchName: String;\n  companyId: String;\n  address = ['Current', 'Permanent', 'Others'];\n  branch: Object;\n  hidden:String;\n  familyType = ['Joint', 'Nuclear Family'];\n  familyDetailsList = new Array();\n  familyTypeList: String;\n  divShow: boolean = false;\n  formShow:boolean = false;\n  title:String;\n  familyIdValue:String;\n  showAddFamilyButton:boolean = true;\n  educationBtn: Boolean = true;\n  addressId;\n  workExperienceForm: any; // Work Experience form group\n  bankDetailsForm: any; // Bank details form group name\n  imageSrc: string = '';   // upload Document variable\n  imagePath;  // upload Document variable\n  docData: any; // upload Document Variable for show all document name\n  experValue: Object; // post data from experience api\n  actionBox = false;\n  existingPersonalDetails :any;\n  relivingIs = ['Formal', 'InFormal']; // Work Experience Reliving type\n  existingBankDetails : any;\n  employeeBioButton: string;\n  basicDetail = 'Submit';\n  checkbox = false;\n\n\n  addRelationForm: any; // family form group name\n  public familyValue: any[]; // after call api value store in this variable\n  relation =[\"Mother\",\"Father\",\"Brother\",\"Sister\",\"Uncle\",\"Aunt\",\"Spouse\",\"Son\",\"Daughter\"]; // Family relation array\n  public skillValue: []; // skill category data in this array\n  public showForm; // show details form of family\n  items = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];  // this one is use for testing only\n  public openval = 0;\n  snapShotParam: String;\n  shown: Boolean = false;\n  show: Boolean = false;\n  addressList : any; // list of old address\n  addAddess: boolean = true; // add address div show and hide\n  previousValue: any [];\n  titleName; // title name for form on update and add address\n  buttonName = 'Submit';\n  button:Boolean = true;\n  addressMsg:Boolean = true;\n  educationData: any[]; // education details\n  EducationForm: Boolean = true;  // show and hidde EducationForm\n  educationCurentId; // education id\n  eduBtn;\n  addessBtn: Boolean=true;\n  education;\n  listMesg: Boolean= true;\n  listEducationalDetails: any[]; //education details\n  exprienceListData: any []; //exprience data\n  workExperience: Boolean = true;\n  listExprience: Boolean = true; // exprience list flag\n  exprienceTitle; // expience form title\n  expCurentId; // exprience current id on click edit button and delete button\n  addExpbtn: Boolean = true;\n  bankListData: any []; // bank list all data in this array\n  showCard = {}; // use in bank list show\n  bankList: Boolean = true; // value in bank list or not in bank list flag\n  bankForm: Boolean = true; // bank form show and hidde\n  lenthoffical; // length of offical data\n  lenthperosnal; // length of personal data\n  payrollDetailsForm: any; //payroll form name\n  payrollData: any []; //list data of payoll\n  payrollList: Boolean = true; // flag of payroll list\n  payrollForm: Boolean = true; // flag of payroll form\n  payollDataLength; // checke length of payoll Data\n  paymentType = ['Cash', 'Cheque', 'Tansfer to Bank Account'];\n  biodata:any[]; // bio data api data\n  bioForm:Boolean = true; //bio form flag\n  bioList: Boolean =true; // bio list glag\n  errorMsgg: String;\n  languageSkillList: Boolean = false; // language skill list flag\n  lsnguageSkillForm: Boolean = false; // language skill form flag\n  addLanguageBtn: Boolean = true; // btn flag for add language\n  languageSkillForm: any; // language skill form name\n  LanguageData: any [];\n  languageSkillTitle;\n  percentErrorMsg = 'Percent is Required';\n  payrollGradeRuleList: any;\n  payrollGradeRuleName: any;\n  basicDetailsData = [];\n  educationalStatus = ['Completed','Pursuing'];\n  employeeLeaveData: any; //list data of leave\n  employeeLeaveList: Boolean = true; // flag of leave list\n  employeeLeaveForm: Boolean = true; // flag of leave form\n  employeeLeaveDetailsForm: FormGroup; //employee Leave settings form\n  employeeLeaveDataLength; // checke length of payoll Data\n  leaveSettingHeadingButton: String;\n  leaveSettingButton = true;\n  leaveSettingId: any;\n  existingDocumentLength: any;\n  uploadForm: any;\n  idProofsData: any; //list data of Employee Id's\n  idProofsList: Boolean = true; // flag of Id's list\n  idProofsForm: Boolean = true; // flag of Id's form\n  idProofsDetailsForm: any; //employee Id's Details form\n  idProofsDataLength; // checke length of Id's Data\n  idProofsHeadingButton: String;\n  idProofsSettingButton = true;\n  idProofsSettingId: any;\n\n  bannBtn = 'Submit';\n  experienceBtn = 'Submit';\n  educationBtnadd = 'Submit';\n  addfamilyBtn = 'Submit';\n  skillLanguageBtn = 'Submit';\n  payrollButton = 'Submit';\n  languageSkillEditId;\n  leaveButton = 'Submit';\n  idProofsButton = 'Submit';\n\nconstructor(public fb: FormBuilder,\n  private docApi: DocumentServices,\n  private api: EmployeeService,\n  public ngZone: NgZone,\n  private router: Router,\n  private route:ActivatedRoute,\n  private skillApi:skillCategoryApiService,\n  private http: HttpClient,\n  private util:UtilitiesService  ) { }\n\n\n\n\nngOnInit() {\n  this.snapShotParam = this.route.snapshot.paramMap.get(\"employeeId\");\n  (this.snapShotParam === null)? this.basicDetail = 'Submit': this.basicDetail = 'Update';\n  this.getTlList();\n  this.existingBasicDetails();\n  this.formDataValidation();\n  this.listDocument();\n  this.getList();\n  this.addressValidation();\n  this.educationDetailsValidation();\n  this.empBioValidation();\n  this.bankDataValidation();  // this function use in upload bank details for validation check\n  this.experienceValidation(); // this function use in data validation for work Expeience\n  this.skillCate(); // this function use in skill categray\n  this.addMemberValidation(); // this function use for check validation of add member relation\n  this.payrollValidation(); // this.payollvalidation function to fill value\n  this.languageSkillValidation(); // check validation\n  this.leaveSettingForm();\n  this.uploadImageForm();\n  this.idProofsSettingForm();\n  (document.getElementById('headerCompanyDropDown')as HTMLInputElement).setAttribute('disabled','disabled');\n}\n\n/**\n * Basic Form Functionality Start From Here\n * Basic Form Validation While Adding an Employee\n */\n\nformDataValidation() {\n  this.employeeBasicForm = this.fb.group({\n    departmentId: new FormControl('', Validators.required),\n    branchId: new FormControl('', Validators.required),\n    companyId: new FormControl('', Validators.required),\n    jobProfileId: new FormControl('', Validators.required),\n    name: new FormControl('', Validators.required),\n    dob: new FormControl('', Validators.required),\n    contactDetails: new FormGroup({\n      personal: new FormGroup({\n        phone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        landLineNum: new FormControl('', Validators.compose([\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n        ])),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n      }),\n      official: new FormGroup({\n        phone: new FormControl('', Validators.compose([\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        landLineNum: new FormControl('', Validators.compose([\n          Validators.minLength(10),\n          Validators.maxLength(15),\n          Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n        ])),\n        email: new FormControl(\"\", Validators.compose([Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ])),\n      })\n    }),\n    officialEmailAsLoginEmail: new FormControl(false),\n    isTL: new FormControl(false),\n    tlId: new FormControl('')\n\n  })\n}\n\n/**\n * Functionality While Updating Employee Basic Details\n * Validation While Updating Employee Basic Details\n */\n\nexistingBasicDetails(){\n  this.api.employeeList(this.snapShotParam).subscribe(data=>{\n    if(data.status === 'success'){\n      this.basicDetailsData.push(data.data);\n      for (var i = 0; i < this.basicDetailsData.length; i++) {\n        if(this.snapShotParam != null){\n          this.onSelect(this.basicDetailsData[i].companyId);\n          this.getDepartmentListData(this.basicDetailsData[i].branchId);\n        }\n        this.employeeBasicForm = this.fb.group({\n          departmentId: new FormControl(this.basicDetailsData[i].departmentId),\n          branchId: new FormControl(this.basicDetailsData[i].branchId),\n          jobProfileId: new FormControl(this.basicDetailsData[i].jobProfileId),\n          companyId: new FormControl(this.basicDetailsData[i].companyId),\n          name: new FormControl(this.basicDetailsData[i].employeeName),\n          dob: new FormControl(this.basicDetailsData[i].dob),\n          contactDetails: new FormGroup({\n            personal: new FormGroup({\n              phone: new FormControl(this.basicDetailsData[i].personalContactNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n              ])),\n              landLineNum: new FormControl(this.basicDetailsData[i].personalPhoneNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n              ])),\n              email: new FormControl(this.basicDetailsData[i].personalEmail,Validators.compose([\n                Validators.required,\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n              ])),\n            }),\n            official: new FormGroup({\n              phone: new FormControl(this.basicDetailsData[i].officialContactNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n              ])),\n              landLineNum: new FormControl(this.basicDetailsData[i].officialPhoneNum,Validators.compose([\n                Validators.minLength(10),\n                Validators.maxLength(12),\n                Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$'),\n              ])),\n              email: new FormControl(this.basicDetailsData[i].officialEmail,Validators.compose([\n                Validators.required,\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n              ])),\n            })\n          }),\n          officialEmailAsLoginEmail: new FormControl(false),\n          isTL: new FormControl(false),\n          tlId: new FormControl('')\n        })\n      }\n    }\n  })\n}\n\n/**\n * Calling for API for Submit Data and Update Date\n * Clean Reactive Form Validation was Added here\n */\n\nemployeeForm() {\n  try {\n    // Clean Form\n    let cleanBasicDetailForm = this.util.cleanFormLevelTwo(this.employeeBasicForm);\n    if(this.snapShotParam === null){\n      if (this.employeeBasicForm.valid) {\n        this.api.submitData(cleanBasicDetailForm.value).subscribe((data) => {\n          if (data.status == \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            this.hidden = data.data.employeeDetails._id;\n            setTimeout(() => {\n              this.ngZone.run(() => this.router.navigateByUrl(`/pages/employee-wizard/employee-profile/${this.hidden}`));\n              this.handleErrroMessage();\n            }, 1500);\n          }\n          else if (data.status == \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrroMessage();\n            }, 1500);\n          }\n        })\n      }\n    } else {\n      if (this.employeeBasicForm.valid) {\n        this.api.updateEmployeeBasicDetails(cleanBasicDetailForm.value,this.snapShotParam).subscribe((data) => {\n          if (data.status == \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrroMessage();\n            }, 1500);\n          }\n          else if (data.status == \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrroMessage();\n            }, 1500);\n          }\n        })\n      }\n    }\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// checkbox for officail details as personal details\n\nsameAsPersonalDetails(action){\n  if(action === false){\n    this.actionBox = true;\n  } else if(action === true){\n    this.actionBox = false;\n  }\n\n  if(this.actionBox === true){\n    this.existingPersonalDetails = this.employeeBasicForm.value.contactDetails.personal;\n    this.employeeBasicForm.get('contactDetails.official.phone').setValue(this.existingPersonalDetails.phone);\n    this.employeeBasicForm.get('contactDetails.official.landLineNum').setValue(this.existingPersonalDetails.landLineNum);\n    this.employeeBasicForm.get('contactDetails.official.email').setValue(this.existingPersonalDetails.email);\n  } else if (this.actionBox === false){\n    this.employeeBasicForm.get('contactDetails.official.phone').setValue('');\n    this.employeeBasicForm.get('contactDetails.official.landLineNum').setValue('');\n    this.employeeBasicForm.get('contactDetails.official.email').setValue('');\n  }\n}\n\n// Whole Functionality Ends Here For Basic Details!!\n\n\n/**\n * Employee Bio Details Form Functionality Start from here\n * Validation While Updating Employee Bio Details\n */\n\nempBioValidation() {\n  try {\n    this.employeeBioForm = this.fb.group({\n      bio: new FormGroup({\n        height: new FormControl('',Validators.compose([Validators.pattern(/^[1-9]'((\\s?)(-?)(\\s?)([0-9]|(1[0-1]))\\\")?$/)])),\n        weight: new FormControl('',Validators.compose([Validators.pattern(/^\\d{2,3} ?kg$/)])),\n        color: new FormControl(''),\n        moleIdentification: new FormControl(''),\n        bloodGroup: new FormControl('',Validators.compose([Validators.pattern(/^(A|B|AB|O)[+-]$/)])),\n        eyePower: new FormControl(''),\n        handicapped: new FormControl(false),\n        handicappedPercent: new FormControl('',Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        multipleHandicapped: new FormControl(false),\n        multipleHandicappedPercent: new FormControl('',Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        illness: new FormGroup({\n          physical: new FormGroup({\n            physicalIllnessName: new FormControl(''),\n            treatmentName: new FormControl(''),\n            hospitalName: new FormControl(''),\n            treatmentDuration: new FormControl(''),\n            illnessStatus: new FormControl(''),\n          }),\n          mental: new FormGroup({\n            mentalIllnessName: new FormControl(''),\n            treatmentName: new FormControl(''),\n            hospitalName: new FormControl(''),\n            treatmentDuration: new FormControl(''),\n            illnessStatus: new FormControl(''),\n          })\n        })\n      })\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n/**\n * Functionality while updating Employee Bio Details\n * Employee Bio Details Form Validation\n */\n\nbioEdit(){\n  this.bioList = false;\n  this.bioForm = true;\n  this.shown = this.biodata[0].multipleHandicapped;\n  this.show = this.biodata[0].handicapped;\n  for(var i=0;i<this.biodata.length;i++){\n    this.employeeBioForm = this.fb.group({\n      bio: new FormGroup({\n        height: new FormControl(this.biodata[i].height,Validators.compose([Validators.pattern(/^[1-9]'((\\s?)(-?)(\\s?)([0-9]|(1[0-1]))\\\")?$/)])),\n        weight: new FormControl(this.biodata[i].weight,Validators.compose([Validators.pattern(/^\\d{2,3} ?kg$/)])),\n        color: new FormControl(this.biodata[i].color),\n        moleIdentification: new FormControl(this.biodata[i].moleIdentification),\n        bloodGroup: new FormControl(this.biodata[i].bloodGroup,Validators.compose([Validators.pattern(/^(A|B|AB|O)[+-]$/)])),\n        eyePower: new FormControl(this.biodata[i].eyePower),\n        handicapped: new FormControl(this.biodata[i].handicapped),\n        handicappedPercent: new FormControl(this.biodata[i].handicappedPercent,Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        multipleHandicapped: new FormControl(this.biodata[i].multipleHandicapped),\n        multipleHandicappedPercent: new FormControl(this.biodata[i].multipleHandicappedPercent,Validators.compose([Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)])),\n        illness: new FormGroup({\n          physical: new FormGroup({\n            physicalIllnessName: new FormControl(this.biodata[i].illness.physical.physicalIllnessName),\n            treatmentName: new FormControl(this.biodata[i].illness.physical.treatmentName),\n            hospitalName: new FormControl(this.biodata[i].illness.physical.hospitalName),\n            treatmentDuration: new FormControl(this.biodata[i].illness.physical.treatmentDuration),\n            illnessStatus: new FormControl(this.biodata[i].illness.physical.illnessStatus),\n          }),\n          mental: new FormGroup({\n            mentalIllnessName: new FormControl(this.biodata[i].illness.mental.mentalIllnessName),\n            treatmentName: new FormControl(this.biodata[i].illness.mental.treatmentName),\n            hospitalName: new FormControl(this.biodata[i].illness.mental.hospitalName),\n            treatmentDuration: new FormControl(this.biodata[i].illness.mental.treatmentDuration),\n            illnessStatus: new FormControl(this.biodata[i].illness.mental.illnessStatus),\n          })\n        })\n      })\n    })\n  }\n}\n\n/**bio list data function configuration */\nbioListData(){\n  this.api.bioDataList(this.snapShotParam).subscribe(data=>{\n    if(data.status === 200 || data.status === 'success'){\n      if(Object.keys(data.data).length === 3){\n        this.bioList= false;\n        this.bioForm= true;\n        this.employeeBioButton = 'Submit';\n      }else{\n        this.employeeBioButton = 'Update';\n        this.bioList= true;\n        this.bioForm= false;\n        this.biodata = data.data;\n        this.biodata = Array.of(this.biodata);\n      }\n    }\n  })\n}\nemployeeBioFormData() {\n  try{\n    let cleanBioData = this.util.cleanFormLevelThree(this.employeeBioForm);\n    if(this.employeeBioButton === 'Submit'){\n      this.api.submitBioData(cleanBioData.value, this.snapShotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.bioListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    } else if(this.employeeBioButton === 'Update'){\n      this.api.updateBio(cleanBioData.value, this.snapShotParam).subscribe(data =>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.bioListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(() => {\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    }\n\n  } catch(err){\n    console.log(err);\n  }\n\n}\n\n/**\n *\n * @Function setValidators(),updateValueAndValidity(),clearValidators()\n * Predefined Function Of Reactive Form\n */\n\ncheck(value: String) {\nlet dynamicValidation = {'dynamic':[Validators.required, Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)]};\n  if (value === \"true\") {\n    if(this.employeeBioButton === 'Update'){\n      this.employeeBioForm.get('bio.handicappedPercent').setValue('');\n      this.employeeBioForm.get('bio.handicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.handicappedPercent').updateValueAndValidity();\n    } else {\n      this.show = true;\n      this.employeeBioForm.get('bio.handicapped').setValue(true);\n      this.employeeBioForm.get('bio.handicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.handicappedPercent').updateValueAndValidity();\n    }\n  } else {\n    this.show = false;\n    this.employeeBioForm.get('bio.handicapped').setValue(false);\n    this.employeeBioForm.get('bio.handicappedPercent').clearValidators();\n    this.employeeBioForm.get('bio.handicappedPercent').updateValueAndValidity();\n  }\n}\n\n/**\n *\n * @Function setValidators(),updateValueAndValidity(),clearValidators()\n * Predefined Function Of Reactive Form\n */\n\nchecked(value: String) {\n  let dynamicValidation = {'dynamic':[Validators.required, Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)]}\n  if (value === \"true\") {\n    if(this.employeeBioButton === 'Update'){\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').setValue('');\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').updateValueAndValidity();\n    } else {\n      this.shown = true;\n      this.employeeBioForm.get('bio.multipleHandicapped').setValue(true);\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').setValidators(dynamicValidation['dynamic']);\n      this.employeeBioForm.get('bio.multipleHandicappedPercent').updateValueAndValidity();\n    }\n  } else {\n    this.shown = false;\n    this.employeeBioForm.get('bio.multipleHandicapped').setValue(false);\n    this.employeeBioForm.get('bio.multipleHandicappedPercent').clearValidators();\n    this.employeeBioForm.get('bio.multipleHandicappedPercent').updateValueAndValidity();\n  }\n}\n// Validations For Employee Bio\nbioValidationMessage = {\n  'height': [\n    { type: 'pattern', message: 'Height value is not acceptable.'},\n  ],\n  'weight': [\n    { type: 'pattern', message: 'Weight value is not acceptable.'},\n  ],\n  'bloodGroup': [\n    { type: 'pattern', message: 'Blood Group value is not acceptable.'},\n  ],\n  'handicappedPercent': [\n    { type: 'pattern', message: 'Percentage is not acceptable.'},\n    { type: 'required', message: 'Percentage is Required.'},\n\n  ],\n  'multipleHandicappedPercent': [\n    { type: 'pattern', message: 'Percentage value is not acceptable.'},\n    { type: 'required', message: 'Percentage is Required.'},\n\n  ]\n}\n/**Update address and show address*/\n\n/**\n * Address Form Functionality Start Fom Here\n * Address Form Validation Functionality\n */\naddressValidation() {\n  try {\n    this.employeeAddressForm = this.fb.group({\n      address: new FormGroup({\n        doorNum: new FormControl(''),\n        streetName1: new FormControl(''),\n        streetName2: new FormControl(''),\n        landmark: new FormControl(''),\n        // zipcode: new FormControl(''),\n        zipcode: new FormControl('', Validators.compose([Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(10),\n          Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$'),\n        ])),\n        district: new FormControl(''),\n        state: new FormControl(''),\n        addressType: new FormControl('Current'),\n      })\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Address Validation Message\n\nvalidationMessageZip = {\n  'zipcode': [\n    { type: 'required', message: 'Zipcode is Required' },\n    { type: 'pattern', message: 'Invalid Zipcode' },\n    { type: 'minlength', message: 'Not a Zipcode ' },\n    { type: 'maxlength', message: 'Zipcode is too large' },\n  ],\n}\n\n// Address List Functionality\n\nshowAddress(){\n  this.api.oldAddress(this.snapShotParam).subscribe((data) =>{\n    if (data.status === 'success' || data.status === 200 ) {\n      if( data.data.length == 0 || data.status == 'error' || data.state == 400 ){\n        this.titleName = \"Add Address\";\n        this.addessBtn = false;\n        this.addAddess = true;\n        this.addressMsg = false;\n      } else {\n        this.addAddess = false;\n        this.addessBtn = true;\n        this.addressList = data.data;\n        this.addressMsg = true;\n      }\n    }\n  })\n}\n\n// Address driver function\n\naddNewAddress(){\n  this.employeeAddressForm.reset();\n  this.addessBtn = false;\n  this.titleName = \"Add Address\";\n  this.buttonName = \"Submit\";\n  this.addAddess = true;\n  this.addressId = ' ';\n\n}\n\n// Calling API for Add And Update Employee Address\n\naddressForm() {\n  try{\n    let cleanAddressForm = this.util.cleanFormLevelOne(this.employeeAddressForm);\n    if(this.addressId == \" \" || this.addressId ===null || this.addressId === undefined ){\n      this.api.submitAddress(cleanAddressForm.value, this.snapShotParam).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showAddress();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          })\n        }\n      })\n    }else{\n      this.api.updateAddess(cleanAddressForm.value, this.snapShotParam,this.addressId).subscribe((data) => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.previousValue = data.data;\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showAddress();\n            this.handleErrroMessage();\n          },1000)\n\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          })\n        }\n      })\n      this.addressId = \"\";\n    }\n  }catch(err){\n    console.log(err);\n  }\n\n}\n\n/**\n * Employee Address Update Functionality\n * Employee Address Fom Validation\n */\n\naddressEdit(id:String){\n  this.titleName = \"Update Address\";\n  this.buttonName = \"Update\";\n  this.addressId = id;\n  this.addAddess = true;\n  this.addessBtn = true;\n  this.addressList ;\n  for(var i =0;i<this.addressList.length; i++) {\n    if (this.addressList[i]._id === this.addressId){\n      this.employeeAddressForm = this.fb.group({\n        address: new FormGroup({\n          doorNum: new FormControl(this.addressList[i].doorNum),\n          streetName1: new FormControl(this.addressList[i].streetName1),\n          streetName2: new FormControl(this.addressList[i].streetName2),\n          landmark: new FormControl(this.addressList[i].landmark),\n          zipcode: new FormControl(this.addressList[i].zipcode),\n          district: new FormControl(this.addressList[i].district),\n          state: new FormControl(this.addressList[i].state),\n          addressType: new FormControl('Current'),\n        })\n      })\n    }\n  }\n}\n\ncancleAddForm(){\n  this.addressId = \" \";\n  this.addAddess = false;\n  this.addessBtn = true;\n}\n\n//Delete Employee Address\n\nremoveAddess(addressId:String){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n    confirmButton: 'btn btn-success',\n    cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n      this.api.deleteAddress(this.snapShotParam,addressId).subscribe((data)=>{\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.showAddress();\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your data is safe',\n        'error'\n      )\n    }\n  })\n}\n\n// Employee Address Whole Functinality Ends Here\n\n\n//Method for job profile list\ngetJobProfile(companyId) {\n  try {\n    this.api.getJobProfileListData(companyId).subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.jobProfileList = data.data;\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//For Form value and validation\neducationDetailsValidation() {\n  try {\n    this.empEducationForm = this.fb.group({\n      educationalDetails: new FormGroup({\n        courseName: new FormControl(''),\n        instituteName: new FormControl(''),\n        passOutYear: new FormControl('',Validators.compose([\n          Validators.required,\n          Validators.pattern(/^(19|20)\\d{2}$/)\n      ])),\n        status: new FormControl(''),\n        description: new FormControl(''),\n        scoredPercent: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/)\n        ])),\n      })\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nvalidationMessageEducation = {\n  'passOutYear': [\n    { type: 'required', message: 'Pass Out Year is Required' },\n    { type: 'pattern', message: 'Invalid Year' },\n  ],\n  'scoredPercent': [\n    { type: 'required', message: 'Percentage is Required' },\n    { type: 'pattern', message: 'Invalid Percentage' },\n  ],\n}\n\n\n\n\n\n//Method for get company list\ngetList() {\n  try {\n    this.api.getCompanyData().subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.companyListData = data.company;\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Method for Show branch list\nshowBranchList(companyId: String) {\n  try {\n    this.api.getBranchListData(companyId).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.branch = data.branch.length;\n        this.branchList = data.branch;\n      }\n    })\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n//Method for set selected value according to companyId.\nonSelect(companyId) {\n  try {\n    this.showBranchList(companyId);\n    this.getJobProfile(companyId);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/* Method for set selected value according to branchId. */\nonClick(branchId) {\n  try {\n    this.getDepartmentListData(branchId);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nscroll(element) {\n  element.scrollIntoView();\n}\n\n// Get DepartmentList\ngetDepartmentListData(branchId: string) {\n  try {\n    this.api.getDepartmentData(branchId).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.departmentList = data.department;\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Method for show validation message\nvalidationMessage = {\n  'name': [\n    { type: 'required', message: 'Name is required' },\n  ],\n  'departmentId': [\n    { type: 'required', message: 'Department Name is required' },\n  ],\n  'branchId': [\n    { type: 'required', message: 'Branch Name is required' },\n  ],\n  'companyId': [\n    { type: 'required', message: 'Company Name is required' },\n  ],\n  'jobProfileId': [\n    { type: 'required', message: 'Job Profile Name is required' },\n  ],\n  'dob': [\n    { type: 'required', message: 'Birthday Date is required' },\n  ],\n  'email': [\n    { type: 'required', message: 'Email is required' },\n    { type: 'pattern', message: 'Enter a valid email' },\n  ],\n  'phone': [\n    { type: 'required', message: 'Phone number is required' },\n    { type: 'pattern', message: 'Invalid Phone Number' },\n    { type: 'minlength', message: 'Not a phone number ' },\n    { type: 'maxlength', message: 'Phone no. is too large' },\n  ],\n  'landLineNum': [\n    { type: 'pattern', message: 'Invalid Landline Number' },\n    { type: 'minlength', message: 'Not a Landline number ' },\n    { type: 'maxlength', message: 'Landline no. is too large' },\n  ],\n\n}\n\n/** Upload Document ts file configration start here */\nlistDocument() {\n  try {\n    this.docApi.documentData().subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.docData = data.data;\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nhandleInputChange(e) {\n  var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n  var pattern = /image-*/;\n  var reader = new FileReader();\n  if (!file.type.match(pattern)) {\n    alert('Image Format is not valid');\n    return;\n  }\n  reader.onload = this._handleReaderLoaded.bind(this);\n  reader.readAsDataURL(file);\n}\n\n_handleReaderLoaded(e) {\n  let reader = e.target;\n  this.imageSrc = reader.result;\n  this.imagePath = this.imageSrc;\n}\n\nremove() {\n  alert(\"Remove button is working\");\n}\n\ncounter(i: number) {\n  return new Array(i);\n}\n/** Upload Document ts file configration End here */\n\n\n/** skill category functions */\nskillCate() {\n  this.skillApi.skillCategoryData().subscribe(data => {\n    if(data.status === 'success' || data.status === 200) {\n      this.skillValue  = data.skillCategory;\n    }\n  })\n}\n/** skill category functions */\n\n/** add Family  */\nonSelectRelation(value) {\n  this.showForm = value;\n}\n\n//add family details form validation\naddMemberValidation() {\n  this.addRelationForm = this.fb.group({\n    family: new FormGroup({\n      members: new FormGroup({\n        relation: new FormControl(\"Father\", Validators.required),\n        name: new FormControl(''),\n        age: new FormControl('',Validators.compose([Validators.pattern(/^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$/)])),\n        occupation: new FormControl(''),\n        education: new FormControl(''),\n        income: new FormControl(''),\n      })\n    }),\n    familyType: new FormControl('Joint'),\n  })\n}\n\n\nvalidationMessageFamily = {\n  'age': [\n    { type: 'pattern', message: 'Invalid Age' },\n  ],\n}\n\nupdateValidation(familyId:String) {\n  try {\n    this.addfamilyBtn = 'Update';\n    this.showAddFamilyButton = false;\n      this.familyIdValue = familyId;\n      this.formShow = true;\n      this.title = \"Update\";\n      for (var i = 0; i < this.familyDetailsList.length; i++) {\n        if (this.familyDetailsList[i]._id === familyId) {\n          console.log(\"n\",this.familyDetailsList[i]._id);\n          console.log(\"v\",this.familyId);\n\n          this.addRelationForm = this.fb.group({\n            family: new FormGroup({\n              members: new FormGroup({\n                relation: new FormControl(this.familyDetailsList[i].relation, Validators.required),\n                name: new FormControl(this.familyDetailsList[i].name),\n                age: new FormControl(this.familyDetailsList[i].age,Validators.compose([Validators.pattern(/^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$/)])),\n                occupation: new FormControl(this.familyDetailsList[i].occupation),\n                education: new FormControl(this.familyDetailsList[i].education),\n                income: new FormControl(this.familyDetailsList[i].income),\n              })\n            }),\n            familyType: new FormControl(this.familyTypeList),\n          })\n        }\n      }\n  } catch (err) {\n    console.log(err.message);\n  }\n\n}\n/** add family */\n\n//Method for onclick on button show form and hide current button\nshowAddFamilyForm(){\n  this.familyIdValue = \"\";\n  this.addfamilyBtn = 'Submit';\n  this.formShow = true;\n  this.addRelationForm.reset();\n  this.title = \"Add\";\n  this.showAddFamilyButton = false;\n\n}\n\n//Function for onclick button for hide form\ncancelValue(){\n  this.formShow = false;\n  this.showAddFamilyButton = true;\n}\n\n//Method for add and update employee details\naddFamilyDetails() {\n  this.addfamilyBtn = 'submit';\n  try {\n  let cleanFamilyForm = this.util.cleanFormLevelThree(this.addRelationForm);\n  this.showAddFamilyButton = true;\n    if( this.familyId.nativeElement.value === \"\" ){\n      this.api.addFamilyMember(cleanFamilyForm.value, this.snapShotParam).subscribe(data => {\n      if (data.status === 'success' || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        setTimeout(() => {\n          this.getFamilyDetails();\n          this.handleErrroMessage();\n        }, 500);\n        this.addRelationForm.reset();\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrroMessage()\n        },2000);\n      }\n    })\n    }\n    else{\n      if(this.addRelationForm.valid){\n        this.api.updateFamilyDetails(cleanFamilyForm.value, this.snapShotParam, this.familyId.nativeElement.value).subscribe((data)=>{\n          if (data.status === \"success\" || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() =>{\n              this.getFamilyDetails();\n              this.handleErrroMessage();\n            },1000)\n          } else if (data.status === \"error\" || data.status === 404) {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(()=>{\n              this.handleErrroMessage()\n            },2000);\n          }\n        })\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n//Get family details\ngetFamilyDetails() {\n  try {\n    this.formShow = false;\n    this.api.getFamilyData(this.snapShotParam).subscribe(response => {\n      if (response.status === \"success\" || response.status === 200) {\n        if (response.data.familyDetails.length > 0) {\n          this.divShow = true;\n          this.familyDetailsList = response.data.familyDetails;\n          this.familyTypeList = response.data.familyType;\n        } else if(response.data.familyDetails.length === 0){\n          this.divShow = false;\n          this.showAddFamilyForm();\n        }\n      }\n      else if(response.status === \"error\" || response.status === 404) {\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n//Method for remove company branch\ndeleteFamilyDetails(familyId: String) {\n  try {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeFamilyDetails(this.snapShotParam, familyId).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.getFamilyDetails();\n\n          }\n        })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your data is safe',\n          'error'\n        )\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n\n/**Update Education details */\nshowEducationDetails(){\n  this.api.educationDetails(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success') {\n      if(data.data.length == 0){\n        this.education = \"Education-Details\";\n        this.EducationForm = true;\n        this.listMesg = false;\n        this.educationBtn= false;\n      } else {\n        this.EducationForm = false;\n        this.educationBtn = true;\n        this.educationData = data.data;\n        this.listMesg = true;\n      }\n    } else {\n      this.errorMsg = true;\n    }\n  })\n}\n\n\nswitchTypeValidation(inputValue:Number){\n  if(inputValue >0 && inputValue <= 100 ){\n      this.percentErrorMsg = '';\n      this.errorMsgg = '';\n  } else if((inputValue).toString().length == 0){\n      this.percentErrorMsg = 'Percent is Required';\n      this.errorMsgg = '';\n  } else if((inputValue).toString().length > 6) {\n      this.percentErrorMsg = 'Percent Value is too Large';\n      this.errorMsgg = '';\n  } else {\n      this.percentErrorMsg = '';\n      this.errorMsgg = 'Enter value is not valid';\n  }\n}\n\neducationEdit(id){\n  this.eduBtn = \"Update\";\n  this.educationBtnadd = 'Update';\n  this.education = \"Update Education-Details\";\n  this.educationCurentId = id;\n  this.EducationForm = true;\n  this.educationData;\n  // const len = Object.keys(this.educationData).length;\n  for(var i =0;i<this.educationData.length; i++) {\n  if (this.educationData[i]._id === this.educationCurentId){\n  this.empEducationForm = this.fb.group({\n    educationalDetails: new FormGroup({\n      courseName: new FormControl(this.educationData[i].courseName),\n      instituteName: new FormControl(this.educationData[i].instituteName),\n      passOutYear: new FormControl(this.educationData[i].passOutYear,Validators.compose([\n        Validators.required,\n        Validators.pattern(/^(19|20)\\d{2}$/)\n    ])),\n      status: new FormControl(this.educationData[i].status),\n      description: new FormControl(this.educationData[i].description),\n      // scoredPercent: new FormControl(this.educationData[i].scoredPercent),\n      scoredPercent: new FormControl(this.educationData[i].scoredPercent, Validators.compose([\n        Validators.required,\n        Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/)\n    ])),\n    })\n  })\n}\n}\n}\n\nremoveEducation(id:String){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n    confirmButton: 'btn btn-success',\n    cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n      this.api.removeEducation(this.snapShotParam,id).subscribe((data)=>{\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.showEducationDetails();\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your list data safe',\n        'error'\n      )\n    }\n  })\n}\n\naddNewEducation() {\n  this.eduBtn = \"Submit\";\n  this.educationBtn= false;\n  this.education = \"Education-Details\";\n  this.empEducationForm.reset();\n  this.EducationForm = true;\n  this.educationCurentId = \" \";\n\n}\n\ncancleEducation(){\n  this.EducationForm = false;\n  this.educationBtn = true;\n  this.educationCurentId = \" \";\n}\n\neducationForm() {\n  try {\n    let cleanEducationalFormData = this.util.cleanFormLevelOne(this.empEducationForm);\n    if(this.educationCurentId == \" \" || this.educationCurentId === null || this.educationCurentId === undefined){\n      this.api.submitEducationalData(cleanEducationalFormData.value, this.snapShotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.previousValue = data.data;\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showEducationDetails();\n            this.handleErrroMessage();\n          },1000);\n\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000);\n        }\n      })\n    } else {\n      this.api.updateEducation(cleanEducationalFormData.value,this.snapShotParam,this.educationCurentId).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.previousValue = data.data;\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showEducationDetails();\n            this.handleErrroMessage();\n          },1000);\n\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000);\n        }\n      })\n      this.educationCurentId = \"\" ;\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n/**Update Education details */\n\n\n/**Update work exprience */\nshowWorkList(){\n  this.api.workExprience(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success') {\n      if(data.data.length == 0){\n        this.exprienceTitle = \"Work Experience\";\n        this.addExpbtn = false;\n        this.workExperience = true;\n        this.listExprience = false;\n      } else {\n        this.workExperience = false;\n        this.exprienceListData = data.data;\n        this.listExprience = true;\n        this.addExpbtn= true;\n      }\n    } else {\n      this.errorMsg = true;\n    }\n  })\n}\n\nexpriceneEdit(id){\n  this.exprienceTitle = \"Update Experience\";\n  this.experienceBtn = 'Update';\n  this.workExperience = true;\n  this.addExpbtn = true;\n  this.expCurentId = id;\n  for(var i =0;i<this.exprienceListData.length; i++){\n    if(this.exprienceListData[i]._id === this.expCurentId){\n      this.workExperienceForm = this.fb.group({\n        workExperiences: new FormGroup({\n          companyName: new FormControl(this.exprienceListData[i].companyName),\n          designation: new FormControl(this.exprienceListData[i].designation),\n          experienceYears: new FormControl(this.exprienceListData[i].experienceYears,Validators.compose([\n            Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i),\n            Validators.max(40),\n          ])),\n          jobDescription: new FormControl(this.exprienceListData[i].jobDescription),\n          relivingReason: new FormControl(this.exprienceListData[i].relivingReason),\n          relivingIs: new FormControl(this.exprienceListData[i].relivingIs),\n          remarks: new FormControl(this.exprienceListData[i].remarks),\n        })\n      })\n    }\n  }\n}\n\nremoveExpeience(id){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n    confirmButton: 'btn btn-success',\n    cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n      this.api.removeExprience(this.snapShotParam,id).subscribe((data)=>{\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.showWorkList();\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your list data safe',\n        'error'\n      )\n    }\n  })\n}\n\ncancleExperience(){\n  this.workExperience = false;\n  this.addExpbtn=true;\n}\n\naddExperience(){\n  this.workExperienceForm.reset();\n  this.experienceBtn = 'Submit';\n  this.exprienceTitle = \"Add Experience\";\n  this.workExperience = true;\n  this.addExpbtn = false;\n  this.expCurentId = '';\n}\n\n/**upload work Experience */\naddWorkExp() {\n  try {\n    let cleanWorkExperienceForm = this.util.cleanFormLevelOne(this.workExperienceForm);\n    if(this.expCurentId == '' || this.expCurentId == null){\n      this.api.experiAdd(cleanWorkExperienceForm.value, this.snapShotParam).subscribe(data => {\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showWorkList();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage()\n          },2000)\n        }\n      })\n    } else {\n      this.api.updateWokExprience(cleanWorkExperienceForm.value,this.snapShotParam,this.expCurentId).subscribe(data=>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.showWorkList();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage()\n          },2000)\n        }\n\n      })\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nvalidationMessageExper = {\n  'experienceYears': [\n    { type: 'pattern', message: 'Invalid Experience Years' },\n    { type: 'max', message: 'Experience Years should be less than 40'}\n  ],\n}\n\n\nexperienceValidation() {\n  try {\n    this.workExperienceForm = this.fb.group({\n      workExperiences: new FormGroup({\n        companyName: new FormControl(''),\n        designation: new FormControl(''),\n        experienceYears: new FormControl('',Validators.compose([\n          Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i),\n          Validators.max(40),\n        ])),\n        jobDescription: new FormControl(''),\n        relivingReason: new FormControl(''),\n        relivingIs: new FormControl(''),\n        remarks: new FormControl(''),\n      })\n    })\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n/** upload work experience */\n/** Update work exprience */\n\n\n\n/**Bank details update delete */\nbankDetails(){\n  try{\n    this.actionBox = false;\n    this.api.bankDetailsList(this.snapShotParam).subscribe(data=>{\n      if(data.status === 'success' || data.status === 200){\n          this.lenthoffical = Object.keys(data.data.official).length;\n          this.lenthperosnal = Object.keys(data.data.personal).length;\n        if(this.lenthoffical == 0 || this.lenthperosnal == 0){\n          this.bankList = false;\n          this.bankForm = true;\n          this.bankDetailsForm.reset();\n        }else{\n          this.bankListData = data.data;\n          this.bankListData = Array.of(this.bankListData);\n          this.bankList = true;\n          this.bankForm= false;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err.message);\n  }\n}\n\neditBankDetails(){\n  this.bankForm = true;\n  this.bankList = false;\n  this.bannBtn = 'Update';\n  this.bankListData;\n  for(var i =0;i<this.bankListData.length;i++){\n    this.bankDetailsForm = this.fb.group({\n      bankDetails: new FormGroup({\n          official: new FormGroup({\n            name: new FormControl(this.bankListData[i].official.name),\n            accountNum: new FormControl(this.bankListData[i].official.accountNum,Validators.compose([Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(this.bankListData[i].official.accountPlace),\n            accountType: new FormControl(this.bankListData[i].official.accountType),\n            debitCardNum: new FormControl(this.bankListData[i].official.debitCardNum),\n            debitCardType: new FormControl(this.bankListData[i].official.debitCardType),\n            remarks: new FormControl(this.bankListData[i].official.remarks),\n          }),\n          personal: new FormGroup({\n            name: new FormControl(this.bankListData[i].personal.name),\n            accountNum: new FormControl(this.bankListData[i].personal.accountNum,Validators.compose([Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(this.bankListData[i].personal.accountPlace),\n            accountType: new FormControl(this.bankListData[i].personal.accountType),\n            debitCardNum: new FormControl(this.bankListData[i].personal.debitCardNum),\n            debitCardType: new FormControl(this.bankListData[i].personal.debitCardType),\n            remarks: new FormControl(this.bankListData[i].personal.remarks),\n        })\n      })\n    })\n  }\n}\n\n/** Upload Banke details file configration start */\n\nsameAsOfficialDetails(action){\n  if(action === false){\n    this.actionBox = true;\n  } else if(action === true){\n    this.actionBox = false;\n  }\n  if(this.actionBox === true){\n    this.existingBankDetails = this.bankDetailsForm.value.bankDetails.official;\n    this.bankDetailsForm.get('bankDetails.personal.name').setValue(this.existingBankDetails.name);\n    this.bankDetailsForm.get('bankDetails.personal.accountNum').setValue(this.existingBankDetails.accountNum);\n    this.bankDetailsForm.get('bankDetails.personal.accountPlace').setValue(this.existingBankDetails.accountPlace);\n    this.bankDetailsForm.get('bankDetails.personal.accountType').setValue(this.existingBankDetails.accountType);\n    this.bankDetailsForm.get('bankDetails.personal.remarks').setValue(this.existingBankDetails.remarks);\n\n  } else if (this.actionBox === false){\n    this.bankDetailsForm.get('bankDetails.personal.name').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.accountNum').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.accountPlace').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.accountType').setValue('');\n    this.bankDetailsForm.get('bankDetails.personal.remarks').setValue('');\n  }\n}\n\nbankDetailsAdd() {\n  try {\n    let cleanBankForm = this.util.cleanFormLevelTwo(this.bankDetailsForm);\n    this.api.employBank(cleanBankForm.value, this.snapShotParam).subscribe((data) => {\n      if (data.status === \"success\" || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        setTimeout(() =>{\n          this.bankDetails();\n          this.handleErrroMessage();\n        },1500)\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(() =>{\n          this.bankDetails();\n          this.handleErrroMessage();\n        },2000)\n      }\n    })\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nbankDetailsCancel(){\n  this.bankDetails();\n}\n\nbankDataValidation() {\n  try {\n    this.bankDetailsForm = this.fb.group({\n      bankDetails: new FormGroup({\n          official: new FormGroup({\n            name: new FormControl('',Validators.compose([Validators.required])),\n            accountNum: new FormControl('',Validators.compose([Validators.required,Validators.maxLength(16),\n            Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(''),\n            accountType: new FormControl(''),\n            debitCardNum: new FormControl(''),\n            debitCardType: new FormControl(''),\n            remarks: new FormControl(''),\n          }),\n          personal: new FormGroup({\n            name: new FormControl('',Validators.compose([Validators.required])),\n            accountNum: new FormControl('',Validators.compose([Validators.required,Validators.maxLength(16),\n              Validators.pattern(/^[0-9]*$/)])),\n            accountPlace: new FormControl(''),\n            accountType: new FormControl(''),\n            debitCardNum: new FormControl(''),\n            debitCardType: new FormControl(''),\n            remarks: new FormControl(''),\n        })\n      })\n    })\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nvalidationMessageBank = {\n  'name': [\n    { type: 'required', message: 'Bank Name is Required' },\n  ],\n  'accountNum': [\n    { type: 'required', message: 'Account Number is Required' },\n    { type: 'maxlength', message: 'Account Number is maximum of 16 digits' },\n    { type: 'pattern', message: 'Account Number is not Acceptable' }\n  ],\n}\n\n/** upload bank details file configration end */\n/**Bank details update delete */\n\n\n/** payroll add details configratin  start*/\npayrollValidation(){\n  this.payrollDetailsForm = this.fb.group({\n    payroll:new FormGroup({\n      ctc:new FormControl('',Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n      ctcEffectiveFromDate:new FormControl('',Validators.required),\n      ctcEffectiveToDate:new FormControl('',Validators.required),\n      paidLeaveBalance:new FormControl('',Validators.compose([Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)])),\n      earnedLeaveBalance:new FormControl(''),\n      gradeRule:new FormControl('',Validators.required),\n      basicPay:new FormControl('',Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n      mode: new FormControl('Cash'),\n\n    })\n  })\n}\n\npayrollValidations = {\n  'ctc': [\n    { type: 'required', message: 'CTC Value is Required' },\n    { type: 'pattern', message: 'CTC Value is not Acceptable' },\n  ],\n  'ctcEffectiveFromDate': [\n    { type: 'required', message: 'Selcted Field is Required' },\n  ],\n  'ctcEffectiveToDate': [\n    { type: 'required', message: 'Selcted Field is Required' },\n  ],\n  'paidLeaveBalance': [\n    { type: 'pattern', message: 'Paid Leave Balance is not Acceptable' },\n  ],\n  'gradeRule': [\n    { type: 'gradeRule', message: 'Selcted Field is Required' },\n  ],\n  'basicPay': [\n    { type: 'required', message: 'Basic Pay Value is Required' },\n    { type: 'pattern', message: 'Basic Pay Value is not Acceptable' },\n  ],\n}\n\npayrollAdd(){\n  try{\n    if(this.payrollButton === 'Submit'){\n      this.api.payrollDataSubmit(this.payrollDetailsForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.payrollListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    } else if(this.payrollButton === 'Update'){\n      this.api.updatePayrollSettings(this.payrollDetailsForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\" || data.status === 200) {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.payrollListData();\n            this.handleErrroMessage();\n          },1000)\n        } else if (data.status === \"error\" || data.status === 404) {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },2000)\n        }\n      })\n    }\n  }catch(err) {\n    console.log(err);\n  }\n}\n\npayrollListData(){\n  try{\n  this.api.payollDataList(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success' || data.status === 200){\n      this.gradeRuleList();\n      this.payollDataLength = Object.keys(data.data).length;\n      if(this.payollDataLength === 2){\n        this.payrollList = false;\n        this.payrollForm = true;\n        this.payrollDetailsForm.get('payroll.earnedLeaveBalance').setValue(data.data.earnedLeaveBalance);\n      }else{\n        this.payrollData = data.data;\n        this.payrollData = Array.of(this.payrollData);\n        this.payrollList = true;\n        this.payrollForm = false;\n        this.payrollButton = 'Update';\n        this.payrollDetailsForm.get('payroll.earnedLeaveBalance').setValue(data.data.earnedLeaveBalance);\n      }\n    } else {\n      console.log(data.message);\n    }\n  })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Grade Rule List\n\ngradeRuleList(){\n  try{\n    this.api.gradeRuleList().subscribe(data => {\n      if(data.status === 'success'){\n        this.payrollGradeRuleList = data.data;\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\npayrollSettingEdit(){\n  this.payrollForm = true;\n  this.payrollList= false;\n  for(var i=0;i<this.payrollData.length;i++){\n    this.payrollDetailsForm = this.fb.group({\n      payroll:new FormGroup({\n        ctc:new FormControl(this.payrollData[i].ctc,Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n        ctcEffectiveFromDate:new FormControl(this.payrollData[i].ctcEffectiveFromDate.substring(0,10)),\n        ctcEffectiveToDate:new FormControl(this.payrollData[i].ctcEffectiveToDate.substring(0,10)),\n        paidLeaveBalance:new FormControl(this.payrollData[i].paidLeaveBalance,Validators.compose([Validators.pattern(/^\\d{0,2}(?:\\.\\d{0,2})?$/)])),\n        earnedLeaveBalance:new FormControl(this.payrollData[i].earnedLeaveBalance),\n        gradeRule:new FormControl(this.payrollData[i].gradeRule),\n        basicPay: new FormControl(this.payrollData[i].basicPay,Validators.compose([Validators.required,Validators.pattern(/^\\d{1,10}(?:\\.\\d{0,2})?$/)])),\n        mode: new FormControl(this.payrollData[i].mode),\n      })\n    })\n  }\n}\n\nbackPayrollBtn(){\n  this.payrollForm = false;\n  this.payrollList = true;\n  this.payrollListData();\n\n}\n/** payroll add details configration end  */\n\n/** employee Leave Settings details configratin  start*/\nemployeeLeaveDataList(){\n  try{\n  this.api.leaveEmployeeDataList(this.snapShotParam).subscribe(data => {\n    if(data.status === 'success'){\n      if(data.data.leaveSettings.length == 0){\n        this.employeeLeaveList = false;\n        this.employeeLeaveForm = true;\n        this.leaveSettingButton = false;\n        this.leaveButton = 'Submit';\n        this.leaveSettingHeadingButton = \"Add Leave Settings\";\n        // this.addLeaveSettingButton = true;\n      }else{\n        this.employeeLeaveData = data.data.leaveSettings;\n        this.employeeLeaveList = true;\n        this.employeeLeaveForm = false;\n        this.leaveSettingButton = true;\n        this.leaveButton = 'Update';\n        // this.addLeaveSettingButton = false;\n      }\n    }\n  })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Add Leave Settings\n\naddLeaveSetting(){\n  try{\n    let cleanLeaveSettingForm = this.util.cleanFormLevelOne(this.employeeLeaveDetailsForm);\n    if(this.leaveButton === 'Submit'){\n      this.api.addLeaveSettings(cleanLeaveSettingForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.employeeLeaveDataList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    } else if(this.leaveButton === 'Update'){\n      this.api.updateLeaveSettings(cleanLeaveSettingForm.value,this.snapShotParam,this.leaveSettingId).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.employeeLeaveDataList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Leave Setting Update Details\n\nleaveSettingUpdateDetails(leaveSettingId){\n  try{\n    this.leaveSettingId = leaveSettingId;\n    this.leaveSettingHeadingButton = \"Update Leave Settings\";\n    this.leaveButton = \"Update\";\n    this.employeeLeaveForm = true;\n    this.leaveSettingButton = true;\n    for(var i = 0; i<this.employeeLeaveData.length; i++){\n      if(this.employeeLeaveData[i]._id == leaveSettingId){\n        this.employeeLeaveDetailsForm = this.fb.group({\n          startDate:new FormControl(this.employeeLeaveData[i].startDate.substring(0,10),Validators.required),\n          endDate:new FormControl(this.employeeLeaveData[i].endDate.substring(0,10),Validators.required),\n          leavePerMonth:new FormControl(this.employeeLeaveData[i].leavePerMonth,Validators.required),\n          reason:new FormControl(this.employeeLeaveData[i].reason)\n        })\n      }\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n/** Leave Settings add details */\nleaveSettingForm(){\n  this.employeeLeaveDetailsForm = this.fb.group({\n    startDate:new FormControl('',Validators.required),\n    endDate:new FormControl('',Validators.required),\n    leavePerMonth:new FormControl('',Validators.required),\n    reason:new FormControl('',)\n  })\n}\n\n// Leave Setting ADD Leave Setting Button Functionality\naddNewLeaveSettings(){\n  this.employeeLeaveDetailsForm.reset();\n  this.leaveSettingButton = false;\n  this.leaveSettingHeadingButton = \"Add Leave Settings\";\n  this.leaveButton = \"Submit\";\n  this.employeeLeaveForm = true;\n}\n\n// Leave Setting Cancel Button Functionality\nleaveSettingCancel(){\n  this.employeeLeaveDataList();\n  this.employeeLeaveDetailsForm.reset();\n}\n\nvalidationMessageLeaveSettings = {\n  'startDate': [\n    { type: 'required', message: 'Start Date is Required' },\n  ],\n  'endDate': [\n    { type: 'required', message: 'End Date is Required' },\n  ],\n  'leavePerMonth': [\n    { type: 'required', message: 'Leave Per Month is Required' },\n  ],\n}\n\n/** employee Leave details configratin End*/\n\n/** employee Identity Proofs configratin Start*/\ngetEmployeeIdProofsList(){\n  try{\n  this.api.employeeIdProofsDataList(this.snapShotParam).subscribe(data => {\n\n    if(data.status === 'success'){\n      if(data.data.length == 0){\n        this.idProofsList = false;\n        this.idProofsForm = true;\n        this.idProofsSettingButton = false;\n        this.idProofsButton = 'Submit';\n        this.idProofsHeadingButton = \"Add Identity Proofs Settings\";\n        // this.addLeaveSettingButton = true;\n      }else{\n        this.idProofsData = data.data;\n        this.idProofsList = true;\n        this.idProofsForm = false;\n        this.idProofsSettingButton = true;\n        this.idProofsButton = 'Update';\n        // this.addLeaveSettingButton = false;\n      }\n    }\n  })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Add Employee Id Poofs Details\n\naddIdProofs(){\n  try{\n    let cleanIdProofsSettingForm = this.util.cleanFormLevelTwo(this.idProofsDetailsForm);\n    if(this.idProofsButton === 'Submit'){\n      this.api.addEmployeeIdProofs(cleanIdProofsSettingForm.value,this.snapShotParam).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.getEmployeeIdProofsList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    } else if(this.idProofsButton === 'Update'){\n      this.api.updateIdProofsSettings(cleanIdProofsSettingForm.value,this.snapShotParam,this.idProofsSettingId).subscribe(data=>{\n        if (data.status === \"success\") {\n          this.successMessage = true;\n          this.errorMsg = false;\n          this.successMsg = data.message;\n          setTimeout(() =>{\n            this.getEmployeeIdProofsList();\n            this.handleErrroMessage();\n          },2000)\n        } else if (data.status === \"error\") {\n          this.errorMsg = true;\n          this.successMessage = false;\n          this.errMsg = data.message;\n          setTimeout(()=>{\n            this.handleErrroMessage();\n          },3000)\n        }\n      })\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Id Proofs Setting Update Details\n\nidProofsSettingUpdateDetails(proofsId:String){\n  try{\n    this.idProofsSettingId = proofsId;\n    this.idProofsHeadingButton = \"Update Id Proofs Settings\";\n    this.idProofsButton = 'Update';\n    this.idProofsForm = true;\n    this.idProofsSettingButton = false;\n    for(var i = 0; i<this.idProofsData.length; i++){\n      if(this.idProofsData[i]._id === proofsId){\n        this.idProofsDetailsForm = this.fb.group({\n          identityProofs: new FormGroup ({\n            identityName:new FormControl(this.idProofsData[i].identityName,Validators.required),\n            identityNum:new FormControl(this.idProofsData[i].identityNum,Validators.required),\n            authorityName:new FormControl(this.idProofsData[i].authorityName),\n            issuePlace:new FormControl(this.idProofsData[i].issuePlace),\n            expiryDate:new FormControl(this.idProofsData[i].expiryDate.substring(0,10),Validators.required),\n            remarks:new FormControl(this.idProofsData[i].remarks)\n          })\n        })\n      }\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n//Method for remove Employee Id Proofs\ndeleteIdentityProofs(proofId: String) {\n  try {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.api.removeIdProofsDetails(this.snapShotParam, proofId).subscribe((data) => {\n          if (data.status === \"success\" || data.status === 200) {\n            swalWithBootstrapButtons.fire(\n              'Deleted!',\n              data.message,\n              'success'\n            )\n            this.getEmployeeIdProofsList();\n\n          }\n        })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your data is safe',\n          'error'\n        )\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Add New Id Proofs Setting Add Identity Proofs Button Functionality\naddNewIdProofsSettings(){\n  this.idProofsDetailsForm.reset();\n  this.idProofsSettingButton = false;\n  this.idProofsHeadingButton = \"Add Identity Proofs\";\n  this.idProofsButton = 'Submit';\n  this.idProofsForm = true;\n}\n// New Id Proofs Setting Cancel Button Functionality\nidProofsSettingsCancel(){\n  this.getEmployeeIdProofsList();\n  this.idProofsDetailsForm.reset();\n}\n\n//Employee ID's Form add details //\nidProofsSettingForm(){\n  this.idProofsDetailsForm = this.fb.group({\n    identityProofs: new FormGroup({\n      identityName:new FormControl('',Validators.required),\n      identityNum:new FormControl('',Validators.required),\n      authorityName:new FormControl(''),\n      issuePlace:new FormControl(''),\n      expiryDate:new FormControl('',Validators.required),\n      remarks:new FormControl('')\n    })\n  })\n}\n\nvalidationMessageIdProofsSettings = {\n  'identityName': [\n    { type: 'required', message: 'Identity Name is Required' },\n  ],\n  'identityNum': [\n    { type: 'required', message: 'Identity Number is Required' },\n  ],\n  'authorityName': [\n    { type: 'required', message: 'Authority Name is Required' },\n  ],\n  'issuePlace': [\n    { type: 'required', message: 'Issue Place is Required' },\n  ],\n  'expiryDate': [\n    { type: 'required', message: 'Expiry Date is Required' },\n  ],\n  'remarks': [\n    { type: 'required', message: 'Remarks is Required' },\n  ],\n}\n/** employee Identity Proofs configratin End*/\n\n\nbioCancel(){\n  this.bioForm=false;\n  this.bioList=true;\n}\n/** bio complete function configratin */\n\n/** langulage skills function configation  start*/\nlistSkillLanguage(){\n  try{\n    this.lsnguageSkillForm = false;\n    this.api.LanguageSkill(this.snapShotParam).subscribe(data=>{\n      if(data.status == 'success' || data.status == 200){\n        if(data.data.length === 0){\n          this.languageSkillList = false;\n          this.addLanguageSkillList();\n        }else{\n          this.LanguageData = data.data;\n          this.languageSkillList= true;\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\nlanguageSkillEdit(id){\n  this.languageSkillEditId = id;\n  this.skillLanguageBtn = 'Update';\n  this.languageSkillTitle = \"Update Language\";\n  this.lsnguageSkillForm = true;\n  this.addLanguageBtn = false;\n  for(var i=0;i<this.LanguageData.length;i++){\n    if(this.LanguageData[i]._id == id){\n      this.languageSkillForm = this.fb.group({\n        languageSkills:new FormGroup({\n          toSpeak:new FormControl(this.LanguageData[i].toSpeak),\n          toRead:new FormControl(this.LanguageData[i].toRead),\n          toWrite:new FormControl(this.LanguageData[i].toWrite),\n        })\n      })\n    }\n  }\n}\n\ncancelLanguageSkill(){\n  this.lsnguageSkillForm = false;\n  this.addLanguageBtn = true;\n}\n\naddLanguageSkill(){\n  try {\n    let cleanLaungugeSkillForm = this.util.cleanFormLevelOne(this.languageSkillForm);\n\n  if(this.languageSkillEditId == \"\" || this.languageSkillEditId === null){\n    this.api.addLanguageSkill(cleanLaungugeSkillForm.value,this.snapShotParam).subscribe(data=>{\n      if (data.status === \"success\" || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        this.addLanguageBtn = true;\n        setTimeout(() =>{\n          this.listSkillLanguage();\n          this.handleErrroMessage();\n        },1000)\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrroMessage();\n        },2000);\n      }\n    })\n  }else{\n    this.api.updateLanguageSkill(cleanLaungugeSkillForm.value,this.snapShotParam,this.languageSkillEditId).subscribe(data=>{\n      if (data.status === \"success\" || data.status === 200) {\n        this.successMessage = true;\n        this.errorMsg = false;\n        this.successMsg = data.message;\n        this.addLanguageBtn = true;\n        setTimeout(() =>{\n          this.listSkillLanguage();\n          this.handleErrroMessage();\n        },1000)\n      } else if (data.status === \"error\" || data.status === 404) {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrroMessage();\n        },2000);\n      }\n    })\n    }\n    this.languageSkillEditId = \"\";\n  } catch(err){\n    console.log(err);\n  }\n}\n\n\nlanguageSkillValidation(){\n  this.languageSkillForm = this.fb.group({\n    languageSkills:new FormGroup({\n      toSpeak:new FormControl(''),\n      toRead:new FormControl(''),\n      toWrite:new FormControl(''),\n    })\n  })\n}\n\naddLanguageSkillList(){\nthis.languageSkillEditId = \"\";\nthis.languageSkillTitle = \"Add\";\nthis.skillLanguageBtn = 'Submit';\nthis.lsnguageSkillForm = true;\nthis.addLanguageBtn = false;\nthis.languageSkillForm.reset();\n}\n\n\n/**langualge skills function configration end */\n\n// Error Handling Message\nhandleErrroMessage(){\n  this.successMessage = false;\n  this.errorMsg = false;\n  this.successMsg = '';\n  this.errMsg = '';\n}\noncheck(){\n  this.checkbox = !this.checkbox;\n  this.employeeBasicForm.get('isTL').setValue(this.checkbox);\n}\n\n// Get Tl List\ngetTlList(){\n  this.api.getTlList().subscribe((data)=>{\n    if(data.status === 'success'){\n      this.companyTlList = data.data;\n    }\n  })\n}\n\nuploadedDocumentDetails = [];\nemployeeDocumentsDetails = [];\n// get documnet list uploaded which are no uploaded yet\nuploadedDocumentList(){\n  try{\n    this.api.uploadedDocuments(this.snapShotParam).subscribe((data) =>{\n      if(data.status === 'success'){\n        this.uploadedDocumentDetails = data.data;\n      }\n    })\n    this.employeeDocumentList();\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Image Upload Form\nuploadImageForm(){\n  try{\n    this.uploadForm = this.fb.group({\n      document: ['']\n    });\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Upload Docs\nuploadDocs(documentTypeId,index,type){\n  try{\n    if(type === 'Update'){\n      if((document.getElementById(`${index}`)as HTMLInputElement).value.length === 0){\n        Swal.fire('No Image Selected');\n      } else {\n        this.api.uploadDocuments(this.uploadForm,documentTypeId,this.snapShotParam,type).subscribe((data)=>{\n          if(data.status === 'success'){\n            (document.getElementById('dismissUpdateDocuments').click());\n            Swal.fire(\n              'Status',\n              data.message,\n              'success'\n            )\n            this.employeeDocumentList();\n          } else if(data.status === 'error'){\n              Swal.fire(data.message);\n          }\n        })\n      }\n    } else if(type === 'Add'){\n      if((document.getElementById(`documnetDocImage${index}`)as HTMLInputElement).value.length === 0){\n        Swal.fire('No Image Selected');\n      } else {\n        this.api.uploadDocuments(this.uploadForm,documentTypeId,this.snapShotParam,type).subscribe((data)=>{\n          if(data.status === 'success'){\n            Swal.fire(\n              'Status',\n              data.message,\n              'success'\n            )\n            this.uploadedDocumentList();\n            this.employeeDocumentList();\n          } else if(data.status === 'error'){\n              Swal.fire(data.message);\n          }\n        })\n      }\n    }\n\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// When User select document image\nonFileSelect(event){\ntry{\n  if (event.target.files.length > 0) {\n    const file = event.target.files[0];\n    this.uploadForm.get('document').setValue(file);\n  }\n}catch(err){\n  console.log(err);\n}\n}\n\n// Get Uploaded Documnets By the employee\nemployeeDocumentList(){\n  try{\n    this.api.employeeDocumentList(this.snapShotParam).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeDocumentsDetails = data.data;\n      }\n    })\n  }catch(err){\n    console.log(err);\n\n  }\n}\n\n// Show Image On new tab\nopenImage(imageUrl){\n  try{\n    window.open(imageUrl);\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Delete Employee Document\ndeleteDocument(documentTypeId){\n  try{\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You want to delete it\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.value) {\n        this.api.deleteEmployeeDocument(documentTypeId,this.snapShotParam).subscribe((data)=>{\n          if(data.status === \"success\" || data.status === 200){\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          data.message,\n          'success'\n        )\n        this.employeeDocumentList();\n        this.uploadedDocumentList();\n          }\n      })\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Document Still Exists',\n          'error'\n        )\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Update the employee docs\ndocumentTypeId: any;\nasync updateDocuments(documentTypeId){\n  try{\n    this.documentTypeId = documentTypeId;\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-wizard',\n  templateUrl: './employee-wizard.component.html',\n  styleUrls: ['./employee-wizard.component.scss']\n})\nexport class EmployeeWizardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n"]}