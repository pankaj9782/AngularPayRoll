{"version":3,"sources":["webpack:///src/app/pages/holiday/holiday-routing.module.ts","webpack:///src/app/pages/holiday/add-holiday/add-holiday.component.ts","webpack:///src/app/pages/holiday/add-holiday/add-holiday.component.html","webpack:///src/app/pages/holiday/update-holiday/update-holiday.component.ts","webpack:///src/app/pages/holiday/update-holiday/update-holiday.component.html","webpack:///src/app/pages/holiday/list-holiday/list-holiday.component.ts","webpack:///src/app/pages/holiday/list-holiday/list-holiday.component.html","webpack:///src/app/pages/holiday/holiday-service/holiday-api.service.ts","webpack:///src/app/pages/holiday/holiday.component.ts","webpack:///src/app/pages/holiday/holiday.component.html","webpack:///src/app/pages/holiday/holiday.module.ts"],"names":["route","path","component","canActivate","children","redirectTo","pathMatch","HolidayRoutingModule","forChild","declarations","imports","AddHolidayComponent","_api","fb","ngZone","router","api","util","successMessage","errorMsg","holidayName","validationMessage","type","message","isListAvaliable","companyDataValidate","permissionInfo","permissionRoleInfo","search","holidayForm","disable","group","title","required","holidayDate","err","console","log","cleanHolidayForm","cleanFormLevelOne","value","addHoliday","subscribe","data","status","successMsg","setTimeout","handleErrors","run","navigateByUrl","errMsg","getHoliday","length","holidaysStatus","holidayDataSubmit","selector","templateUrl","UpdateHolidayComponent","leaveData","holidayId","snapshot","paramMap","get","moduleExists","existingData","holidayDetails","holidatList","substring","cleanHolidayUpdateForm","updateHoliday","updateHolidayList","ListHolidayComponent","_Activatedroute","showCard","leaveListData","Array","companyShowData","holidayList","len","Object","keys","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","removeData","dismiss","DismissReason","cancel","addHolidays","HolidayApiService","http","endpoint","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","companyId","sessionStorage","getItem","apiURL","pipe","errorMgmt","post","providedIn","HolidayComponent","styleUrls","HolidayModule"],"mappings":"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","file":"holiday-holiday-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HolidayComponent } from './holiday.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListHolidayComponent } from './list-holiday/list-holiday.component';\nimport { AddHolidayComponent } from './add-holiday/add-holiday.component';\nimport { UpdateHolidayComponent } from './update-holiday/update-holiday.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : HolidayComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-holiday',\n        component: ListHolidayComponent,\n      },\n      {\n        path: 'add-holiday',\n        component: AddHolidayComponent\n      },\n      {\n        path: 'update-holiday/:holidayId',\n        component: UpdateHolidayComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-holiday',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class HolidayRoutingModule { }","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HolidayApiService } from '../holiday-service/holiday-api.service';\nimport { ApiService } from '../../../services/api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n    selector: 'app-add-holiday',\n    templateUrl: './add-holiday.component.html'\n})\n\nexport class AddHolidayComponent implements OnInit {\n\n    holidayForm: FormGroup;\n    successMsg: String;\n    successMessage: boolean = false;\n    errMsg: String;\n    errorMsg: boolean = false;\n    companyNameStore: any;\n    showCard: any;\n    companyListData: Object;\n    companyNameId: any;\n    public holidayName = ['NATIONAL', 'STATE', 'WEEKLY', 'FESTIVAL'];\n    public companyId: any;\n  permissionInfo: any;\n\n    constructor(private _api: ApiService,\n      public fb: FormBuilder,\n      private ngZone: NgZone,\n      private router: Router,\n      private api: HolidayApiService,\n      private util: UtilitiesService){\n        this.isListAvaliable();\n      }\n\n    ngOnInit() {\n      this.companyDataValidate();\n      this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create Holiday') === -1){\n        this.holidayForm.disable();\n      }\n    }\n\n    companyDataValidate() {\n      try {\n        this.holidayForm = this.fb.group({\n          title: new FormControl('',Validators.required),\n          holidayDate: new FormControl('',Validators.required),\n          type: new FormControl('',Validators.required)\n          })\n        }\n      catch (err) {\n        console.log(err);\n      }\n    }\n\n    holidayDataSubmit() {\n      try{\n        let cleanHolidayForm = this.util.cleanFormLevelOne(this.holidayForm);\n        if (this.holidayForm.value) {\n          this.api.addHoliday(cleanHolidayForm.value).subscribe((data) => {\n            if(data.status === \"success\" || data.status === 200){\n              this.successMessage = true ;\n              this.errorMsg = false ;\n              this.successMsg = data.message;\n              setTimeout(() => {\n                this.handleErrors();\n                this.ngZone.run(()=>this.router.navigateByUrl('/pages/holiday/list-holiday'));\n              },2000);\n            }\n            else if(data.status === \"error\"|| data.status === 404){\n              this.errorMsg = true;\n              this.successMessage = false;\n              this.errMsg = data.message;\n              setTimeout(() => {\n                this.handleErrors();\n              },3000);\n            }\n          })\n        }\n      } catch(err){\n        console.log(err);\n      }\n\n    }\n\n    validationMessage = {\n      'title':[{\n        type: 'required', message: 'Holiday Title is Required'\n      },],\n      'holidayDate':[\n        {type:'required',message: 'Holiday Date is Required'},\n      ],\n      'type':[\n        {type:'required', message: 'Holiday Type is Required'}\n      ],\n    }\n\n    handleErrors(){\n      this.errorMsg = false;\n      this.successMessage = false;\n      this.errMsg = '';\n      this.successMsg = '';\n  }\n  isListAvaliable(){\n    try{\n      this.api.getHoliday().subscribe((data) =>{\n        if(data.status === 'success'){\n          if(data.data.length > 0 && this.util.holidaysStatus !== 1){\n            this.router.navigateByUrl(\"/pages/holiday/list-holiday\");\n            this.util.holidaysStatus = 0;\n          }\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Holiday Details</h2>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n         </p>\n      </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"holidayForm\" (ngSubmit)=\"holidayDataSubmit()\">\n         <div class=\"row\">\n            <div class=\"col-md\">\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Title :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"holidayName\" placeholder=\"Enter Holiday Title\"\n                  formControlName=\"title\" required>\n               <div *ngFor=\"let validation of validationMessage.title\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"holidayForm.get('title').hasError(validation.type) && (holidayForm.get('title').dirty || holidayForm.get('title').touched)\"\n                     style=\"color: red;margin-left: 14px;\">\n                     {{ validation.message }}\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div class=\"col-md\">\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Date:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"date\" id=\"date\" placeholder=\"Enter Date\" formControlName=\"holidayDate\" required>\n               <div *ngFor=\"let validation of validationMessage.holidayDate\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"holidayForm.get('holidayDate').hasError(validation.type) && (holidayForm.get('holidayDate').dirty || holidayForm.get('holidayDate').touched)\"\n                     style=\"color: red;margin-left: 14px;\">\n                     {{ validation.message }}\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div class=\"col-md\">\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Type :&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <select id=\"htype\" class=\"dropdown dropdown-toggle form-control\" formControlName=\"type\" style=\"width:100%; height: 40px;\">\n                  <option ng-selected=\"true\" value=\"\" disabled>----------Select Holiday Type----------</option>\n                  <option *ngFor=\"let type of holidayName\" [value]=\"type\">{{type}}</option>\n               </select>\n               <div *ngFor=\"let validation of validationMessage.type\">\n                  <div style=\"color: red;margin-left: 14px;\" *ngIf=\"holidayForm.get('type').hasError(validation.type) && (holidayForm.get('type').dirty || holidayForm.get('type').touched)\" style=\"color: red;margin-left: 14px;\">\n                        {{ validation.message }}\n                  </div>\n               </div>\n            </div>\n         </div>\n         </div>\n      </div>\n         <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"holidayForm.invalid || permissionInfo.search('Create Holiday') === -1\">Submit</button>\n            <button type=\"button\" routerLink=\"../list-holiday\" class=\"btn btn-danger\">Cancel</button>\n\n            </div>\n         </div>\n      </form>\n   </div>\n</div>\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HolidayApiService } from '../holiday-service/holiday-api.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-holiday',\n  templateUrl: 'update-holiday.component.html'\n})\n\nexport class UpdateHolidayComponent implements OnInit {\n\n  holidayForm: any;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  companyNameStore: [];\n  showCard: any;\n  companyNameId: any;\n  public companyName: [];\n  public companyId: any;\n  public holidayId: any;\n  public leaveId;\n  leaveData: Object[] = [];\n  holidayData: Object;\n  lastVal: [];\n  public holidayName = ['NATIONAL', 'STATE', 'WEEKLY', 'FESTIVAL'];\n  holidatList: any;\n  permissionInfo: any;\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router, private ngZone: NgZone, private route: ActivatedRoute,\n    private api: HolidayApiService,\n    private util: UtilitiesService) {\n      this.holidayId = this.route.snapshot.paramMap.get(\"holidayId\");\n      this.util.moduleExists(this.holidayId,'Holidays').subscribe((data)=>{\n        if(data.status === 'success'){\n          if(!data.data){\n            this.router.navigateByUrl('/pages/holiday/list-holiday');\n          }\n        }\n      })\n    }\n\n  ngOnInit() {\n    this.companyDataValidate();\n    this.existingData();\n    this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Edit Holiday') === -1){\n        this.holidayForm.disable();\n      }\n  }\n\n  existingData(){\n    this.api.holidayDetails(this.holidayId).subscribe(data=>{\n      this.holidatList = data.data;\n        this.holidayForm = this.fb.group({\n          title: new FormControl(this.holidatList.title,Validators.required),\n          holidayDate: new FormControl(this.holidatList.holidayDate.substring(0,10),Validators.required),\n          type: new FormControl (this.holidatList.type,Validators.required)\n        })\n    })\n  }\n\n  companyDataValidate() {\n    try {\n      this.holidayForm = this.fb.group({\n        title: new FormControl('',Validators.required),\n        holidayDate: new FormControl('',Validators.required),\n        type: new FormControl ('',Validators.required)\n      })\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  validationMessage = {\n    'title':[{\n      type: 'required', message: 'Holiday Title is Required'\n    },],\n    'holidayDate':[\n      {type:'required',message: 'Holiday Date is Required'},\n    ],\n    'type':[\n      {type:'required', message: 'Holiday Type is Required'}\n    ],\n  }\n\n  updateHolidayList() {\n    try {\n      let cleanHolidayUpdateForm = this.util.cleanFormLevelOne(this.holidayForm);\n      if (this.holidayForm.value) {\n        this.api.updateHoliday(cleanHolidayUpdateForm.value,this.holidayId).subscribe(data => {\n          if (data.status === 'success' || data.status === 200) {\n            this.successMessage = true;\n            this.errorMsg = false;\n            this.successMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n              this.ngZone.run(() => this.router.navigateByUrl('/pages/holiday/list-holiday'));\n            },2000);\n          } else if (data.status == \"error\") {\n            this.errorMsg = true;\n            this.successMessage = false;\n            this.errMsg = data.message;\n            setTimeout(() => {\n              this.handleErrors();\n            },3000);\n          }\n        })\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n}\n}","<div class=\"card card-user\">\n   <div class=\"card-header\">\n       <h2 class=\"card-title text-center\">Update Holiday</h2>\n       <!-- <button type=\"button\" class=\"btn btn-primary btn-circle\" routerLink=\"../../list-holiday\"  style=\"float: right;\" ><i class=\"fa  fa-arrow-right\"></i></button> -->\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n             <strong>{{ errMsg }}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n          <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n             <strong>{{ successMsg }}</strong>\n          </p>\n      </div>\n   <form class=\"form-horizontal\" [formGroup]=\"holidayForm\" (ngSubmit)=\"updateHolidayList()\">\n   <div class=\"row\">\n      <div class=\"col-md\">\n         <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Title: &nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n               <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\" formControlName=\"title\">\n               <div *ngFor=\"let validation of validationMessage.title\">\n                  <div style=\"color: red;margin-left: 14px;\"\n                     *ngIf=\"holidayForm.get('title').hasError(validation.type) && (holidayForm.get('title').dirty || holidayForm.get('title').touched)\"\n                     style=\"color: red;margin-left: 14px;\">\n                     {{ validation.message }}\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div class=\"col-md\">\n            <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>Date: &nbsp;<span style=\"color: darkred\">*</span></b></label>\n                  <div class=\"col-sm-offset-2\">\n                     <input class=\"form-control\" type=\"date\" id=\"holidayDate\" placeholder=\"Enter Date\" formControlName=\"holidayDate\">\n                     <div *ngFor=\"let validation of validationMessage.holidayDate\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                           *ngIf=\"holidayForm.get('holidayDate').hasError(validation.type) && (holidayForm.get('holidayDate').dirty || holidayForm.get('holidayDate').touched)\"\n                           style=\"color: red;margin-left: 14px;\">\n                           {{ validation.message }}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n      </div>\n      <div class=\"col-md\">\n            <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>Type: &nbsp;<span style=\"color: darkred\">*</span></b></label>\n                  <div class=\"col-sm-offset-2\">\n                  <select id=\"htype\" class=\"dropdown dropdown-toggle form-control\" formControlName=\"type\" style=\"width:100%; height: 40px;\">\n                     <option ng-selected=\"true\" value=\"\" disabled>----------Select Holiday Type----------</option>\n                     <option *ngFor=\"let h of holidayName\" [value]=\"h\">{{h}}</option>\n                  </select>\n                  <div *ngFor=\"let validation of validationMessage.type\">\n                     <div style=\"color: red;margin-left: 14px;\" *ngIf=\"holidayForm.get('type').hasError(validation.type) && (holidayForm.get('type').dirty || holidayForm.get('type').touched)\" style=\"color: red;margin-left: 14px;\">\n                           {{ validation.message }}\n                     </div>\n                  </div>\n               </div>\n               </div>\n      </div>\n\n   </div>\n      <div class=\"form-group\">\n         <div class=\"col-sm-offset-2 col-sm-10\">\n            <button [disabled]=\"permissionInfo.search('Edit Holiday') === -1 || holidayForm.invalid\"\n             type=\"submit\" class=\"btn btn-success\">Update</button>\n            <button type=\"button\" routerLink=\"../../list-holiday\" class=\"btn btn-danger\">Cancel</button>\n         </div>\n      </div>\n   </form>\n   </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HolidayApiService } from '../holiday-service/holiday-api.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component ({\n    selector: 'app-list-holidays',\n    templateUrl: './list-holiday.component.html'\n})\n\nexport class ListHolidayComponent implements OnInit {\n\n    showCard = {};\n    leaveListData = new Array();\n    companyShowData = [];\n  permissionInfo: any;\n\n    constructor(private api: HolidayApiService,public route:Router, private _Activatedroute:ActivatedRoute, private util:UtilitiesService) {}\n\n    ngOnInit(){\n      this.holidayList();\n      this.permissionInfo = this.util.permissionRoleInfo;\n    }\n\n    holidayList(){\n      try{\n        this.api.getHoliday().subscribe(data => {\n          if (data.status === 'success' || data.status === 200) {\n            this.leaveListData = data.data;\n             const len = Object.keys(this.leaveListData).length;\n            if(len == 0){\n               this.route.navigateByUrl(\"pages/holiday/add-holiday\");\n            }else{\n              this.leaveListData = data.data;\n            }\n          }\n        })\n      }catch(err){\n        console.log(err.message);\n      }\n    }\n\n    showConfirmationMessage(holidayId:String){\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n\n      swalWithBootstrapButtons.fire({\n        title: 'Are you sure?',\n        text: \"You want to delete it\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.value) {\n          this.api.removeData(holidayId).subscribe((data)=>{\n            if(data.status === \"success\" || data.status === 200){\n          swalWithBootstrapButtons.fire(\n            'Deleted!',\n            data.message,\n            'success'\n          )\n          this.holidayList();\n            }\n        })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'Your data is safe',\n            'error'\n          )\n        }\n      })\n    }\n    addHolidays(){\n      try{\n        this.util.holidaysStatus = 1;\n      }catch(err){\n        console.log(err)\n      }\n    }\n}","<div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Holidays List</h2>\n        <button [disabled]=\"permissionInfo.search('Create Holiday') === -1\"\n         class=\"btn btn-primary\" type=\"button\" routerLink=\"/pages/holiday/add-holiday\"\n            style=\"float: right;\" (click)=\"addHolidays()\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add Holiday</button\n            >\n    </div>\n    <table class=\"table\" style=\"text-align: center;\">\n        <thead class=\" text-primary\">\n            <tr>\n            <th> S.No </th>\n            <th> Title </th>\n            <th>Holiday Date</th>\n            <th> Type </th>\n            <th> Action </th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let list of leaveListData; let i = index\">\n            <tr >\n            <td><b>{{ i+1 }}.</b></td>\n            <td> {{ list.title }} </td>\n            <td > {{list.holidayDate |  date }}</td>\n            <td> {{ list.type }} </td>\n            <td>\n                <a [class.disabled]=\"permissionInfo.search('Edit Holiday') === -1\"\n                routerLink=\"/pages/holiday/update-holiday/{{list._id}}\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-pencil-square-o\"></i></a>&nbsp;\n                <button [disabled]=\"permissionInfo.search('Delete Holiday') === -1\"\n                class=\"btn btn-danger\" type=\"button\"(click)=\"showConfirmationMessage(list._id)\">\n                    <i class=\"fa fa-trash\"></i>\n                </button>\n            </td>\n            </tr>\n    </table>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { Holiday } from '../../../auth/holiday';\nimport { updateHoliday } from '../../../auth/updateHoliday';\nimport { environment } from '../../../../environments/environment';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HolidayApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n  /**Create method for manage errors when request and return response from the server*/\n  errorMgmt(error: HttpErrorResponse) {\n    try {\n      let errorMessage = '';\n      /** Handle client side error */\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      }\n      /** Handle server side error */\n      else {\n        errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  /**Create Method for Get Company Holiday  */\n  getHoliday(): Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/list-all-holidays/${companyId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Get Individual Holiday List\n  holidayDetails(holidayId:string): Observable<any> {\n    try {\n      \n      let apiURL = `${this.endpoint}/company/holiday-details/${holidayId}`;\n       return this.http.get(apiURL).pipe(\n         catchError(this.errorMgmt)\n      )\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for get data from company for Holiday */\n  addHoliday(data:Holiday): Observable<any> {\n    try{\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/add-holiday/${companyId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /** Method for Update Holiday type  */\n  updateHoliday(data:updateHoliday, holidayId:string,):Observable<any> {\n    try {\n      const companyId = sessionStorage.getItem(\"companyId\");\n      let apiURL = `${this.endpoint}/company/update-holiday/${companyId}/${holidayId}`;\n      return this.http.post(apiURL,data).pipe(\n        catchError(this.errorMgmt)\n      )\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  /**Method for delete (remove) Holiday type */\n  removeData(holidayId:String):Observable<any>{\n    try{\n      let apiURL = `${this.endpoint}/company/delete-holiday/${holidayId}`;\n      return this.http.delete(apiURL).pipe(\n        catchError(this.errorMgmt)\n      )   \n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-holiday',\n  templateUrl: './holiday.component.html',\n  styleUrls: ['./holiday.component.scss']\n})\nexport class HolidayComponent implements OnInit {\n\n  constructor(){\n\n  }\n  ngOnInit(){\n    \n  }\n \n\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HolidayRoutingModule } from './holiday-routing.module';\nimport { HolidayComponent } from './holiday.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListHolidayComponent } from './list-holiday/list-holiday.component';\nimport { AddHolidayComponent } from './add-holiday/add-holiday.component';\nimport { UpdateHolidayComponent } from './update-holiday/update-holiday.component';\n\n\n@NgModule({\n  declarations: [\n     HolidayComponent,\n     ListHolidayComponent,\n     AddHolidayComponent,\n     UpdateHolidayComponent\n    ],\n  \n  imports: [\n    CommonModule,\n    HolidayRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class HolidayModule { }\n"]}