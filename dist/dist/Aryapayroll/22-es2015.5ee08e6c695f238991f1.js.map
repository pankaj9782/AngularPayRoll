{"version":3,"sources":["webpack:///src/app/pages/leave-management/leave-management.component.ts","webpack:///src/app/pages/leave-management/leave-management.component.html","webpack:///src/app/pages/leave-management/manage-earned-leave/services/leave-services.service.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/add-earned-leave/add-earned-leave.component.html","webpack:///src/app/pages/leave-management/manage-earned-leave/add-earned-leave/add-earned-leave.component.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/list-earned-leave/list-earned-leave.component.html","webpack:///src/app/pages/leave-management/manage-earned-leave/list-earned-leave/list-earned-leave.component.ts","webpack:///src/app/pages/leave-management/manage-earned-leave/update-earned-leave/update-earned-leave.component.html","webpack:///src/app/pages/leave-management/manage-earned-leave/update-earned-leave/update-earned-leave.component.ts","webpack:///src/app/pages/leave-management/manage-leave-status/services.service.ts","webpack:///src/app/pages/leave-management/manage-leave-status/list-leave/list-leave.component.html","webpack:///src/app/pages/leave-management/manage-leave-status/list-leave/list-leave.component.ts","webpack:///src/app/pages/leave-management/manage-leave-status/mark-absent/mark-absent.component.html","webpack:///src/app/pages/leave-management/leave-management-routing.module.ts","webpack:///src/app/pages/leave-management/manage-leave-status/mark-absent/mark-absent.component.ts","webpack:///src/app/pages/leave-management/leave-management.module.ts"],"names":["LeaveManagementComponent","LeaveServicesService","http","endpoint","environment","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","message","status","console","log","throwError","err","data","employeeId","userId","localStorage","getItem","this","post","pipe","catchError","errorMgmt","year","month","companyId","sessionStorage","get","earnedLeaveId","leaveCount","delete","AddEarnedLeaveComponent","fb","employeeListAPI","api","router","util","earnedLeaveMonths","earnedLeavevalidationMessage","type","employeeList","manageEarnedLeaveForm","permissionInfo","permissionRoleInfo","search","addEarnedLeaveForm","disable","group","earnedLeave","required","compose","pattern","reason","getEmployeeList","subscribe","employeeDetails","value","addEarnedLeave","successMessage","errorMsg","successMsg","setTimeout","handleErrors","navigateByUrl","errMsg","addLeaveForm","ListEarnedLeaveComponent","earnedLeaveListAPI","earnedLeaveYearMsg","earnedLeaveDataMsg","showHistoryCards","leaveListEmployee","companyEmployeelist","currentDate","Date","getFullYear","toString","substring","listAllEarnedLeave","document","getElementById","getMonth","length","earnedLeaveList","i","_id","yearValue","result","match","earnedLeaveDetails","filterEarnedLeaveDetails","fetchHistory","earnedLeaveHistory","deductionLeaveHistory","deductLeave","filterFunctionality","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","allowOutsideClick","then","deleteEarnedLeave","dismiss","DismissReason","cancel","yearValidation","UpdateEarnedLeaveComponent","route","earnedLeaveUpdateAPI","snapshot","paramMap","leaveUpdateForm","updateLeaveFormDetails","existingEarnedLeaveDetails","existingUpdateDetails","updateEarnedLeaveForm","updateEarnedLeave","ServicesService","date","leaveId","ListLeaveComponent","leaveListAPI","leaveListMessage","listActions","showInfoCard","filterDate","returnCurrentDate","dateWiseAllLeaveList","companyEmployeeLeaveList","dateWiseLeaveList","padStart","getDate","leaveActionTaken","action","resetActionList","input","inputPlaceholder","inputAttributes","resetFilter","path","component","canActivate","children","MarkAbsentComponent","ngZone","formToLeaveFor","showCard","showTlOption","absentFieldValidationMessage","manangeEmployeeLeave","leaveList","addEmployeeAbsentForm","leaveTypeId","fromDate","toDate","fromLeaveFor","toLeaveFor","requestToUserId","StartDate","EndDate","eDate","sDate","alert","getListData","leaveListData","leaveTypes","len","Object","keys","employeeTlList","parentUsersIds","markEmployeeAbsent","run","getEmployeeTL","DateCheck","redirectTo","pathMatch","LeaveManagementRoutingModule","forChild","LeaveManagementModule"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leave-management',\n  templateUrl: './leave-management.component.html',\n  styleUrls: ['./leave-management.component.scss']\n})\nexport class LeaveManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { throwError, Observable } from 'rxjs';\nimport { AddEarnedLeave } from '../../../../auth/addEarnedLeave'\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaveServicesService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Add Earned Leave Balance\naddEarnedLeave(data: AddEarnedLeave,employeeId:String): Observable<any>{\n  try{\n    let userId = localStorage.getItem('token');\n    let apiURL = `${this.endpoint}/employee/add-earned-leave/${employeeId}/${userId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// All Earned Leave List\nlistAllEarnedLeave(year: String, month: String): Observable<any>{\n  try{\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/employee/list-all-eraned-leave/${companyId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Earned Leave Details\nfilterEarnedLeaveDetails(employeeId,year,month): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/earned-leave-details/${employeeId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Individual earned leave details for update earned leaves\nexistingEarnedLeaveDetails(earnedLeaveId,employeeId): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/earned-leave-details/${earnedLeaveId}/${employeeId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Submit Update Form Data\nupdateEarnedLeave(data: AddEarnedLeave, earnedLeaveId,employeeId): Observable<any>{\n  try{\n    let userId = localStorage.getItem('token');\n    let apiURL = `${this.endpoint}/employee/update-earned-leave/${earnedLeaveId}/${employeeId}/${userId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Earned leave history\nfetchHistory(employeeId,year,month): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/earned-leave-history/${employeeId}/${year}/${month}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Delete Earned Leave\ndeleteEarnedLeave(employeeId,year,month,leaveCount): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/delete-earned-leave/${employeeId}/${year}/${month}/${leaveCount}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch(err){\n    console.log(err);\n  }\n}\n\n}\n","<div class=\"card card-user\">\n    <!-- <ngx-spinner\n    bdColor=\"rgba(51,51,51,0.8)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"ball-scale-ripple-multiple\"\n    >\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n    </ngx-spinner> -->\n<div class=\"card-header\">\n    <h2 class=\"card-title\" style=\"text-align: center;\">Earned Leave Details</h2>\n</div>\n<div class=\"card-body\">\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n        </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n        </p>\n    </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addEarnedLeaveForm\" (ngSubmit)=\"addLeaveForm()\" novalidate>\n        <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Employee Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"employeeId\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Employee----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of employeeDetails\" value=\"{{employee._id}}\">\n                           {{employee.name}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.employeeId\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('employeeId').hasError(validation.type) && (addEarnedLeaveForm.get('employeeId').dirty || addEarnedLeaveForm.get('employeeId').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" [formGroup]=\"addEarnedLeaveForm.get('earnedLeave')\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Month:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"month\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Month----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let month of earnedLeaveMonths\" value=\"{{month}}\">\n                           {{month}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.month\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('earnedLeave.month').hasError(validation.type) && (addEarnedLeaveForm.get('earnedLeave.month').dirty || addEarnedLeaveForm.get('earnedLeave.month').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Year:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"text\" id=\"inputPhone\" placeholder=\"Enter Year\"\n                    formControlName=\"year\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.year\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('earnedLeave.year').hasError(validation.type) && (addEarnedLeaveForm.get('earnedLeave.year').dirty || addEarnedLeaveForm.get('earnedLeave.year').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Earned Balance:&nbsp;(in days)&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Earned Leave balance \"\n                    formControlName=\"leaveCount\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.leaveCount\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEarnedLeaveForm.get('earnedLeave.leaveCount').hasError(validation.type) && (addEarnedLeaveForm.get('earnedLeave.leaveCount').dirty || addEarnedLeaveForm.get('earnedLeave.leaveCount').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Reason:</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Reason\"\n                        formControlName=\"reason\">\n                </div>\n        </div>\n\n    </div>\n        <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addEarnedLeaveForm.invalid || permissionInfo.search('Create EarnedLeave') === -1\">Submit</button>\n                <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-earned-leave\">Cancel</button>\n\n            </div>\n        </div>\n    </form>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { LeaveServicesService } from '../services/leave-services.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-earned-leave',\n  templateUrl: './add-earned-leave.component.html',\n  styleUrls: ['./add-earned-leave.component.scss']\n})\nexport class AddEarnedLeaveComponent implements OnInit {\n  addEarnedLeaveForm: any;\n  earnedLeaveMonths = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  employeeDetails: any;\n  errorMsg: boolean;\n  successMessage: boolean;\n  errMsg: string;\n  successMsg: string;\n  status = \"Active\";\n  permissionInfo: any;\n\n  constructor(private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private api: LeaveServicesService,\n    private router: Router,\n    private util: UtilitiesService) { }\n\n  ngOnInit() {\n    this.employeeList();\n    this.manageEarnedLeaveForm();\n    this.permissionInfo = this.util.permissionRoleInfo;\n      if(this.permissionInfo.search('Create EarnedLeave') === -1){\n        this.addEarnedLeaveForm.disable();\n      }\n  }\n\n  manageEarnedLeaveForm(){\n    try{\n      this.addEarnedLeaveForm = this.fb.group({\n        earnedLeave: new FormGroup({\n          month: new FormControl('',Validators.required),\n          year: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/^(19|20)\\d{2}$/)])),\n          leaveCount: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)\n          ])),\n          reason: new FormControl('')\n        }),\n        employeeId: new FormControl('', Validators.required)\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\nearnedLeavevalidationMessage = {\n  'month':[\n    {type:'required', message:'Month is Required'}\n  ],\n  'year':[\n    {type:'required', message:'Year is Required'},\n    {type:'pattern', message:'Value is not acceptable'}\n  ],\n  'leaveCount':[\n    {type:'required', message:'Earned Balance is Required'},\n    {type:'pattern', message:'Value is not acceptable'}\n  ],\n  'employeeId':[\n    {type:'required', message:'Employee Name is Required'}\n  ]\n}\n\n// Get Employee List\nemployeeList(){\n  try{\n    this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeDetails = data.data;\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Submit Earned Leave Form\n\naddLeaveForm(){\n  try{\n    console.log(this.addEarnedLeaveForm.get('employeeId').value);\n    this.api.addEarnedLeave(this.addEarnedLeaveForm.value,this.addEarnedLeaveForm.get('employeeId').value).subscribe((data)=> {\n      if(data.status === 'success'){\n        this.successMessage = true ;\n        this.errorMsg = false ;\n        this.successMsg = data.message;\n        setTimeout(()=> {\n          this.handleErrors();\n          this.router.navigateByUrl(\"/pages/leave-management/list-earned-leave\");\n        },2000)\n      } else {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrors();\n        }, 3000);\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\nhandleErrors(){\n  this.errorMsg = false;\n  this.successMessage = false;\n  this.errMsg = '';\n  this.successMsg = '';\n}\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 style=\"text-align: center;\">Earned Leave List</h2>\n    </div>\n    <div class=\"card-body\">\n\n\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-4 control-label\"><b>Active Employees:</b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"earendLeaveEmployee\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee\n                        </option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of companyEmployeelist\"\n                            value=\"{{employee._id}}\">\n                            {{employee.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Year:</b></label>\n                    <input class=\"form-control\" type=\"text\" id=\"earnedLeaveYear\" (input)=\"yearValidation()\"\n                        placeholder=\"Enter Year\">\n                    <div>\n                        <p style=\"color:red;\">{{earnedLeaveYearMsg}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Month:&nbsp;<span\n                                style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"earnedLeaveMonth\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Month\n                        </option>\n                        <option class=\"dropdown-item\" *ngFor=\"let month of earnedLeaveMonths\" value=\"{{month}}\">\n                            {{month}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary\" [disabled]=\"earnedLeaveYearMsg\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp; Filter</button>\n                </div>\n            </div>\n        </div>\n\n            <div class=\"col-lg-12\">\n                <div class=\"form-group\" style=\"float: right;\">\n                        <button [disabled]=\"permissionInfo.search('Create EarnedLeave') === -1\" class=\"btn btn-primary\" routerLink=\"/pages/leave-management/add-earned-leave\"><i class=\"fa fa-plus-square\"></i>&nbsp; Add  Earned Leave</button>\n                </div>\n            </div>\n\n\n        \n    </div>\n    <div class=\"card-body\">\n        <div class=\"card\" style=\"background-color:whitesmoke;\">\n            <div class=\"panel-body\">\n                <ul class=\"list-group\">\n                    <div class=\"card-body\">\n                        <table class=\"table\" style=\"text-align: center;\">\n                            <thead class=\" text-primary\">\n                                <tr>\n                                    <th>Employee Name </th>\n                                    <th>Month </th>\n                                    <th>Year</th>\n                                    <th>Earned Balance</th>\n                                    <th>Reason</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody *ngFor=\"let earnedLeave of earnedLeaveList\">\n                                <tr>\n                                    <td> {{earnedLeave.name}} </td>\n                                    <td> {{earnedLeave.month}} </td>\n                                    <td> {{earnedLeave.year}} </td>\n                                    <td> {{earnedLeave.leaveCount}}</td>\n                                    <td> {{earnedLeave.reason}}</td>\n                                    <td>\n                                        <button [disabled]=\"permissionInfo.search('Edit EarnedLeave') === -1\"\n                                            itle=\"Update\"\n                                            routerLink=\"/pages/leave-management/update-earned-leave/{{ earnedLeave.earnedLeaveId }}/{{ earnedLeave._id }}\"\n                                            class=\"btn btn-primary\" style=\"color: white;\"><i\n                                                class=\"fa fa-pencil-square-o\"></i>\n                                        </button>&nbsp;\n                                        <button title=\"History\" (click)='fetchHistory(earnedLeave._id)'\n                                            class=\"btn btn-info\" style=\"color: white;\"><i class=\"fa fa-history\"></i>\n                                        </button>&nbsp;\n                                        <button class=\"btn btn-danger\"\n                                            (click)=\"deleteEarnedLeave(earnedLeave._id,earnedLeave.year,earnedLeave.month,earnedLeave.leaveCount)\"><i\n                                                class=\"fa fa-trash\"></i></button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <div class=\"card\" style=\"background-color:rgb(178, 218, 208);\"\n                                            [hidden]=\"showHistoryCards[earnedLeave._id]\">\n                                            <h4 style=\"text-align: center;\">Earned Leave History</h4>\n                                            <table class=\"table\" *ngFor='let earnedLeaveHistroy of earnedLeaveHistory'>\n                                                <tr>\n                                                    <th>Reason:</th>\n                                                    <td>{{ earnedLeaveHistroy.reason }}</td>\n                                                    <th>Earned Leave Balance:</th>\n                                                    <td>{{ earnedLeaveHistroy.leaveCount }}</td>\n                                                </tr>\n                                                <tr>\n                                                    <th>Earned Date:</th>\n                                                    <td>{{ earnedLeaveHistroy.metaData.createdAt | date:'fullDate' }}\n                                                        {{ earnedLeaveHistroy.metaData.createdAt | date:'shortTime' }}\n                                                    </td>\n                                                    <th></th>\n                                                    <td></td>\n                                                </tr>\n                                            </table>\n                                            <h4 style=\"text-align: center;\">Earned Leave Deduction History</h4>\n                                            <table class=\"table\"\n                                                *ngFor='let deductionLeaveHistory of deductionLeaveHistory'>\n                                                <tr>\n                                                    <th>Reason:</th>\n                                                    <td>{{ deductionLeaveHistory.reason }}</td>\n                                                    <th>Earned Leave Balance:</th>\n                                                    <td>{{ deductionLeaveHistory.leaveCount }}</td>\n                                                </tr>\n                                                <tr>\n                                                    <th>Deducted Date:</th>\n                                                    <td>{{ deductionLeaveHistory.metaData.createdAt | date:'fullDate' }}\n                                                        {{ deductionLeaveHistory.metaData.createdAt | date:'shortTime' }}\n                                                    </td>\n                                                    <th></th>\n                                                    <td></td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"earnedLeaveDataMsg.length != 0\">\n        <h3 style=\"text-align: center;\">{{ earnedLeaveDataMsg }}</h3>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LeaveServicesService } from '../services/leave-services.service';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport Swal from 'sweetalert2';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-list-earned-leave',\n  templateUrl: './list-earned-leave.component.html',\n  styleUrls: ['./list-earned-leave.component.scss']\n})\nexport class ListEarnedLeaveComponent implements OnInit {\n  earnedLeaveList: any;\n  companyEmployeelist: any;\n  earnedLeaveMonths = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  earnedLeaveYearMsg = '';\n  earnedLeaveDataMsg = '';\n  showHistoryCards = {};\n  showCardEmployeeId: any;\n  earnedLeaveHistory: any;\n  deductionLeaveHistory: any;\n  historyData: any;\n  status = \"Active\";\n  permissionInfo: any;\n\n  constructor(private earnedLeaveListAPI : LeaveServicesService,\n    private employeeListAPI: EmployeeService,\n    private util: UtilitiesService\n    ) { }\n\n  ngOnInit() {\n    this.employeeList();\n    this.leaveListEmployee();\n    this.permissionInfo = this.util.permissionRoleInfo\n  }\n\n  // Employee List\n  employeeList(){\n    try{\n      this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=> {\n        if(data.status === 'success'){\n          this.companyEmployeelist = data.data;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // List All Earned Leave\n  leaveListEmployee(){\n    try{\n      let currentDate = new Date();\n      let year = currentDate.getFullYear().toString();\n      let month = currentDate.toString().substring(4,8);\n      this.earnedLeaveListAPI.listAllEarnedLeave(year,month).subscribe((data)=> {\n        if(data.status === 'success'){\n          (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n          (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n          if(data.data.length > 0){\n            this.earnedLeaveList = data.data;\n            this.earnedLeaveDataMsg = '';\n            for(let i =0; i<this.earnedLeaveList.length; i++){\n              this.showHistoryCards[this.earnedLeaveList[i]._id] = true;\n            }\n\n          } else if(data.data.length === 0){\n            this.earnedLeaveList = [];\n            this.earnedLeaveDataMsg = 'No Data Found';\n          }\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n// Year Validation\nyearValidation(){\n  try{\n    let yearValue = (document.getElementById('earnedLeaveYear') as HTMLInputElement).value;\n    let yearRegularExpression = /^(19|20)\\d{2}$/;\n    let result = yearValue.match(yearRegularExpression);\n    if(yearValue.length === 0 && result === null){\n      this.earnedLeaveYearMsg = '';\n    } else if(result === null){\n      this.earnedLeaveYearMsg = \"Year Value is not acceptable\";\n    } else {\n      this.earnedLeaveYearMsg = '';\n    }\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Functionality\nfilterFunctionality(){\n  try{\n    let currentDate = new Date();\n    let year = (document.getElementById('earnedLeaveYear') as HTMLInputElement).value;\n    let month = (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value;\n    let employeeId = (document.getElementById('earendLeaveEmployee') as HTMLInputElement).value;\n\n    if(year.length === 0 && month.length === 0 && employeeId.length === 0 ){\n      // Do Nothing\n    } else if(year.length !== 0  && employeeId.length === 0 || month.length !== 0 && employeeId.length === 0){\n      if(year.length === 0){\n        year = currentDate.getFullYear().toString();\n        (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n      } else if (month.length === 0 ){\n        month = currentDate.toString().substring(4,8);\n        (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n      }\n\n      this.earnedLeaveDetails(year,month);\n\n    } else if(year.length === 0 && employeeId.length !== 0 || month.length === 0 && employeeId.length !== 0){\n      if(year.length === 0){\n        year = currentDate.getFullYear().toString();\n        (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n      } else if(month.length === 0){\n        month = currentDate.toString().substring(4,8);\n        (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n      }\n      this.filterEarnedLeaveDetails(employeeId,year,month);\n    } else {\n      this.filterEarnedLeaveDetails(employeeId,year,month);\n    }\n\n  }catch(err){\n    console.log(err);\n  }\n\n}\n\n// Call Earned Leave List API\nearnedLeaveDetails(year,month){\n  try{\n    this.earnedLeaveListAPI.listAllEarnedLeave(year,month).subscribe((data)=> {\n      if(data.status === 'success'){\n        if(data.data.length > 0){\n          this.earnedLeaveList = data.data;\n          this.earnedLeaveDataMsg = '';\n        } else if(data.data.length === 0){\n          this.earnedLeaveList = [];\n          this.earnedLeaveDataMsg = 'No Data Found';\n        }\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Earnecd Leave according to employee Id\n\nfilterEarnedLeaveDetails(employeeId,year,month){\n  try{\n    this.earnedLeaveListAPI.filterEarnedLeaveDetails(employeeId,year,month).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.length === 0 ){\n          this.earnedLeaveList = [];\n          this.earnedLeaveDataMsg = 'No Data Found';\n        } else if(data.data.length > 0){\n          this.earnedLeaveList = data.data;\n          this.earnedLeaveDataMsg = '';\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Earned Leave History\nfetchHistory(employeeId){\n  try{\n\n    let year = (document.getElementById('earnedLeaveYear') as HTMLInputElement).value;\n    let month = (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value;\n\n    this.earnedLeaveListAPI.fetchHistory(employeeId,year,month).subscribe((data)=>{\n          if(data.status === 'success'){\n            this.earnedLeaveHistory = data.data.earnedLeave;\n            this.deductionLeaveHistory = data.data.deductLeave;\n          }\n        })\n\n    this.showHistoryCards[`${employeeId}`] = !this.showHistoryCards[`${employeeId}`];\n\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Reset The Filter\nresetFunctionality(){\n  try{\n    let currentDate = new Date();\n    let year = currentDate.getFullYear().toString();\n    (document.getElementById('earnedLeaveYear') as HTMLInputElement).value = year;\n    (document.getElementById('earnedLeaveMonth') as HTMLInputElement).value = this.earnedLeaveMonths[currentDate.getMonth()];\n    (document.getElementById('earendLeaveEmployee') as HTMLInputElement).value = '';\n    this.filterFunctionality();\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Delete Earned Leave\ndeleteEarnedLeave(employeeId,year,month,leaveCount){\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: 'btn btn-success',\n      cancelButton: 'btn btn-danger'\n    },\n    buttonsStyling: false\n  })\n\n  swalWithBootstrapButtons.fire({\n    title: 'Are you sure?',\n    text: \"You want to delete it\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Yes',\n    cancelButtonText: 'No',\n    reverseButtons: true,\n    allowOutsideClick: false,\n  }).then((result) => {\n    if (result.value) {\n      this.earnedLeaveListAPI.deleteEarnedLeave(employeeId,year,month,leaveCount).subscribe((data)=>{\n        if(data.status === \"success\"){\n      swalWithBootstrapButtons.fire(\n        'Deleted!',\n        data.message,\n        'success'\n      )\n      this.filterFunctionality();\n        }\n    })\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      swalWithBootstrapButtons.fire(\n        'Cancelled',\n        'Your earned leave data is safe',\n        'error'\n      )\n    }\n  })\n}\n\n}\n","<div class=\"card card-user\">\n    <!-- <ngx-spinner\n    bdColor=\"rgba(51,51,51,0.8)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"ball-scale-ripple-multiple\"\n    >\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n    </ngx-spinner> -->\n<div class=\"card-header\">\n    <h2 class=\"card-title\" style=\"text-align: center;\">Update Earned Leave</h2>\n</div>\n<div class=\"card-body\">\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n        </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n        </p>\n    </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"updateEarnedLeaveForm\" (ngSubmit)=\"updateEarnedLeave()\" novalidate>\n        <div class=\"form-group\">\n            <label class=\"col-sm-6 control-label\"><b>Employee Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"employeeId\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Employee----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of employeeDetails\" value=\"{{employee._id}}\">\n                           {{employee.name}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.employeeId\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('employeeId').hasError(validation.type) && (updateEarnedLeaveForm.get('employeeId').dirty || updateEarnedLeaveForm.get('employeeId').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" [formGroup]=\"updateEarnedLeaveForm.get('earnedLeave')\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Month:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"month\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>----------Select Month----------</option>\n                        <option class=\"dropdown-item\" *ngFor=\"let month of earnedLeaveMonths\" value=\"{{month}}\">\n                           {{month}}\n                        </option>\n                     </select>\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.month\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('earnedLeave.month').hasError(validation.type) && (updateEarnedLeaveForm.get('earnedLeave.month').dirty || updateEarnedLeaveForm.get('earnedLeave.month').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Year:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"text\" id=\"inputPhone\" placeholder=\"Enter Year\"\n                    formControlName=\"year\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.year\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('earnedLeave.year').hasError(validation.type) && (updateEarnedLeaveForm.get('earnedLeave.year').dirty || updateEarnedLeaveForm.get('earnedLeave.year').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Earned Balance:&nbsp;(in days)&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Earned Leave balance \"\n                    formControlName=\"leaveCount\">\n                <div *ngFor=\"let validation of earnedLeavevalidationMessage.leaveCount\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"updateEarnedLeaveForm.get('earnedLeave.leaveCount').hasError(validation.type) && (updateEarnedLeaveForm.get('earnedLeave.leaveCount').dirty || updateEarnedLeaveForm.get('earnedLeave.leaveCount').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Reason:</b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"email\" id=\"inputEmail\" placeholder=\"Enter Reason\"\n                        formControlName=\"reason\">\n                </div>\n        </div>\n\n    </div>\n        <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateEarnedLeaveForm.invalid\">Submit</button>\n                <button type=\"button\" class=\"btn btn-danger\" routerLink=\"/pages/leave-management/list-earned-leave\">Cancel</button>\n            </div>\n        </div>\n    </form>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LeaveServicesService } from '../services/leave-services.service';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\n\n@Component({\n  selector: 'app-update-earned-leave',\n  templateUrl: './update-earned-leave.component.html',\n  styleUrls: ['./update-earned-leave.component.scss']\n})\nexport class UpdateEarnedLeaveComponent implements OnInit {\nearnedLeaveId : any;\nemployeeId: any;\nupdateEarnedLeaveForm: any;\nemployeeDetails: any;\nexistingUpdateDetails: any;\nearnedLeaveMonths = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\nerrorMsg: boolean;\nsuccessMessage: boolean;\nerrMsg: string;\nsuccessMsg: string;\nstatus = \"Active\";\n\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private util: UtilitiesService,\n    private earnedLeaveUpdateAPI: LeaveServicesService\n    ) { }\n\n  ngOnInit() {\n    this.earnedLeaveId = this.route.snapshot.paramMap.get(\"earnedLeaveId\");\n    this.employeeId = this.route.snapshot.paramMap.get('employeeId');\n    this.employeeList();\n    this.leaveUpdateForm();\n    this.updateLeaveFormDetails();\n  }\n\n  // Get Employee List\nemployeeList(){\n  try{\n    this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeDetails = data.data;\n      }\n    })\n  } catch(err){\n    console.log(err);\n  }\n}\n\n  // Existing Earned Leave Details\n  updateLeaveFormDetails(){\n    try{\n     // Get Existing Earned Leave Data\n      this.earnedLeaveUpdateAPI.existingEarnedLeaveDetails(this.earnedLeaveId,this.employeeId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.existingUpdateDetails = data.data;\n\n          // Fill Update Form With existing Values\n          this.updateEarnedLeaveForm = this.fb.group({\n            earnedLeave: new FormGroup({\n              month: new FormControl(this.existingUpdateDetails.month,Validators.required),\n              year: new FormControl(this.existingUpdateDetails.year,Validators.compose([\n                Validators.required,\n                Validators.pattern(/^(19|20)\\d{2}$/)])),\n              leaveCount: new FormControl(this.existingUpdateDetails.leaveCount,Validators.compose([\n                Validators.required,\n                Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)\n              ])),\n              reason: new FormControl(this.existingUpdateDetails.reason)\n            }),\n            employeeId: new FormControl(this.existingUpdateDetails._id, Validators.required)\n          })\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // Update Leave Form\n  leaveUpdateForm(){\n    try{\n      this.updateEarnedLeaveForm = this.fb.group({\n        earnedLeave: new FormGroup({\n          month: new FormControl('',Validators.required),\n          year: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/^(19|20)\\d{2}$/)])),\n          leaveCount: new FormControl('',Validators.compose([\n            Validators.required,\n            Validators.pattern(/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/i)\n          ])),\n          reason: new FormControl('')\n        }),\n        employeeId: new FormControl('', Validators.required)\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  // Validation Messages\n  earnedLeavevalidationMessage = {\n    'month':[\n      {type:'required', message:'Month is Required'}\n    ],\n    'year':[\n      {type:'required', message:'Year is Required'},\n      {type:'pattern', message:'Value is not acceptable'}\n    ],\n    'leaveCount':[\n      {type:'required', message:'Earned Balance is Required'},\n      {type:'pattern', message:'Value is not acceptable'}\n    ],\n    'employeeId':[\n      {type:'required', message:'Employee Name is Required'}\n    ]\n  }\n\n\n// Submit Update Data\n  updateEarnedLeave(){\n    try{\n      this.earnedLeaveUpdateAPI.updateEarnedLeave(this.updateEarnedLeaveForm.value,this.earnedLeaveId,this.employeeId).subscribe((data)=>{\n        if(data.status === 'success'){\n          this.successMessage = true ;\n        this.errorMsg = false ;\n        this.successMsg = data.message;\n        setTimeout(()=> {\n          this.handleErrors();\n          this.router.navigateByUrl(\"/pages/leave-management/list-earned-leave\");\n        },2000)\n      } else {\n        this.errorMsg = true;\n        this.successMessage = false;\n        this.errMsg = data.message;\n        setTimeout(()=>{\n          this.handleErrors();\n        }, 3000);\n        }\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  handleErrors(){\n    this.errorMsg = false;\n    this.successMessage = false;\n    this.errMsg = '';\n    this.successMsg = '';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LeaveAction } from 'src/app/auth/leaveAction';\nimport { dataUri } from '@rxweb/reactive-form-validators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n /** Here we provide daynamic environment value from environment */\n endpoint: string = environment.apiBaseUrl;\n headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n try {\n   let errorMessage = '';\n   /** Handle client side error */\n   if (error.error instanceof ErrorEvent) {\n     errorMessage = error.error.message;\n   }\n   /** Handle server side error */\n   else {\n     errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n   }\n   console.log(errorMessage);\n   return throwError(errorMessage);\n }\n catch (err) {\n   console.log(err.message);\n }\n}\n\n// List All Employees Leave in an individual Company\n\ndateWiseAllLeaveList(date): Observable<any>{\n  try{\n    let companyId = sessionStorage.getItem('companyId');\n    let apiURL = `${this.endpoint}/all-employee/particular-date-leaves/${companyId}/${date}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Leave Action\nleaveActionTaken(data: LeaveAction,userId,leaveId): Observable<any>{\n  try {\n    let apiURL = `${this.endpoint}/user/activity-leave/${userId}/${leaveId}`;\n    return this.http.post(apiURL, data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n  catch (err) {\n    console.log(err);\n  }\n}\n\n// Get Individaul Employee Leave List\ndateWiseLeaveList(userId,date): Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/particular-date-leaves/${userId}/${date}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  } catch(err){\n    console.log(err);\n  }\n}\n\n}","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2 class=\"text-center\">Employee Leave List</h2>\n    </div>\n    <div class=\"card-body\">\n\n\n        <div class=\"form-row\">\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-4 control-label\"><b>Employee Name:</b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"leaveListEmployee\">\n                        <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee\n                        </option>\n                        <option class=\"dropdown-item\" *ngFor=\"let employee of companyEmployeelist\"\n                            value=\"{{employee._id}}\">\n                            {{employee.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-6 control-label\"><b>Date:</b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"date\" id=\"leaveListDate\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary\" (click)=\"filterFunctionality()\"><i class=\"fa fa-filter\"></i>&nbsp;\n                        Filter</button>\n                        <button class=\"btn btn-danger\" (click)=\"resetFilter()\"><i class=\"fas fa-trash-restore\"></i>&nbsp;\n                            Reset</button>\n                </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-3 col-sm-3\">\n                <div class=\"form-group right-buttongroup\">\n                    <button class=\"btn btn-primary\" routerLink=\"/pages/leave-management/mark-absent\"><i\n                        class=\"fa fa-plus-square\"></i>&nbsp; Mark Employee Absent</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"card-body\">\n        <div class=\"card\" style=\"background-color:whitesmoke;\">\n            <div class=\"panel-body\">\n                <ul class=\"list-group\">\n                    <div class=\"card-body\">\n                        <table class=\"table\" style=\"text-align: center;\">\n                            <thead class=\" text-primary\">\n                                <tr>\n                                    <th>Employee Name </th>\n                                    <th>Reason </th>\n                                    <th>Type</th>\n                                    <th>Status</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody *ngFor=\"let leaveList of companyEmployeeLeaveList\">\n                                <tr>\n                                    <td> {{leaveList.userName}} </td>\n                                    <td> {{leaveList.reason}} </td>\n                                    <td> {{leaveList.leaveTypeName}} </td>\n                                    <td> {{leaveList.status}}</td>\n                                    <td>\n                                        <button title=\"Info\" class=\"btn btn-primary\" (click)='leaveInfo(leaveList._id)'\n                                            style=\"color: white;\"><i class=\"fas fa-binoculars\"></i>\n                                        </button>&nbsp;\n                                        <select class=\"dropdown dropdown-toggle form-control\" id=\"actionList\"\n                                            (change)=\"actionTaken($event.target.value,leaveList.requestToUserId,leaveList._id)\">\n                                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>\n                                                Choose Action</option>\n                                            <option class=\"dropdown-item\" *ngFor=\"let action of listActions\"\n                                                value=\"{{action}}\">\n                                                {{action}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <table class=\"table card\"\n                                            style=\"text-align: left;background-color:rgb(178, 218, 208);\"\n                                            [hidden]=\"showInfoCard[leaveList._id]\">\n                                            <tr>\n                                                <th>Request To TL/Manager:</th>\n                                                <td>{{ leaveList.requestToName }}</td>\n                                                <th>Applied Date:</th>\n                                                <td>{{ leaveList.metaData.createdAt | date:'fullDate' }}\n                                                    {{ leaveList.metaData.createdAt | date:'shortTime' }}</td>\n                                            </tr>\n                                            <tr>\n                                                <th>From Date:</th>\n                                                <td>{{ leaveList.fromDate | date:'fullDate' }}\n                                                    {{ leaveList.fromDate | date:'shortTime' }}</td>\n                                                <th>From Leave For</th>\n                                                <td>{{ leaveList.fromLeaveFor }}</td>\n                                            </tr>\n                                            <tr>\n                                                <th>To Date:</th>\n                                                <td>{{ leaveList.toDate | date:'fullDate' }}\n                                                    {{ leaveList.toDate | date:'shortTime' }}</td>\n                                                <th>To Leave For</th>\n                                                <td>{{ leaveList.toLeaveFor }}</td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n                    </div>\n                </ul>\n            </div>\n\n        </div>\n    </div>\n    <div *ngIf=\"leaveListMessage.length != 0\">\n        <h3 style=\"text-align: center;\">{{ leaveListMessage }}</h3>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { ServicesService } from '../services.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-leave',\n  templateUrl: './list-leave.component.html',\n  styleUrls: ['./list-leave.component.scss']\n})\nexport class ListLeaveComponent implements OnInit {\n  companyEmployeelist: any;\n  filterDate: any;\n  companyEmployeeLeaveList: any;\n  leaveListMessage = '';\n  listActions = ['Approve','Reject','Sandwich'];\n  showInfoCard = {};\n  showCardLeaveId: any;\n  status = \"Active\";\n\n  constructor(private employeeListAPI: EmployeeService,\n    private leaveListAPI: ServicesService) {\n\n    }\n\n  ngOnInit() {\n    this.employeeList();\n    this.filterDate = this.returnCurrentDate();\n    (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.filterDate;\n    this.dateWiseAllLeaveList();\n  }\n\n  // Employee List\n  employeeList(){\n    try{\n      this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=> {\n        if(data.status === 'success'){\n          this.companyEmployeelist = data.data;\n        }\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n\n// All Employee Leave List\ndateWiseAllLeaveList(){\n  try{\n    this.leaveListAPI.dateWiseAllLeaveList(this.filterDate).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.length === 0){\n          this.leaveListMessage = 'No Data Found';\n          this.companyEmployeeLeaveList = [];\n        } else {\n          this.companyEmployeeLeaveList = data.data;\n          this.showInfoCard = {};\n          for(let i = 0; i < this.companyEmployeeLeaveList.length; i++){\n            this.showInfoCard[this.companyEmployeeLeaveList[i]._id] = true;\n          }\n          this.leaveListMessage = '';\n        }\n      }\n    })\n  } catch(err){\n    console.log(err)\n  }\n}\n\n// Get Individual Employee Leave List\ndateWiseLeaveList(userId,date){\n  try{\n    this.leaveListAPI.dateWiseLeaveList(userId,date).subscribe((data)=>{\n      if(data.status === 'success'){\n        if(data.data.length === 0 ){\n          this.leaveListMessage = 'No Data Found';\n          this.companyEmployeeLeaveList = [];\n        } else {\n          this.companyEmployeeLeaveList = data.data;\n          this.showInfoCard = {};\n          for(let i = 0; i < this.companyEmployeeLeaveList.length; i++){\n            this.showInfoCard[this.companyEmployeeLeaveList[i]._id] = true;\n          }\n          this.leaveListMessage = '';\n        }\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Filter Functionality Method\nfilterFunctionality(){\n  try{\n    if((document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value === ''){\n      if((document.getElementById(\"leaveListDate\") as HTMLInputElement).value === ''){\n        (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.returnCurrentDate();\n        this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value;\n        this.dateWiseAllLeaveList();\n      }\n      this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value;\n      this.dateWiseAllLeaveList();\n    } else {\n      if((document.getElementById(\"leaveListDate\") as HTMLInputElement).value === ''){\n        let userId = (document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value;\n        (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.returnCurrentDate();\n        this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value;\n        this.dateWiseLeaveList(userId,this.filterDate);\n      }\n      let userId = (document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value;\n      this.filterDate = (document.getElementById(\"leaveListDate\") as HTMLInputElement).value\n      this.dateWiseLeaveList(userId,this.filterDate);\n    }\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Reset Button Functionality\nresetFilter(){\n  try{\n    this.filterDate = this.returnCurrentDate();\n    (document.getElementById(\"leaveListDate\") as HTMLInputElement).value = this.filterDate;\n    (document.getElementById(\"leaveListEmployee\") as HTMLInputElement).value = '';\n    this.dateWiseAllLeaveList();\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Reset Action List\nresetActionList(){\n  (document.getElementById(\"actionList\")as HTMLInputElement).value = '';\n}\n\n// Return Current Date\nreturnCurrentDate(){\n  try{\n    let date = new Date();\n    return(`${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2,\"0\")}-${(date.getDate()).toString().padStart(2,\"0\")}`);\n  } catch(err){\n    console.log(err);\n  }\n}\n\n// Action taken by user\n  async actionTaken(value,userId,leaveId){\n  try {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: `You want to change leave status to ${value}`,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      reverseButtons: true\n    }).then(async (result) => {\n      if (result.value) {\n        if(value !== 'Reject'){\n          var requestDataAlter = {\n            action: value,\n            reason: ''\n          }\n          this.leaveListAPI.leaveActionTaken(requestDataAlter,userId,leaveId).subscribe((data)=>{\n            if(data.status === 'success'){\n              this.filterFunctionality();\n              swalWithBootstrapButtons.fire(\n                'Done',\n                data.message,\n                'success'\n              )\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                data.message\n              )\n            }\n            this.resetActionList();\n          })\n        } else {\n          const { value: text } = await Swal.fire({\n          input: 'textarea',\n          inputPlaceholder: 'Type your reason here...',\n          inputAttributes: {\n            'aria-label': 'Type your reason here'\n          },\n          showCancelButton: false\n        })\n        if(!text){\n          Swal.fire('There is no reason given by you')\n        }\n        if (text) {\n          var requestData = {\n            action: value,\n            reason: text\n          }\n          this.leaveListAPI.leaveActionTaken(requestData,userId,leaveId).subscribe((data)=>{\n            if(data.status === 'success'){\n              this.filterFunctionality();\n              swalWithBootstrapButtons.fire(\n                'Done',\n                data.message,\n                'success'\n              )\n            } else if(data.status === 'error'){\n              swalWithBootstrapButtons.fire(\n                'Error',\n                data.message,\n                'error'\n              )\n            }\n            this.resetActionList();\n          })\n        }\n        }\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        this.resetActionList();\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          \"You didn't take any action\",\n          'error'\n        )\n      }\n    })\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Manage Leave Info\nleaveInfo(leaveId){\n  try{\n    this.showInfoCard[`${leaveId}`] = !this.showInfoCard[`${leaveId}`];\n  }catch(err){\n    console.log(err);\n  }\n}\n\n}\n\n\n","<div class=\"card card-user\">\n    <!-- <ngx-spinner\n    bdColor=\"rgba(51,51,51,0.8)\"\n    size=\"medium\"\n    color=\"#fff\"\n    type=\"ball-scale-ripple-multiple\"\n    >\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\n    </ngx-spinner> -->\n<div class=\"card-header\">\n    <h2 class=\"card-title\" style=\"text-align: center;\">Employee Absent Details</h2>\n</div>\n<div class=\"card-body\">\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{ errMsg }}</strong>\n        </p>\n    </div>\n    <div class=\"col-sm-offset-2\">\n        <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{ successMsg }}</strong>\n        </p>\n    </div>\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"addEmployeeAbsentForm\" (ngSubmit)=\"markEmployeeAbsent()\" novalidate >\n     <div class=\"row\" >\n            <div class=\"form-group col-md-6\">\n                    <label class=\"col-sm-6 control-label\"><b>Employee Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"absentLeave\" formControlName=\"userId\" (change)=\"getEmployeeTL($event.target.value)\">\n                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee</option>\n                            <option class=\"dropdown-item\" *ngFor=\"let employee of employeeList\"  value=\"{{employee._id}}\">\n                               {{employee.name}}\n                            </option>\n                         </select>\n                         <div *ngFor=\"let validation of absentFieldValidationMessage.userId\">\n                                <div style=\"color: red;margin-left: 1%;\"\n                                    *ngIf=\"addEmployeeAbsentForm.get('userId').hasError(validation.type) && (addEmployeeAbsentForm.get('userId').dirty || addEmployeeAbsentForm.get('userId').touched)\"\n                                    style=\"color: red;margin-left: 1%;\">\n                                    {{ validation.message }}\n                                </div>\n                            </div>\n                </div>\n                <div class=\"form-group col-md-6\" *ngIf=\"showTlOption\">\n                        <label class=\"col-sm-6 control-label\"><b>TL/Manager Name:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                        <select class=\"dropdown dropdown-toggle form-control\" id=\"absentLeave\" formControlName=\"requestToUserId\">\n                                <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Select Employee</option>\n                                <option class=\"dropdown-item\" *ngFor=\"let employeeTL of employeeTlList\"  value=\"{{employeeTL._id}}\">\n                                   {{employeeTL.displayName}}\n                                </option>\n                             </select>\n                             <div *ngFor=\"let validation of absentFieldValidationMessage.requestToUserId\">\n                                    <div style=\"color: red;margin-left: 1%;\"\n                                        *ngIf=\"addEmployeeAbsentForm.get('requestToUserId').hasError(validation.type) && (addEmployeeAbsentForm.get('requestToUserId').dirty || addEmployeeAbsentForm.get('requestToUserId').touched)\"\n                                        style=\"color: red;margin-left: 1%;\">\n                                        {{ validation.message }}\n                                    </div>\n                                </div>\n                    </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Reason:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                        <input class=\"form-control\" type=\"text\" id=\"leaveReason\" placeholder=\"Enter Leave Reason\"\n                        formControlName=\"reason\">\n                    <div *ngFor=\"let validation of absentFieldValidationMessage.reason\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"addEmployeeAbsentForm.get('reason').hasError(validation.type) && (addEmployeeAbsentForm.get('reason').dirty || addEmployeeAbsentForm.get('reason').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n         <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>Type:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                    <select class=\"dropdown dropdown-toggle form-control\" id=\"absentLeave\" formControlName=\"leaveTypeId\">\n                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Enter Leave Type</option>\n                            <option class=\"dropdown-item\" *ngFor=\"let leave of leaveListData\"  value=\"{{leave.leaveTypeName}}\">\n                               {{leave.leaveTypeName}}\n                            </option>\n                         </select>\n                <div *ngFor=\"let validation of absentFieldValidationMessage.leaveTypeId\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEmployeeAbsentForm.get('leaveTypeId').hasError(validation.type) && (addEmployeeAbsentForm.get('leaveTypeId').dirty || addEmployeeAbsentForm.get('leaveTypeId').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n            <label class=\"col-sm-6 control-label\"><b>From Date:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n            <div class=\"col-sm-offset-2\">\n                <input class=\"form-control\" type=\"date\" id=\"txtStartDate\" placeholder=\"Enter From Date\" (change)=\"DateCheck()\"\n                    formControlName=\"fromDate\">\n                <div *ngFor=\"let validation of absentFieldValidationMessage.fromDate\">\n                    <div style=\"color: red;margin-left: 1%;\"\n                        *ngIf=\"addEmployeeAbsentForm.get('fromDate').hasError(validation.type) && (addEmployeeAbsentForm.get('fromDate').dirty || addEmployeeAbsentForm.get('fromDate').touched)\"\n                        style=\"color: red;margin-left: 1%;\">\n                        {{ validation.message }}\n                    </div>\n                </div>\n            </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>To Date:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"date\" id=\"txtEndDate\" placeholder=\"Enter To Date\" (change)=\"DateCheck()\"\n                        formControlName=\"toDate\">\n                    <div *ngFor=\"let validation of absentFieldValidationMessage.toDate\">\n                        <div style=\"color: red;margin-left: 14px;\"\n                            *ngIf=\"addEmployeeAbsentForm.get('toDate').hasError(validation.type) && (addEmployeeAbsentForm.get('toDate').dirty || addEmployeeAbsentForm.get('toDate').touched)\"\n                            style=\"color: red;margin-left: 14px;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>From Leave For:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                <div class=\"col-sm-offset-2\">\n                    <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"fromLeaveFor\">\n                            <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Enter From Leave For</option>\n                            <option class=\"dropdown-item\" *ngFor=\"let leave of formToLeaveFor\"  value=\"{{leave}}\">\n                               {{leave}}\n                            </option>\n                         </select>\n                    <div *ngFor=\"let validation of absentFieldValidationMessage.fromLeaveFor\">\n                        <div style=\"color: red;margin-left: 1%;\"\n                            *ngIf=\"addEmployeeAbsentForm.get('fromLeaveFor').hasError(validation.type) && (addEmployeeAbsentForm.get('fromLeaveFor').dirty || addEmployeeAbsentForm.get('fromLeaveFor').touched)\"\n                            style=\"color: red;margin-left: 1%;\">\n                            {{ validation.message }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                    <label class=\"col-sm-6 control-label\"><b>To Leave For:&nbsp;<span style=\"color: darkred\">*</span></b></label>\n                    <div class=\"col-sm-offset-2\">\n                        <select class=\"dropdown dropdown-toggle form-control\" formControlName=\"toLeaveFor\">\n                                <option class='dropdown-item' ng-selected=\"true\" value=\"\" disabled selected>Enter To Leave For</option>\n                                <option class=\"dropdown-item\" *ngFor=\"let leave of formToLeaveFor\" value=\"{{leave}}\">\n                                {{leave}}\n                                </option>\n                             </select>\n                        <div *ngFor=\"let validation of absentFieldValidationMessage.toLeaveFor\">\n                            <div style=\"color: red;margin-left: 1%;\"\n                                *ngIf=\"addEmployeeAbsentForm.get('toLeaveFor').hasError(validation.type) && (addEmployeeAbsentForm.get('toLeaveFor').dirty || addEmployeeAbsentForm.get('toLeaveFor').touched)\"\n                                style=\"color: red;margin-left: 1%;\">\n                                {{ validation.message }}\n                            </div>\n                        </div>\n                    </div>\n          </div>\n          <div class=\"form-group col-md-6\">\n                <label class=\"col-sm-6 control-label\"><b>Leave Status:</b></label>\n                <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\"\n                      formControlName=\"status\" disabled>\n                </div>\n            </div>\n     </div>\n        <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addEmployeeAbsentForm.invalid\">Submit</button>\n                <button type=\"button\" class=\"btn btn-danger\" routerLink=\"../list-leave\">Cancel</button>\n\n            </div>\n        </div>\n    </form>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { LeaveManagementComponent } from './leave-management.component';\nimport { AddEarnedLeaveComponent } from './manage-earned-leave/add-earned-leave/add-earned-leave.component';\nimport { ListEarnedLeaveComponent } from './manage-earned-leave/list-earned-leave/list-earned-leave.component';\nimport { UpdateEarnedLeaveComponent } from './manage-earned-leave/update-earned-leave/update-earned-leave.component';\nimport { ListLeaveComponent } from './manage-leave-status/list-leave/list-leave.component';\nimport { MarkAbsentComponent } from './manage-leave-status/mark-absent/mark-absent.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : LeaveManagementComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n       path: 'list-earned-leave',\n      component: ListEarnedLeaveComponent,\n      },\n      {\n        path: 'add-earned-leave',\n       component: AddEarnedLeaveComponent,\n       },\n       {\n        path: 'update-earned-leave/:earnedLeaveId/:employeeId',\n       component: UpdateEarnedLeaveComponent,\n       },\n       {\n        path: 'list-leave',\n       component: ListLeaveComponent,\n       },\n       {\n        path: 'mark-absent',\n       component: MarkAbsentComponent,\n       },\n      {\n        path:'',\n        redirectTo :'list-earned-leave',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class LeaveManagementRoutingModule { }\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EmployeeService } from 'src/app/pages/employee-wizard/services/employee.service';\nimport { UtilitiesService } from 'src/app/utilities/utilities.service';\nimport { LeaveApiService } from '../../../leave-types/service-leave/leave-api.service';\nimport { LeaveServicesService } from '../../manage-earned-leave/services/leave-services.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mark-absent',\n  templateUrl: './mark-absent.component.html',\n  styleUrls: ['./mark-absent.component.scss']\n})\nexport class MarkAbsentComponent implements OnInit {\n\n  addEarnedLeaveForm: any;\n  employeeDetails: any;\n  errorMsg: boolean;\n  successMessage: boolean;\n  errMsg: string;\n  successMsg: string;\n  formToLeaveFor = ['First Half','Second Half','Full Day'];\n  addEmployeeAbsentForm: any;\n  leaveListData: any;\n  showCard:any = {};\n  employeeList: any;\n  employeeTlList: any;\n  showTlOption = false;\n  status = 'Active';\n\n\n  constructor(private fb: FormBuilder,\n    private employeeListAPI: EmployeeService,\n    private api: LeaveApiService,\n    private router: Router,\n    private util: UtilitiesService,\n    private ngZone: NgZone) { }\n\n  ngOnInit() {\n    this.manangeEmployeeLeave();\n    this.leaveList();\n    this.getEmployeeList();\n  }\n\n  manangeEmployeeLeave(){\n    try{\n      this.addEmployeeAbsentForm = this.fb.group({\n          userId: new FormControl('',Validators.required),\n          reason: new FormControl('',Validators.required),\n          leaveTypeId: new FormControl('',Validators.required),\n          fromDate: new FormControl('',Validators.required),\n          toDate: new FormControl('',Validators.required),\n          fromLeaveFor: new FormControl('',Validators.required),\n          toLeaveFor: new FormControl('',Validators.required),\n          status: new FormControl('Unsanctioned',Validators.required),\n          requestToUserId: new FormControl('', Validators.required)\n      })\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  DateCheck(){\n\n    var StartDate= (document.getElementById('txtStartDate')as HTMLInputElement).value;\n    var EndDate= (document.getElementById('txtEndDate')as HTMLInputElement).value;\n    var eDate = new Date(EndDate);\n    var sDate = new Date(StartDate);\n    if(StartDate!= '' && StartDate!= '' && sDate> eDate)\n      {\n      alert(\"Please ensure that the End Date is after than the Start Date.\");\n      (document.getElementById('txtEndDate')as HTMLInputElement).value = \"\";\n      }\n  }\n  absentFieldValidationMessage = {\n    'userId':[\n      {type:'required', message:'Employee Name is Required'}\n    ],\n    'reason':[\n      {type:'required', message:'Leave Reason is Required'}\n    ],\n    'leaveTypeId':[\n      {type:'required', message:'Leave Type is Required'}\n    ],\n    'fromDate':[\n      {type:'required', message:'Start Date is Required'},\n    ],\n    'toDate':[\n      {type:'required', message:'To Date is Required'}\n    ],\n    'fromLeaveFor':[\n      {type:'required', message:'From Leave is Required'},\n    ],\n    'toLeaveFor':[\n      {type:'required', message:'To Leave is Required'}\n    ],\n    'requestToUserId':[\n      {type:'required', message:'TL/Manager Name is Required'}\n    ]\n  }\n\n  leaveList() {\n    try{\n      this.api.getListData().subscribe(data => {\n        if (data.status === 'success') {\n          this.leaveListData = data.leaveTypes;\n\n          if(data.leaveTypes[0].length == 0){\n            // this.route.navigateByUrl(\"/pages/leave-types/add-leave-types\");\n          }\n          else{\n            const len = Object.keys(this.leaveListData).length;\n\n            for (var i = 0; i < len; i++) {\n              this.showCard[this.leaveListData[i]._id] = true;\n            }\n          }\n\n        }\n      })\n    }catch(err){\n      console.log(err.message);\n    }\n\n  }\n\n// Get Employee List\ngetEmployeeList(){\n  try{\n    this.employeeListAPI.getEmployeeList(this.status).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeList = data.data;\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Get Employee TL/Manager\ngetEmployeeTL(employeeId){\n  try{\n    this.employeeListAPI.employeeTlList(employeeId).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.employeeTlList = data.data.parentUsersIds;\n        this.showTlOption = true;\n      }\n    })\n  }catch(err){\n    console.log(err);\n\n  }\n}\n\n// Mark Absent Form\nmarkEmployeeAbsent(){\n  try{\n    this.api.markEmployeeAbsent(this.addEmployeeAbsentForm.value,this.addEmployeeAbsentForm.get('userId').value).subscribe((data)=>{\n      if(data.status === 'success'){\n        this.successMessage = true;\n        this.successMsg = data.message;\n        this.errorMsg = false;\n        setTimeout(()=>{\n          this.handleErrors();\n          this.ngZone.run(()=> this.router.navigateByUrl('/pages/leave-management/list-leave'));\n        },2000)\n      } else if(data.status === 'error'){\n        this.successMessage = false;\n        this.errMsg = data.message;\n        this.errorMsg = true;\n        setTimeout(()=>{\n          this.handleErrors();\n        },3000)\n      }\n    })\n  }catch(err){\n    console.log(err);\n  }\n}\n\n// Handle Errors\nhandleErrors(){\n  this.successMessage = false;\n  this.successMsg = '';\n  this.errorMsg = false;\n  this.errMsg = '';\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddEarnedLeaveComponent } from './manage-earned-leave/add-earned-leave/add-earned-leave.component';\nimport { RouterModule } from '@angular/router';\nimport { LeaveManagementRoutingModule } from './leave-management-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ListEarnedLeaveComponent } from './manage-earned-leave/list-earned-leave/list-earned-leave.component';\nimport { UpdateEarnedLeaveComponent } from './manage-earned-leave/update-earned-leave/update-earned-leave.component';\nimport { ListLeaveComponent } from './manage-leave-status/list-leave/list-leave.component';\nimport { MarkAbsentComponent } from './manage-leave-status/mark-absent/mark-absent.component';\n\n@NgModule({\n  declarations: [ AddEarnedLeaveComponent, ListEarnedLeaveComponent, UpdateEarnedLeaveComponent, ListLeaveComponent, MarkAbsentComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    LeaveManagementRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxSpinnerModule\n  ]\n})\nexport class LeaveManagementModule { }\n"]}