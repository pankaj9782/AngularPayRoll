{"version":3,"sources":["webpack:///src/app/pages/report/report.component.ts","webpack:///src/app/pages/report/report-service/report-api.service.ts","webpack:///src/app/pages/report/report.component.html","webpack:///src/app/pages/report/update-report/update-report.component.html","webpack:///src/app/pages/report/report-routing.module.ts","webpack:///src/app/pages/report/update-report/update-report.component.ts","webpack:///src/app/pages/report/add-report/add-report.component.ts","webpack:///src/app/pages/report/list-report/list-report.component.ts","webpack:///src/app/pages/report/report.module.ts","webpack:///src/app/pages/report/list-report/list-report.component.html"],"names":["ReportComponent","ReportApiService","http","endpoint","environment","apiBaseUrl","headers","set","error","errorMessage","ErrorEvent","message","status","console","log","throwError","err","companyId","sessionStorage","getItem","this","get","pipe","catchError","errorMgmt","data","post","paymentHeadId","UpdateReportComponent","AddReportComponent","ListReportComponent","ReportModule","ReportRoutingModule","route","path","component","canActivate","children","api","fb","demo","demo1","existingDataList","salarySlipData","subscribe","existingData","push","grossAmt","gross","amt","netSalaryAmt","netSalary","totalDeductionAmt","totalDeduction","fixddata","employeeDetails","fixdetails","Object","keys","map","key","imgData","doc","setFontSize","rect","text","maxLength","textY","deductions","length","earnigs","i","rectY","undefined","label","save","headerSpace","generatePdf","accountpdfPdf","ngZone","router","successMessage","errorMsg","paymentHeadTypes","snapshot","paramMap","updatePaymentHeadValidation","paymentHeadUpdateForm","group","title","type","getPaymentHeadData","len","updatePaymentHeads","value","run","navigateByUrl","successMsg","errMsg","updatePaymenthead","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss']\n})\n\nexport class ReportComponent implements OnInit {\n\n  constructor() {}\n  ngOnInit() {\n  \n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { Payment } from  '../../../auth/payment'; \nimport { UpdatePaymentHeadl } from '../../../auth/updatePaymentHeadl';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ReportApiService {\n\n  /** Here we provide daynamic environment value from environment */\n  endpoint: string = environment.apiBaseUrl;\n  headers = new HttpHeaders().set('Contant-Type', 'application/x-www-form-urlencoded');//Set a Header Value.\n\n  constructor(private http: HttpClient) { }\n\n/**Create method for manage errors when request and return response from the server*/\nerrorMgmt(error: HttpErrorResponse) {\n  try {\n    let errorMessage = '';\n    /** Handle client side error */\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    }\n    /** Handle server side error */\n    else {\n      errorMessage = `Error code:${error.status}\\nMessage:${errorMessage}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  catch (err) {\n    console.log(err.message);\n  }\n}\n\n/**get payment heads data  */\ngetPaymentHeadData():Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/list-payment-heads/${companyId}`;\n    return this.http.get(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n/** add payment heads */\naddPaymentHeads(data:Payment):Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL =`${this.endpoint}/company/add-payment-head/${companyId}`;\n    return this.http.post(apiURL,data).pipe(\n      \n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n/**update payment heads */\nupdatePaymentHeads(data:UpdatePaymentHeadl,paymentHeadId:String):Observable<any>{\n  try{\n    const companyId = sessionStorage.getItem(\"companyId\");\n    let apiURL = `${this.endpoint}/company/update-payment-head/${companyId}/${paymentHeadId}`;\n    return this.http.post(apiURL,data).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n/**remove payment head */ \nremovePaymentHead(paymentHeadId:String):Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/company/delete-payment-head/${paymentHeadId}`;\n    return this.http.delete(apiURL).pipe(\n      catchError(this.errorMgmt)\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n\nsalarySlipData():Observable<any>{\n  try{\n    let apiURL = `${this.endpoint}/employee/salaray-slip`;\n    return this.http.get(apiURL).pipe(\n    )\n  }catch(err){\n    console.log(err);\n  }\n}\n\n\n\n}\n","<router-outlet></router-outlet>","<div class=\"card card-u</div>ser\">\n   <div class=\"card-header\">\n      <h2 class=\"card-title text-center\">Update Payment Heads</h2>\n   </div>\n   <div class=\"card-body\">\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-danger\" *ngIf=\"errorMsg\">\n            <strong>{{errMsg}}</strong>\n         </p>\n      </div>\n      <div class=\"col-sm-offset-2\">\n         <p class=\"alert alert-success\" *ngIf=\"successMessage\">\n            <strong>{{successMsg}}</strong>\n         </p>\n      </div>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"paymentHeadUpdateForm\" (ngSubmit)=\"updatePaymenthead()\" >\n            <div class=\"form-group\">\n               <label class=\"col-sm-6 control-label\"><b>title: </b></label>\n               <div class=\"col-sm-offset-2\">\n                  <input class=\"form-control\" type=\"text\" id=\"title\" placeholder=\"Enter Title\"\n                     formControlName=\"title\">\n               </div>\n            </div>\n            <div class=\"form-group\">\n                  <label class=\"col-sm-6 control-label\"><b>type:</b></label>\n                  <div class=\"col-sm-offset-2\">\n                  <select id=\"type\" class=\"dropdown dropdown-toggle form-control\" formControlName=\"type\" style=\"width:100%; height: 40px;\">\n                        <option *ngFor=\"let h of paymentHeadTypes\" [value]=\"h\">{{h}}</option>\n                  </select>\n                  </div>\n               </div>\n            \n            <div class=\"form-group\">\n               <div class=\"col-sm-offset-2 col-sm-10\">\n                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"paymentHeadUpdateForm.invalid\">Update</button>\n                  <button type=\"submit\" class=\"btn btn-danger\" routerLink=\"../../list-payment-heads\">Cancel</button>\n               </div>\n            </div>\n         </form>\n   </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReportComponent } from './report.component';\nimport { AuthGuard } from 'src/app/authGuard/auth.guard';\nimport { ListReportComponent } from './list-report/list-report.component';\nimport { AddReportComponent } from './add-report/add-report.component';\nimport { UpdateReportComponent } from './update-report/update-report.component';\n\nconst route : Routes = [\n  {\n    path :'',\n    component : ReportComponent,\n    canActivate:[AuthGuard],\n    children :[\n      {\n        path: 'list-report',\n        component: ListReportComponent,\n      },\n      {\n        path: 'add-report',\n        component: AddReportComponent\n      },\n      {\n        path: 'update-report/:jobCategoryId',\n        component: UpdateReportComponent\n      },\n      {\n        path:'',\n        redirectTo :'list-report',\n        pathMatch:'full',\n      },\n    ],\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n  ]\n})\nexport class ReportRoutingModule { }","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ReportApiService } from '../report-service/report-api.service';\n\n@Component({\n  selector: 'app-update-report',\n  templateUrl: 'update-report.component.html'\n})\n\nexport class UpdateReportComponent implements OnInit {\n\n  paymentHeadUpdateForm: any;\n  successMsg: String;\n  successMessage: boolean = false;\n  errMsg: String;\n  errorMsg: boolean = false;\n  companyNameStore: [];z\n  showCard: any;\n  companyNameId: any;\n  public companyName: [];\n  public companyId: any;\n  public leaveTypeId: any;\n  public jobCategoryId: any;\n  existingData: any[];\n  paymentHeadTypes = ['Addition','Deduction'];\n  paymentHeadId;\n\n \n\nconstructor(private api:ReportApiService, private fb:FormBuilder,private route:ActivatedRoute,private ngZone: NgZone,private router:Router){}\n\nngOnInit() {\n  this.existingDataList();\n  this.paymentHeadId = this.route.snapshot.paramMap.get(\"jobCategoryId\");\n  this.updatePaymentHeadValidation();\n}\n\nupdatePaymentHeadValidation() {\n  try {\n    this.paymentHeadUpdateForm = this.fb.group({\n        title: new FormControl(null),\n        type: new FormControl(null)\n      })\n    }\n  catch (err) {\n    console.log(err);\n  }\n}\n\nexistingDataList(){\n  this.api.getPaymentHeadData().subscribe(data=>{\n    this.existingData = data.data;\n    const len = Object.keys(this.existingData).length; \n    for(var i=0;i<len;i++){\n      this.paymentHeadUpdateForm = this.fb.group({\n        title: new FormControl(this.existingData[i].title),\n        type: new FormControl(this.existingData[i].type),\n      })\n    }\n  })\n}\n\nupdatePaymenthead(){\n  this.api.updatePaymentHeads(this.paymentHeadUpdateForm.value,this.paymentHeadId).subscribe(data=>{\n    if(data.data === 'success'|| data.data === 200){\n      this.successMessage = true ;\n      this.ngZone.run(() => this.router.navigateByUrl('/pages/payment-heads/list-payment-heads'));          \n      this.errorMsg = false ;\n      this.successMsg = data.message;\n    }else{\n      this.errorMsg = true; \n      this.successMessage = false;\n      this.errMsg = data.message;\n    }\n  })\n}\n\n} ","import { Component, OnInit,NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as jsPDF from 'jspdf'\n\n@Component({\n    selector: 'app-add-report',\n    templateUrl: './add-report.component.html'\n})\n\nexport class AddReportComponent implements OnInit {\n    \n    constructor(){}\n\n    ngOnInit() {\n    }\n\n  }","import { Component, OnInit,ViewChild,ElementRef } from '@angular/core';\nimport { ReportApiService } from '../report-service/report-api.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport * as jsPDF from 'jspdf'\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { state } from '@angular/animations';\nimport * as html2canvas from \"html2canvas\";\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n\n@Component ({\n    selector: 'app-list-report',\n    templateUrl: './list-report.component.html',\n    styleUrls: ['./list-report.component.css']\n})\n\nexport class ListReportComponent implements OnInit {\n\n  paymentData: any[];\n  convetForm: any;\n  existingData: any[];\n  fixdetails: any[];\n  deductionList:any[];\n  earningsList:any[];\n  demo = [];\n  demo1 = [];\n  grossAmt;\n  netSalaryAmt;\n  totalDeductionAmt;\n  imgData;\n\n\nconstructor(private api:ReportApiService,private fb:FormBuilder){}\n\nngOnInit() {\n  this.existingDataList();\n}\n  \nexistingDataList(){\n  this.api.salarySlipData().subscribe(data=>{\n  this.existingData = data.data;\n  this.demo.push(data.data);\n  this.grossAmt = data.data.gross.amt;\n  this.netSalaryAmt = data.data.netSalary.amt;\n  this.totalDeductionAmt = data.data.totalDeduction.amt;\n\n  let fixddata = data.data.employeeDetails;\n  this.fixdetails = Object.keys(fixddata).map(key => fixddata[key]); // static header data of pdf\n  this.fixdetails = Object.keys(fixddata).map(key => fixddata[key]); // static header data of pdf\n\n  this.imgData= this.fixdetails[2];\n\n  })\n}\n\n// download pdf start\ngeneratePdf()\n{\n  var doc = new jsPDF();\n\n  doc.setFontSize(12);\n  doc.rect(5, 20, 150, 8);\n  doc.text(this.fixdetails[0], 75, 26, \"center\", \"a\");\n  // doc.addImage(this.imgData, 'png', 10, 1, 50, 50, 'logo');\n  doc.rect(5, 28, 150, 8);\n  doc.text(\"Salary Slip for the Month of April, 2017\", 75, 34, \"center\", \"a\");\n  doc.rect(5, 36, 75, 8);\n  doc.text(\"Employee Name\", 22, 42, \"center\", \"a\");\n  doc.rect(80, 36, 75, 8);\n  doc.text(this.fixdetails[1], 120, 42, \"center\", \"a\");\n\n  doc.rect(5, 44, 50, 13);\n  doc.text(\"Account No.\", 18, 52, \"center\", \"a\");\n  doc.rect(55, 44,50 , 13);\n  doc.text(this.fixdetails[3], 80, 52, \"center\", \"a\");\n  doc.rect(105, 44, 50, 13);\n  doc.text(\"Designation\", 125, 52, \"center\", \"a\");\n  doc.rect(155, 44, 50, 13);\n  doc.text(this.fixdetails[4], 175, 52, \"center\", \"a\");\n\n  doc.rect(5, 57, 50, 8);\n  doc.text(\"Days Present\",19, 63, \"center\", \"a\");\n  doc.rect(55, 57, 50, 8);\n  doc.text(this.fixdetails[5], 80, 63, \"center\", \"a\");\n  doc.rect(105, 57, 50, 8);\n  doc.text(\"Earned Leaves\", 125, 63, \"center\", \"a\");\n  doc.rect(155, 57, 50, 8);\n  doc.text(this.fixdetails[1], 175, 63, \"center\", \"a\");\n  \n  doc.rect(5, 65, 100, 8);\n  doc.text(\"ESIC No :-\", 17, 71, \"center\", \"a\");\n  doc.rect(105, 65, 100, 8);\n  doc.text(\"P.F. No :-\", 120, 71, \"center\", \"a\");\n  \n  doc.rect(5, 73, 65, 8);\n  doc.text(\"Leave Without Sanction\", 29,79, \"center\", \"a\");\n  doc.rect(70, 73, 35, 8);\n  doc.text(this.fixdetails[9], 83, 79, \"center\", \"a\");\n  doc.rect(105, 73, 60, 8);\n  doc.text(\"Payable Days\", 125, 79, \"center\", \"a\");\n  doc.rect(165, 73, 40, 8);\n  doc.text(this.fixdetails[10], 180, 79, \"center\", \"a\"); \n  \n  doc.rect(5,   81, 65, 8);\n  doc.text(\"Total CTC/Month\", 22, 87, \"center\", \"a\"); \n  doc.rect(70, 81, 35, 8);\n  doc.text(this.fixdetails[11], 85, 87, \"center\", \"a\"); \n  doc.rect(105, 81, 60, 8);\n  doc.text(\"Total CTC/Annum\", 129, 87, \"center\", \"a\");\n  doc.rect(165, 81, 40, 8);\n  doc.text(this.fixdetails[12], 180, 87, \"center\", \"a\"); \n  \n  doc.rect(5,   89, 100, 12);\n  doc.text(\"Earnings\", 40, 97, \"center\", \"a\");\n  doc.rect(105, 89, 100, 12);\n  doc.text(\"Deductions\", 135, 97, \"center\", \"a\");\n\n  doc.rect(5, 101, 65, 8);\n  doc.rect(70, 101, 35, 8);\n  doc.text(\"Amount\", 85, 107, \"center\", \"a\");\n  doc.rect(105, 101, 60, 8);\n  doc.rect(165, 101, 40, 8);\n  doc.text(\"Amount\", 185, 107, \"center\", \"a\");\n\n// Daynamic part start\n  var textY =115;\n  var maxLength;\n  if(this.demo[0].deductions.length > this.demo[0].earnigs.length)\n  {\n    maxLength = this.demo[0].deductions.length;\n  } else {\n    maxLength = this.demo[0].earnigs.length;\n  }\n  for(var i=0;i<maxLength;i++)\n  {\n    var rectY = textY - 6;\n    if(this.demo[0].earnigs[i] == undefined){\n        doc.rect(5,   rectY, 65, 8);\n        doc.rect(70,  rectY, 35, 8);\n        textY = textY + 8;\n    } else {\n      doc.rect(5,   rectY, 65, 8);\n      doc.text(this.demo[0].earnigs[i].label, 8, textY, \"left\", \"a\");\n      doc.rect(70,  rectY, 35, 8);\n      doc.text(\"xxx\", 95, textY, \"center\", \"a\");\n    }\n    if(this.demo[0].deductions[i]  == undefined){\n      doc.rect(105, rectY, 60, 8);\n      doc.rect(165, rectY, 40, 8);\n      textY = textY + 8;\n    } else {\n      doc.rect(105, rectY, 60, 8);\n      doc.text(this.demo[0].deductions[i].label, 117, textY, \"left\", \"a\");\n      doc.rect(165, rectY, 40, 8);\n      doc.text(\"xxx\", 195, textY, \"center\", \"a\");\n      textY = textY + 8;\n    }\n  }\n\n  textY = textY -6;\n  doc.rect(5, textY, 65, 8);\n  doc.text(\"Gross\", 13, textY+6, \"center\", \"a\");\n  doc.rect(70, textY, 35, 8);\n  doc.text(this.grossAmt, 90, textY+6, \"center\", \"a\");\n  doc.rect(105, textY, 60, 8);\n  doc.text(\"Tootal Deductions\", 134, textY+6, \"center\", \"a\");\n  doc.rect(165, textY, 40, 8);\n  doc.text(this.totalDeductionAmt, 192, textY+6, \"center\", \"a\");\n\n  textY = textY+ 8;\n  doc.rect(5, textY, 65, 8);\n  doc.text(\"Net Salary\", 17, textY+6, \"center\", \"a\");\n  doc.rect(5, textY, 200, 8);\n  doc.text(this.netSalaryAmt, 90, textY+6, \"center\", \"a\");\n\n  textY = textY+ 8;\n  doc.rect(5, textY, 200, 8);\n  \n  doc.save('my.pdf');\n}\n// download pdf end \n\n// account pdf start \naccountpdfPdf(){\n\n \n  var doc = new jsPDF('a','mm',[700,1000]);\n\n  doc.setFontSize(10);\n\n  var headerSpace = 30; \n\n  doc.text(18, headerSpace+7, \"To\");\n\n  doc.text(23, headerSpace+20, \"Indusind bank, Jaipur\");\n  doc.text(190, headerSpace+7, \"Date:10/2019\");\n\n  doc.text(80, headerSpace+30, \"Sub: Salary Transfer for the Month of sep 2019\");\n\n  doc.rect(15, headerSpace+35, 200, 30);\n  doc.rect(15, headerSpace+65, 200, 5);\n\n  doc.rect(15, headerSpace+70, 15, 5);\n  doc.rect(15, headerSpace+70, 70, 5);\n  doc.rect(15, headerSpace+70, 105, 5);\n  doc.rect(15, headerSpace+70, 140, 5);\n  doc.rect(15, headerSpace+70, 200, 5); \n\n  doc.rect(15, headerSpace+75, 15, 5); doc.text(\"Sr. No\", 17,  headerSpace+79, \"left\", \"a\");\n  doc.rect(15, headerSpace+75, 70, 5); doc.text(\"Name\", 31, headerSpace+79, \"left\", \"a\");\n  doc.rect(15, headerSpace+75, 105, 5); doc.text(\"Account Number\", 86,headerSpace+79, \"left\", \"a\");\n  doc.rect(15, headerSpace+75, 140, 5); doc.text(\"Amount\", 123, headerSpace+79, \"left\", \"a\");\n  doc.rect(15, headerSpace+75, 200, 5);doc.text(\"Salary for the month\", 157, headerSpace+79, \"left\", \"a\");\n\n  headerSpace = headerSpace +80;\n  for(var i=0;i<20;i++)\n  {\n    doc.rect(15, headerSpace, 15, 5);\n    doc.rect(15, headerSpace, 70, 5);\n    doc.rect(15, headerSpace, 105, 5);\n    doc.rect(15, headerSpace, 140, 5);\n    doc.rect(15, headerSpace, 200, 5);\n    headerSpace = headerSpace+5;\n  } \n\n  // doc.addPage();\n\n  doc.save('my.pdf');\n}\n// accoutn pdf end\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportRoutingModule } from './report-routing.module';\nimport { ReportComponent } from './report.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ListReportComponent } from './list-report/list-report.component';\nimport { AddReportComponent } from './add-report/add-report.component';\nimport { UpdateReportComponent } from './update-report/update-report.component';\n\n@NgModule({\n  declarations: [\n    ReportComponent,\n    ListReportComponent,\n    AddReportComponent,\n    UpdateReportComponent\n  ],\n  \n  imports: [\n    CommonModule,\n    ReportRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule    \n  ]\n})\nexport class ReportModule { }\n","<!-- <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n        <h2>Report</h2>\n    </div>\n    <div>\n        <h5 style=\"margin-left:5%;\">Payoll Overview</h5>\n\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <button class=\"btn btn-primary\" type=\"button\"style=\"width: 70%; margin-left: 5%;\" >Payoll Summary</button>\n            </div>\n            <div class=\"col-md-4\">\n                <button class=\"btn btn-primary\" type=\"button\"style=\"width: 70%; margin-left: 5%\" >Employee Pay Summary</button>\n            </div>\n            <div class=\"col-md-4\">\n                <button class=\"btn btn-primary\" type=\"button\"style=\"width: 70%; margin-left: 5%\" >Employee Salary Ledger</button>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <button class=\"btn btn-primary\" type=\"button\"style=\"width: 70%; margin-left: 5%\" >Reimbursement Summary</button>    \n            </div>\n        </div>\n    </div>\n    <hr>\n    <div>\n        <h5 style=\"margin-left:5%;\"> Statutory Report Overview</h5>\n        <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <button class=\"btn btn-primary\" type=\"button\" style=\"width: 70%; margin-left:5%;\" >EPF Summary</button>\n                </div>\n                <div class=\"col-md-4\">\n                    <button class=\"btn btn-primary\" type=\"button\" style=\"width: 70%; margin-left:5%;\" >ESI Summary</button>\n                </div>\n                <div class=\"col-md-4\">\n                    <button class=\"btn btn-primary\" type=\"button\" style=\"width: 70%; margin-left:5%;\" >Tax Deduction Summary</button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <button class=\"btn btn-primary\" type=\"button\" style=\"width: 70%; margin-left:5%;\" >Addition Deduction Summary</button>    \n                </div>\n            </div>\n    </div>\n</div>  -->\n\n<!-- <input #name type=\"text\" id=\"name\">\n<button (click)=\"downloadPDF(name.value)\">Click</button> -->\n\n<!-- data form tanfer value  -->\n\n<!-- <div class=\"card card-user\">\n    <div class=\"card-body\">\n       <form class=\"form-horizontal\"  [formGroup]=\"convetForm\" (ngSubmit)=\"updatePaymenthead()\" >\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2\">\n                   <input class=\"form-control\" type=\"text\"  placeholder=\"Enter Title\" formControlName=\"title\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2\">\n                    <input class=\"form-control\" type=\"text\"  placeholder=\"Enter Title\" formControlName=\"name\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                   <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div> -->\n \n\n\n<!-- testing use  -->\n\n<!-- <table >\n        <caption>A complex table</caption>\n        <thead>\n           <tr>\n              <th colspan=\"3\">Invoice #123456789</th>\n              <th>14 January 2025\n           </tr>\n           <tr>\n              <td colspan=\"2\">\n                 <strong>Pay to:</strong><br>\n                 Acme Billing Co.<br>\n                 123 Main St.<br>\n                 Cityville, NA 12345\n              </td>\n              <td colspan=\"2\">\n                 <strong>Customer:</strong><br>\n                 John Smith<br>\n                 321 Willow Way<br>\n                 Southeast Northwestershire, MA 54321\n              </td>\n           </tr>\n        </thead>\n        <tbody>\n           <tr>\n              <th>Name / Description</th>\n              <th>Qty.</th>\n              <th>@</th>\n              <th>Cost</th>\n           </tr>\n           <tr>\n              <td>Paperclips</td>\n              <td>1000</td>\n              <td>0.01</td>\n              <td>10.00</td>\n           </tr>\n           <tr>\n              <td>Staples (box)</td>\n              <td>100</td>\n              <td>1.00</td>\n              <td>100.00</td>\n           </tr>\n        </tbody>\n        <tfoot>\n           <tr>\n              <th colspan=\"3\">Subtotal</th>\n              <td> 110.00</td>\n           </tr>\n           <tr>\n              <th colspan=\"2\">Tax</th>\n              <td> 8% </td>\n              <td>8.80</td>\n           </tr>\n           <tr>\n              <th colspan=\"3\">Grand Total</th>\n              <td>$ 118.80</td>\n           </tr>\n        </tfoot>\n     </table> -->\n<!-- <div class=\"card\" id=\"salarySlip\" #salarySlip>\n    <table>\n            <tr>\n              <th style=\"text-align: center;\"><b>ARYAVRAT Infotech Pvt. Ltd</b></th>\n            </tr>\n            <tr>\n                <th style=\"text-align: center;\"><b>Salary Slip for the Month of April</b></th>\n            </tr>\n    </table>\n    <table>\n            <tr>\n              <td>Employee Name</td>\n              <td>Rajat Jain</td>\n            </tr>\n            <tr >\n              <td style=\"padding:15px;\">Account No</td>\n              <td>1000259665552</td>\n              <td>Designation</td>\n              <td>Developer</td>\n            </tr>\n            <tr>\n              <td>Days Present</td>\n              <td>29</td>\n              <td>Eaned Leaves</td>\n              <td>1</td>\n            </tr>\n            <tr>\n              <td>ESIC NO :-</td>\n              <td>NA</td>\n              <td>P.F. No :-</td>\n              <td>NA</td>\n            </tr>\n            <tr>\n              <td>Leave Without Sanction</td>\n              <td>0</td>\n              <td>Payable Days</td>\n              <td>30</td>\n            </tr>\n            <tr>\n              <td>Total CTC/Month</td>\n              <td>xxxx</td>\n              <td>Total CTC/Annum</td>\n              <td>xxxx</td>\n            </tr>\n    </table>\n    <table>\n            <tr>\n              <th style=\"padding:10px;\">Earnings</th>\n              <th>Deductions</th>\n            </tr>\n    </table>\n    <table>\n              <tr>\n                  <td>Basic Salay</td>\n                  <td>xxxx</td>\n                  <td>Provident Fund</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>HRA</td>\n                  <td>xxxx</td>\n                  <td>ESIC</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>Transport Allowance</td>\n                  <td>xxxx</td>\n                  <td>I. Tax</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>Medical Allowance</td>\n                  <td>xxxx</td>\n                  <td>Loan</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>Total CTC/Month</td>\n                  <td>xxxx</td>\n                  <td>Total CTC/Annum</td>\n                  <td>xxxx</td>\n                </tr>\n              <tr>\n                  <td>Total CTC/Month</td>\n                  <td>xxxx</td>\n                  <td>Total CTC/Annum</td>\n                  <td>xxxx</td>\n                </tr>\n              <tr>\n                  <td>Academic</td>\n                  <td>xxxx</td>\n                  <td>Advance</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>Uniform</td>\n                  <td>xxxx</td>\n                  <td>Misc. Deduction</td>\n                  <td>xxxx</td>\n                </tr>\n              <tr>\n                  <td>Performance Incentive</td>\n                  <td></td>\n                  <td>Professional Tax</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>Over Time Incentive</td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              <tr>\n                  <td>Arreas/Other Ern.</td>\n                  <td>xxx</td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              <tr>\n                  <td>Gross</td>\n                  <td>-</td>\n                  <td>Total Deductions</td>\n                  <td>-</td>\n                </tr>\n              <tr>\n                  <td>Net Salary</td>\n                  <td>xxx</td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              <tr>\n                  <td>Rupees Twenty One Thousand One Hunded Sisty Seven Only (in words)</td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              \n    </table>\n          \n\n<button (click)=\"list()\">click</button>\n\n</div> -->\n\n\n\n\n\n\n<!-- testing new js pdf code -->\n\n<img src=\"{{this.imgData}}\" #img >\n\n\n<button id=\"btnDownload\" (click)=\"generatePdf()\"> Download PDF </button>\n\n\n\n<button id=\"btnDownload\" (click)=\"accountpdfPdf()\"> Account pdf</button>\n\n\n"]}